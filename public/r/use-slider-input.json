{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-slider-input",
  "type": "registry:hook",
  "dependencies": [],
  "files": [
    {
      "path": "registry/default/hooks/use-slider-input.ts",
      "content": "import * as React from 'react';\nimport { useCallback, useState } from 'react';\n\ninterface UseSliderInputProps {\n  minValue: number;\n  maxValue: number;\n  initialValue: [number, number];\n}\n\nexport function useSliderInput({ minValue, maxValue, initialValue }: UseSliderInputProps) {\n  const [sliderValues, setSliderValues] = useState<[number, number]>(initialValue);\n  const [inputValues, setInputValues] = useState<[number, number]>(initialValue);\n\n  // Handle slider changes and sync with input values\n  const handleSliderChange = useCallback((values: [number, number]) => {\n    setSliderValues(values);\n    setInputValues(values);\n  }, []);\n\n  // Handle input changes for min or max\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>, index: 0 | 1) => {\n      const newValue = parseFloat(e.target.value);\n      if (!isNaN(newValue)) {\n        const updatedInputs = [...inputValues] as [number, number];\n        updatedInputs[index] = newValue;\n        setInputValues(updatedInputs);\n      }\n    },\n    [inputValues],\n  );\n\n  // Validate and update slider values when input loses focus or user presses Enter\n  const validateAndUpdateValue = useCallback(\n    (value: number, index: 0 | 1) => {\n      const updatedSlider = [...sliderValues] as [number, number];\n\n      if (index === 0) {\n        // Min value\n        updatedSlider[0] = Math.max(minValue, Math.min(value, sliderValues[1]));\n      } else {\n        // Max value\n        updatedSlider[1] = Math.min(maxValue, Math.max(value, sliderValues[0]));\n      }\n\n      setSliderValues(updatedSlider);\n      setInputValues(updatedSlider);\n    },\n    [sliderValues, minValue, maxValue],\n  );\n\n  return {\n    setSliderValues,\n    setInputValues,\n    sliderValues,\n    inputValues,\n    handleSliderChange,\n    handleInputChange,\n    validateAndUpdateValue,\n  };\n}\n",
      "type": "registry:hook"
    }
  ]
}
