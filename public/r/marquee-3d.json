{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "marquee-3d",
  "type": "registry:component",
  "dependencies": ["clsx", "tailwind-merge", "class-variance-authority", "radix-ui"],
  "registryDependencies": [
    "https://reui.io/r/avatar.json",
    "https://reui.io/r/card.json",
    "https://reui.io/r/marquee.json"
  ],
  "files": [
    {
      "path": "registry/default/components/marquee/3d.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from '@/registry/default/ui/avatar';\nimport { Card, CardContent } from '@/registry/default/ui/card';\nimport { Marquee } from '@/registry/default/ui/marquee';\n\n// Unique reviews data\nconst testimonials = [\n  {\n    name: 'Ava Green',\n    username: '@ava',\n    body: 'Cascade AI made my workflow 10x faster!',\n    img: 'https://randomuser.me/api/portraits/women/32.jpg',\n    country: 'ðŸ‡¦ðŸ‡º Australia',\n  },\n  {\n    name: 'Ana Miller',\n    username: '@ana',\n    body: 'Vertical marquee is a game changer!',\n    img: 'https://randomuser.me/api/portraits/women/68.jpg',\n    country: 'ðŸ‡©ðŸ‡ª Germany',\n  },\n  {\n    name: 'Mateo Rossi',\n    username: '@mat',\n    body: 'Animations are buttery smooth!',\n    img: 'https://randomuser.me/api/portraits/men/51.jpg',\n    country: 'ðŸ‡®ðŸ‡¹ Italy',\n  },\n  {\n    name: 'Maya Patel',\n    username: '@maya',\n    body: 'Setup was a breeze!',\n    img: 'https://randomuser.me/api/portraits/women/53.jpg',\n    country: 'ðŸ‡®ðŸ‡³ India',\n  },\n  {\n    name: 'Noah Smith',\n    username: '@noah',\n    body: 'Best marquee component!',\n    img: 'https://randomuser.me/api/portraits/men/33.jpg',\n    country: 'ðŸ‡ºðŸ‡¸ USA',\n  },\n  {\n    name: 'Lucas Stone',\n    username: '@luc',\n    body: 'Very customizable and smooth.',\n    img: 'https://randomuser.me/api/portraits/men/22.jpg',\n    country: 'ðŸ‡«ðŸ‡· France',\n  },\n  {\n    name: 'Haruto Sato',\n    username: '@haru',\n    body: 'Impressive performance on mobile!',\n    img: 'https://randomuser.me/api/portraits/men/85.jpg',\n    country: 'ðŸ‡¯ðŸ‡µ Japan',\n  },\n  {\n    name: 'Emma Lee',\n    username: '@emma',\n    body: 'Love the pause on hover feature!',\n    img: 'https://randomuser.me/api/portraits/women/45.jpg',\n    country: 'ðŸ‡¨ðŸ‡¦ Canada',\n  },\n  {\n    name: 'Carlos Ray',\n    username: '@carl',\n    body: 'Great for testimonials and logos.',\n    img: 'https://randomuser.me/api/portraits/men/61.jpg',\n    country: 'ðŸ‡ªðŸ‡¸ Spain',\n  },\n];\n\nfunction TestimonialCard({ img, name, username, body, country }: (typeof testimonials)[number]) {\n  return (\n    <Card className=\"w-50\">\n      <CardContent>\n        <div className=\"flex items-center gap-2.5\">\n          <Avatar className=\"size-9\">\n            <AvatarImage src={img} alt=\"@reui_io\" />\n            <AvatarFallback>{name[0]}</AvatarFallback>\n          </Avatar>\n          <div className=\"flex flex-col\">\n            <figcaption className=\"text-sm font-medium text-foreground flex items-center gap-1\">\n              {name} <span className=\"text-xs\">{country}</span>\n            </figcaption>\n            <p className=\"text-xs font-medium text-muted-foreground\">{username}</p>\n          </div>\n        </div>\n        <blockquote className=\"mt-3 text-sm text-econdary-foreground\">{body}</blockquote>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default function Marquee3D() {\n  return (\n    <div className=\"relative flex h-96 w-full flex-row items-center justify-center overflow-hidden gap-1.5 [perspective:300px]\">\n      <div\n        className=\"flex flex-row items-center gap-4\"\n        style={{\n          transform:\n            'translateX(-100px) translateY(0px) translateZ(-100px) rotateX(20deg) rotateY(-10deg) rotateZ(20deg)',\n        }}\n      >\n        {/* Vertical Marquee (downwards) */}\n        <Marquee vertical pauseOnHover repeat={3} className=\"[--duration:40s]\">\n          {testimonials.map((review) => (\n            <TestimonialCard key={review.username} {...review} />\n          ))}\n        </Marquee>\n        {/* Vertical Marquee (upwards) */}\n        <Marquee vertical pauseOnHover reverse repeat={3} className=\"[--duration:40s]\">\n          {testimonials.map((review) => (\n            <TestimonialCard key={review.username} {...review} />\n          ))}\n        </Marquee>\n        {/* Vertical Marquee (upwards) */}\n        <Marquee vertical pauseOnHover repeat={3} className=\"[--duration:40s]\">\n          {testimonials.map((review) => (\n            <TestimonialCard key={review.username} {...review} />\n          ))}\n        </Marquee>\n        {/* Vertical Marquee (upwards) */}\n        <Marquee vertical pauseOnHover reverse repeat={3} className=\"[--duration:40s]\">\n          {testimonials.map((review) => (\n            <TestimonialCard key={review.username} {...review} />\n          ))}\n        </Marquee>\n        {/* Gradient overlays for vertical marquee */}\n        <div className=\"pointer-events-none absolute inset-x-0 top-0 h-1/4 bg-gradient-to-b from-background\"></div>\n        <div className=\"pointer-events-none absolute inset-x-0 bottom-0 h-1/4 bg-gradient-to-t from-background\"></div>\n        <div className=\"pointer-events-none absolute inset-y-0 left-0 w-1/4 bg-gradient-to-r from-background\"></div>\n        <div className=\"pointer-events-none absolute inset-y-0 right-0 w-1/4 bg-gradient-to-l from-background\"></div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/avatar.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { cva, VariantProps } from 'class-variance-authority';\nimport { Avatar as AvatarPrimitive } from 'radix-ui';\n\nconst avatarStatusVariants = cva('flex items-center rounded-full size-2 border-2 border-background', {\n  variants: {\n    variant: {\n      online: 'bg-green-600',\n      offline: 'bg-zinc-600 dark:bg-zinc-300',\n      busy: 'bg-yellow-600',\n      away: 'bg-blue-600',\n    },\n  },\n  defaultVariants: {\n    variant: 'online',\n  },\n});\n\nfunction Avatar({ className, ...props }: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root data-slot=\"avatar\" className={cn('relative flex shrink-0 size-10', className)} {...props} />\n  );\n}\n\nfunction AvatarImage({ className, ...props }: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <div className={cn('relative overflow-hidden rounded-full', className)}>\n      <AvatarPrimitive.Image data-slot=\"avatar-image\" className={cn('aspect-square h-full w-full')} {...props} />\n    </div>\n  );\n}\n\nfunction AvatarFallback({ className, ...props }: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        'flex h-full w-full items-center justify-center rounded-full border border-border bg-accent text-accent-foreground text-xs',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarIndicator({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"avatar-indicator\"\n      className={cn('absolute flex size-6 items-center justify-center', className)}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarStatus({\n  className,\n  variant,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof avatarStatusVariants>) {\n  return <div data-slot=\"avatar-status\" className={cn(avatarStatusVariants({ variant }), className)} {...props} />;\n}\n\nexport { Avatar, AvatarFallback, AvatarImage, AvatarIndicator, AvatarStatus, avatarStatusVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/card.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\n// Define CardContext\ntype CardContextType = {\n  variant: 'default' | 'accent';\n};\n\nconst CardContext = React.createContext<CardContextType>({\n  variant: 'default', // Default value\n});\n\n// Hook to use CardContext\nconst useCardContext = () => {\n  const context = React.useContext(CardContext);\n  if (!context) {\n    throw new Error('useCardContext must be used within a Card component');\n  }\n  return context;\n};\n\n// Variants\nconst cardVariants = cva('flex flex-col items-stretch text-card-foreground rounded-xl', {\n  variants: {\n    variant: {\n      default: 'bg-card border border-border shadow-xs black/5',\n      accent: 'bg-muted shadow-xs p-1',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nconst cardHeaderVariants = cva('flex items-center justify-between flex-wrap px-5 min-h-14 gap-2.5', {\n  variants: {\n    variant: {\n      default: 'border-b border-border',\n      accent: '',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nconst cardContentVariants = cva('grow p-5', {\n  variants: {\n    variant: {\n      default: '',\n      accent: 'bg-card rounded-t-xl [&:last-child]:rounded-b-xl',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nconst cardTableVariants = cva('grid grow', {\n  variants: {\n    variant: {\n      default: '',\n      accent: 'bg-card rounded-xl',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nconst cardFooterVariants = cva('flex items-center px-5 min-h-14', {\n  variants: {\n    variant: {\n      default: 'border-t border-border',\n      accent: 'bg-card rounded-b-xl mt-[2px]',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\n// Card Component\nfunction Card({\n  className,\n  variant = 'default',\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof cardVariants>) {\n  return (\n    <CardContext.Provider value={{ variant: variant || 'default' }}>\n      <div data-slot=\"card\" className={cn(cardVariants({ variant }), className)} {...props} />\n    </CardContext.Provider>\n  );\n}\n\n// CardHeader Component\nfunction CardHeader({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return <div data-slot=\"card-header\" className={cn(cardHeaderVariants({ variant }), className)} {...props} />;\n}\n\n// CardContent Component\nfunction CardContent({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return <div data-slot=\"card-content\" className={cn(cardContentVariants({ variant }), className)} {...props} />;\n}\n\n// CardTable Component\nfunction CardTable({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return <div data-slot=\"card-table\" className={cn(cardTableVariants({ variant }), className)} {...props} />;\n}\n\n// CardFooter Component\nfunction CardFooter({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return <div data-slot=\"card-footer\" className={cn(cardFooterVariants({ variant }), className)} {...props} />;\n}\n\n// Other Components\nfunction CardHeading({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return <div data-slot=\"card-heading\" className={cn('space-y-1', className)} {...props} />;\n}\n\nfunction CardToolbar({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return <div data-slot=\"card-toolbar\" className={cn('flex items-center gap-2.5', className)} {...props} />;\n}\n\nfunction CardTitle({ className, ...props }: React.HTMLAttributes<HTMLHeadingElement>) {\n  return (\n    <h3\n      data-slot=\"card-title\"\n      className={cn('text-base font-semibold leading-none tracking-tight', className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return <div data-slot=\"card-description\" className={cn('text-sm text-muted-foreground', className)} {...props} />;\n}\n\n// Exports\nexport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardHeading, CardTable, CardTitle, CardToolbar };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/marquee.tsx",
      "content": "import React, { ComponentPropsWithoutRef, useRef } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface MarqueeProps extends ComponentPropsWithoutRef<'div'> {\n  /**\n   * Optional CSS class name to apply custom styles\n   */\n  className?: string;\n  /**\n   * Whether to reverse the animation direction\n   * @default false\n   */\n  reverse?: boolean;\n  /**\n   * Whether to pause the animation on hover\n   * @default false\n   */\n  pauseOnHover?: boolean;\n  /**\n   * Content to be displayed in the marquee\n   */\n  children: React.ReactNode;\n  /**\n   * Whether to animate vertically instead of horizontally\n   * @default false\n   */\n  vertical?: boolean;\n  /**\n   * Number of times to repeat the content\n   * @default 4\n   */\n  repeat?: number;\n  /**\n   * If true, automatically repeats children enough to fill the visible area\n   */\n  autoFill?: boolean;\n  /**\n   * ARIA label for accessibility\n   */\n  ariaLabel?: string;\n  /**\n   * ARIA live region politeness\n   */\n  ariaLive?: 'off' | 'polite' | 'assertive';\n  /**\n   * ARIA role\n   */\n  ariaRole?: string;\n}\n\nexport function Marquee({\n  className,\n  reverse = false,\n  pauseOnHover = false,\n  children,\n  vertical = false,\n  repeat = 4,\n  ariaLabel,\n  ariaLive = 'off',\n  ariaRole = 'marquee',\n  ...props\n}: MarqueeProps) {\n  const marqueeRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <div\n      {...props}\n      ref={marqueeRef}\n      data-slot=\"marquee\"\n      className={cn(\n        'group flex overflow-hidden p-2 [--duration:40s] [--gap:1rem] [gap:var(--gap)]',\n        {\n          'flex-row': !vertical,\n          'flex-col': vertical,\n        },\n        className,\n      )}\n      aria-label={ariaLabel}\n      aria-live={ariaLive}\n      role={ariaRole}\n      tabIndex={0}\n    >\n      {React.useMemo(\n        () => (\n          <>\n            {Array.from({ length: repeat }, (_, i) => (\n              <div\n                key={i}\n                className={cn(\n                  !vertical ? 'flex-row [gap:var(--gap)]' : 'flex-col [gap:var(--gap)]',\n                  'flex shrink-0 justify-around',\n                  !vertical && 'animate-marquee flex-row',\n                  vertical && 'animate-marquee-vertical flex-col',\n                  pauseOnHover && 'group-hover:[animation-play-state:paused]',\n                  reverse && '[animation-direction:reverse]',\n                )}\n              >\n                {children}\n              </div>\n            ))}\n          </>\n        ),\n        [repeat, children, vertical, pauseOnHover, reverse],\n      )}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}
