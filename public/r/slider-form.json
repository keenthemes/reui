{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "slider-form",
  "type": "registry:component",
  "dependencies": [
    "@hookform/resolvers",
    "@remixicon/react",
    "react-hook-form",
    "sonner",
    "zod",
    "clsx",
    "tailwind-merge",
    "class-variance-authority",
    "lucide-react",
    "radix-ui",
    "@radix-ui/react-slot"
  ],
  "registryDependencies": [
    "https://reui.io/r/alert.json",
    "https://reui.io/r/button.json",
    "https://reui.io/r/form.json",
    "https://reui.io/r/input.json",
    "https://reui.io/r/label.json",
    "https://reui.io/r/slider.json"
  ],
  "files": [
    {
      "path": "registry/default/components/slider/form.tsx",
      "content": "'use client';\n\nimport { useId } from 'react';\nimport { useSliderInput } from '@/registry/default/hooks/use-slider-input';\nimport { Alert, AlertIcon, AlertTitle } from '@/registry/default/ui/alert';\nimport { Button } from '@/registry/default/ui/button';\nimport { Form, FormField, FormItem, FormLabel, FormMessage } from '@/registry/default/ui/form';\nimport { Input } from '@/registry/default/ui/input';\nimport { Label } from '@/registry/default/ui/label';\nimport { Slider, SliderThumb } from '@/registry/default/ui/slider';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { RiCheckboxCircleFill } from '@remixicon/react';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'sonner';\nimport { z } from 'zod';\n\n// Mock data\nconst items = [\n  { id: 1, price: 80 },\n  { id: 2, price: 95 },\n  { id: 3, price: 110 },\n  { id: 120, price: 900 },\n];\n\n// Form schema using zod\nconst FormSchema = z.object({\n  range: z\n    .array(z.number())\n    .length(2, 'You must select both minimum and maximum values.')\n    .refine(([min, max]) => max > min, {\n      message: 'Maximum value must be greater than the minimum value.',\n    })\n    .refine(([min, max]) => min >= 100 && max <= 600, {\n      message: 'Values must be within the range of 100 to 600.',\n    }),\n});\n\nexport default function PriceRangeForm() {\n  const id = useId();\n  const minValue = Math.min(...items.map((item) => item.price));\n  const maxValue = Math.max(...items.map((item) => item.price));\n\n  const { sliderValues, setSliderValues, inputValues, handleSliderChange, handleInputChange, validateAndUpdateValue } =\n    useSliderInput({\n      minValue,\n      maxValue,\n      initialValue: [200, 500],\n    });\n\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: { range: [100, 450] },\n  });\n\n  // Handle form submission\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast.custom((t) => (\n      <Alert variant=\"mono\" icon=\"primary\" onClose={() => toast.dismiss(t)}>\n        <AlertIcon>\n          <RiCheckboxCircleFill />\n        </AlertIcon>\n        <AlertTitle>{`Form submitted! Range: ${data.range[0]} - ${data.range[1]}`}</AlertTitle>\n      </Alert>\n    ));\n  }\n\n  // Updated handleSliderChange to reset form errors\n  const handleSliderChangeWithValidation = (values: [number, number]) => {\n    handleSliderChange(values); // Update slider values\n    form.setValue('range', values); // Update form values\n    form.trigger('range'); // Trigger validation to reset errors\n  };\n\n  return (\n    <Form {...form}>\n      <form\n        onSubmit={form.handleSubmit((data) => {\n          // Update slider range in the form value before submission\n          form.setValue('range', sliderValues);\n          onSubmit(data);\n        })}\n        className=\"w-full md:w-[400px] space-y-6\"\n      >\n        {/* Slider and Inputs */}\n        <FormField\n          control={form.control}\n          name=\"range\"\n          render={() => (\n            <FormItem>\n              <FormLabel>Select Price Range</FormLabel>\n              {/* Slider */}\n              <Slider\n                value={sliderValues}\n                onValueChange={handleSliderChangeWithValidation} // Use the updated handler\n                min={minValue}\n                max={maxValue}\n                step={10}\n              >\n                <SliderThumb />\n                <SliderThumb />\n              </Slider>\n\n              {/* Inputs as indicators */}\n              <div className=\"flex items-center justify-between mt-4 gap-4\">\n                <div>\n                  <Label htmlFor={`${id}-min`}>Min Price</Label>\n                  <Input\n                    id={`${id}-min`}\n                    type=\"number\"\n                    value={inputValues[0]}\n                    onChange={(e) => handleInputChange(e, 0)}\n                    onBlur={() => validateAndUpdateValue(inputValues[0], 0)}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor={`${id}-max`}>Max Price</Label>\n                  <Input\n                    id={`${id}-max`}\n                    type=\"number\"\n                    value={inputValues[1]}\n                    onChange={(e) => handleInputChange(e, 1)}\n                    onBlur={() => validateAndUpdateValue(inputValues[1], 1)}\n                  />\n                </div>\n              </div>\n\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Submit and Reset */}\n        <div className=\"flex justify-end gap-2\">\n          <Button\n            type=\"reset\"\n            variant=\"outline\"\n            onClick={() => {\n              form.reset();\n              setSliderValues([100, 450]);\n            }}\n          >\n            Reset\n          </Button>\n          <Button type=\"submit\">Submit</Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/hooks/use-slider-input.ts",
      "content": "import * as React from 'react';\nimport { useCallback, useState } from 'react';\n\ninterface UseSliderInputProps {\n  minValue: number;\n  maxValue: number;\n  initialValue: [number, number];\n}\n\nexport function useSliderInput({ minValue, maxValue, initialValue }: UseSliderInputProps) {\n  const [sliderValues, setSliderValues] = useState<[number, number]>(initialValue);\n  const [inputValues, setInputValues] = useState<[number, number]>(initialValue);\n\n  // Handle slider changes and sync with input values\n  const handleSliderChange = useCallback((values: [number, number]) => {\n    setSliderValues(values);\n    setInputValues(values);\n  }, []);\n\n  // Handle input changes for min or max\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>, index: 0 | 1) => {\n      const newValue = parseFloat(e.target.value);\n      if (!isNaN(newValue)) {\n        const updatedInputs = [...inputValues] as [number, number];\n        updatedInputs[index] = newValue;\n        setInputValues(updatedInputs);\n      }\n    },\n    [inputValues],\n  );\n\n  // Validate and update slider values when input loses focus or user presses Enter\n  const validateAndUpdateValue = useCallback(\n    (value: number, index: 0 | 1) => {\n      const updatedSlider = [...sliderValues] as [number, number];\n\n      if (index === 0) {\n        // Min value\n        updatedSlider[0] = Math.max(minValue, Math.min(value, sliderValues[1]));\n      } else {\n        // Max value\n        updatedSlider[1] = Math.min(maxValue, Math.max(value, sliderValues[0]));\n      }\n\n      setSliderValues(updatedSlider);\n      setInputValues(updatedSlider);\n    },\n    [sliderValues, minValue, maxValue],\n  );\n\n  return {\n    setSliderValues,\n    setInputValues,\n    sliderValues,\n    inputValues,\n    handleSliderChange,\n    handleInputChange,\n    validateAndUpdateValue,\n  };\n}\n",
      "type": "registry:hook",
      "target": ""
    },
    {
      "path": "registry/default/ui/alert.tsx",
      "content": "import * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Button } from '@/registry/default/ui/button';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { X } from 'lucide-react';\n\nconst alertVariants = cva('flex items-stretch w-full gap-2 group-[.toaster]:w-(--width)', {\n  variants: {\n    variant: {\n      secondary: '',\n      primary: '',\n      destructive: '',\n      success: '',\n      info: '',\n      mono: '',\n      warning: '',\n    },\n    icon: {\n      primary: '',\n      destructive: '',\n      success: '',\n      info: '',\n      warning: '',\n    },\n    appearance: {\n      solid: '',\n      outline: '',\n      light: '',\n      stroke: 'text-foreground',\n    },\n    size: {\n      lg: 'rounded-lg p-4 gap-3 text-base [&>[data-slot=alert-icon]>svg]:size-6 *:data-slot=alert-icon:mt-0.5 [&_[data-slot=alert-close]]:mt-1',\n      md: 'rounded-lg p-3.5 gap-2.5 text-sm [&>[data-slot=alert-icon]>svg]:size-5 *:data-slot=alert-icon:mt-0 [&_[data-slot=alert-close]]:mt-0.5',\n      sm: 'rounded-md px-3 py-2.5 gap-2 text-xs [&>[data-slot=alert-icon]>svg]:size-4 *:data-alert-icon:mt-0.5 [&_[data-slot=alert-close]]:mt-0.25 [&_[data-slot=alert-close]_svg]:size-3.5',\n    },\n  },\n  compoundVariants: [\n    /* Solid */\n    {\n      variant: 'secondary',\n      appearance: 'solid',\n      className: 'bg-muted text-foreground',\n    },\n    {\n      variant: 'primary',\n      appearance: 'solid',\n      className: 'bg-primary text-primary-foreground',\n    },\n    {\n      variant: 'destructive',\n      appearance: 'solid',\n      className: 'bg-destructive text-destructive-foreground',\n    },\n    {\n      variant: 'success',\n      appearance: 'solid',\n      className:\n        'bg-[var(--color-success,var(--color-green-500))] text-[var(--color-success-foreground,var(--color-white))]',\n    },\n    {\n      variant: 'info',\n      appearance: 'solid',\n      className:\n        'bg-[var(--color-info,var(--color-violet-600))] text-[var(--color-info-foreground,var(--color-white))]',\n    },\n    {\n      variant: 'warning',\n      appearance: 'solid',\n      className:\n        'bg-[var(--color-warning,var(--color-yellow-500))] text-[var(--color-warning-foreground,var(--color-white))]',\n    },\n    {\n      variant: 'mono',\n      appearance: 'solid',\n      className: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black *:data-slot-[alert=close]:text-white',\n    },\n\n    /* Outline */\n    {\n      variant: 'secondary',\n      appearance: 'outline',\n      className: 'border border-border bg-background text-foreground [&_[data-slot=alert-close]]:text-foreground',\n    },\n    {\n      variant: 'primary',\n      appearance: 'outline',\n      className: 'border border-border bg-background text-primary [&_[data-slot=alert-close]]:text-foreground',\n    },\n    {\n      variant: 'destructive',\n      appearance: 'outline',\n      className: 'border border-border bg-background text-destructive [&_[data-slot=alert-close]]:text-foreground',\n    },\n    {\n      variant: 'success',\n      appearance: 'outline',\n      className:\n        'border border-border bg-background text-[var(--color-success,var(--color-green-500))] [&_[data-slot=alert-close]]:text-foreground',\n    },\n    {\n      variant: 'info',\n      appearance: 'outline',\n      className:\n        'border border-border bg-background text-[var(--color-info,var(--color-violet-600))] [&_[data-slot=alert-close]]:text-foreground',\n    },\n    {\n      variant: 'warning',\n      appearance: 'outline',\n      className:\n        'border border-border bg-background text-[var(--color-warning,var(--color-yellow-500))] [&_[data-slot=alert-close]]:text-foreground',\n    },\n    {\n      variant: 'mono',\n      appearance: 'outline',\n      className: 'border border-border bg-background text-foreground [&_[data-slot=alert-close]]:text-foreground',\n    },\n\n    /* Light */\n    {\n      variant: 'secondary',\n      appearance: 'light',\n      className: 'bg-muted border border-border text-foreground',\n    },\n    {\n      variant: 'primary',\n      appearance: 'light',\n      className:\n        'text-foreground bg-[var(--color-primary-soft,var(--color-blue-50))] border border-[var(--color-primary-alpha,var(--color-blue-100))] [&_[data-slot=alert-icon]]:text-primary dark:bg-[var(--color-primary-soft,var(--color-blue-950))] dark:border-[var(--color-primary-alpha,var(--color-blue-900))]',\n    },\n    {\n      variant: 'destructive',\n      appearance: 'light',\n      className:\n        'bg-[var(--color-destructive-soft,var(--color-red-50))] border border-[var(--color-destructive-alpha,var(--color-red-100))] text-foreground [&_[data-slot=alert-icon]]:text-destructive dark:bg-[var(--color-destructive-soft,var(--color-red-950))] dark:border-[var(--color-destructive-alpha,var(--color-red-900))] ',\n    },\n    {\n      variant: 'success',\n      appearance: 'light',\n      className:\n        'bg-[var(--color-success-soft,var(--color-green-50))] border border-[var(--color-success-alpha,var(--color-green-200))] text-foreground [&_[data-slot=alert-icon]]:text-[var(--color-success-foreground,var(--color-green-600))] dark:bg-[var(--color-success-soft,var(--color-green-950))] dark:border-[var(--color-success-alpha,var(--color-green-900))]',\n    },\n    {\n      variant: 'info',\n      appearance: 'light',\n      className:\n        'bg-[var(--color-info-soft,var(--color-violet-50))] border border-[var(--color-info-alpha,var(--color-violet-100))] text-foreground [&_[data-slot=alert-icon]]:text-[var(--color-info-foreground,var(--color-violet-600))] dark:bg-[var(--color-info-soft,var(--color-violet-950))] dark:border-[var(--color-info-alpha,var(--color-violet-900))]',\n    },\n    {\n      variant: 'warning',\n      appearance: 'light',\n      className:\n        'bg-[var(--color-warning-soft,var(--color-yellow-50))] border border-[var(--color-warning-alpha,var(--color-yellow-200))] text-foreground [&_[data-slot=alert-icon]]:text-[var(--color-warning-foreground,var(--color-yellow-600))] dark:bg-[var(--color-warning-soft,var(--color-yellow-950))] dark:border-[var(--color-warning-alpha,var(--color-yellow-900))]',\n    },\n\n    /* Mono */\n    {\n      variant: 'mono',\n      icon: 'primary',\n      className: '[&_[data-slot=alert-icon]]:text-primary',\n    },\n    {\n      variant: 'mono',\n      icon: 'warning',\n      className: '[&_[data-slot=alert-icon]]:text-[var(--color-warning-foreground,var(--color-yellow-600))]',\n    },\n    {\n      variant: 'mono',\n      icon: 'success',\n      className: '[&_[data-slot=alert-icon]]:text-[var(--color-success-foreground,var(--color-green-600))]',\n    },\n    {\n      variant: 'mono',\n      icon: 'destructive',\n      className: '[&_[data-slot=alert-icon]]:text-destructive',\n    },\n    {\n      variant: 'mono',\n      icon: 'info',\n      className: '[&_[data-slot=alert-icon]]:text-[var(--color-info-foreground,var(--color-violet-600))]',\n    },\n  ],\n  defaultVariants: {\n    variant: 'secondary',\n    appearance: 'solid',\n    size: 'md',\n  },\n});\n\ninterface AlertProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof alertVariants> {\n  close?: boolean;\n  onClose?: () => void;\n}\n\ninterface AlertIconProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof alertVariants> {}\n\nfunction Alert({ className, variant, size, icon, appearance, close = false, onClose, children, ...props }: AlertProps) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant, size, icon, appearance }), className)}\n      {...props}\n    >\n      {children}\n      {close && (\n        <Button\n          size=\"sm\"\n          variant=\"inverse\"\n          mode=\"icon\"\n          onClick={onClose}\n          aria-label=\"Dismiss\"\n          data-slot=\"alert-close\"\n          className={cn('group shrink-0 size-4')}\n        >\n          <X className=\"opacity-60 group-hover:opacity-100 size-4\" />\n        </Button>\n      )}\n    </div>\n  );\n}\n\nfunction AlertTitle({ className, ...props }: React.HTMLAttributes<HTMLHeadingElement>) {\n  return <div data-slot=\"alert-title\" className={cn('grow tracking-tight', className)} {...props} />;\n}\n\nfunction AlertIcon({ children, className, ...props }: AlertIconProps) {\n  return (\n    <div data-slot=\"alert-icon\" className={cn('shrink-0', className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\nfunction AlertToolbar({ children, className, ...props }: AlertIconProps) {\n  return (\n    <div data-slot=\"alert-toolbar\" className={cn(className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\nfunction AlertDescription({ className, ...props }: React.HTMLAttributes<HTMLParagraphElement>) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn('text-sm [&_p]:leading-relaxed [&_p]:mb-2', className)}\n      {...props}\n    />\n  );\n}\n\nfunction AlertContent({ className, ...props }: React.HTMLAttributes<HTMLParagraphElement>) {\n  return (\n    <div\n      data-slot=\"alert-content\"\n      className={cn('space-y-2 [&_[data-slot=alert-title]]:font-semibold', className)}\n      {...props}\n    />\n  );\n}\n\nexport { Alert, AlertContent, AlertDescription, AlertIcon, AlertTitle, AlertToolbar };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/form.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Label } from '@/registry/default/ui/label';\nimport { Slot } from '@radix-ui/react-slot';\nimport { Label as LabelPrimitive } from 'radix-ui';\nimport { Controller, ControllerProps, FieldPath, FieldValues, FormProvider, useFormContext } from 'react-hook-form';\n\nconst Form = FormProvider;\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>({} as FormFieldContextValue);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>');\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue);\n\nfunction FormItem({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  const id = React.useId();\n  const { error } = useFormField();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div data-slot=\"form-item\" className={cn('flex flex-col gap-2.5', className)} data-invalid={!!error} {...props} />\n    </FormItemContext.Provider>\n  );\n}\n\nfunction FormLabel({ className, ...props }: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { formItemId } = useFormField();\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      className={cn('font-medium text-foreground', className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  );\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField();\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={!error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`}\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n}\n\nfunction FormDescription({ className, ...props }: React.HTMLAttributes<HTMLParagraphElement>) {\n  const { formDescriptionId, error } = useFormField();\n\n  if (error) {\n    return null; // Hide the description when there's an error\n  }\n\n  return (\n    <div\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn('text-xs text-muted-foreground -mt-0.5', className)}\n      {...props}\n    />\n  );\n}\n\nfunction FormMessage({ className, children, ...props }: React.HTMLAttributes<HTMLParagraphElement>) {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <div\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn('-mt-0.5 text-xs font-normal text-destructive', className)}\n      {...props}\n    >\n      {body}\n    </div>\n  );\n}\n\nexport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage, useFormField };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/input.tsx",
      "content": "import * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\n// Define input size variants\nconst inputVariants = cva(\n  `\n    flex w-full bg-background border border-input shadow-xs shadow-black/5 transition-[color,box-shadow] text-foreground placeholder:text-muted-foreground/80 \n    focus-visible:ring-ring/30  focus-visible:border-ring focus-visible:outline-none focus-visible:ring-[3px]     \n    disabled:cursor-not-allowed disabled:opacity-60 \n    [&[readonly]]:bg-muted/80 [&[readonly]]:cursor-not-allowed\n    file:h-full [&[type=file]]:py-0 file:border-solid file:border-input file:bg-transparent \n    file:font-medium file:not-italic file:text-foreground file:p-0 file:border-0 file:border-e\n    aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n  `,\n  {\n    variants: {\n      variant: {\n        lg: 'h-10 px-4 text-sm rounded-md file:pe-4 file:me-4',\n        md: 'h-8.5 px-3 text-[0.8125rem] leading-(--text-sm--line-height) rounded-md file:pe-3 file:me-3',\n        sm: 'h-7 px-2.5 text-xs rounded-md file:pe-2.5 file:me-2.5',\n      },\n    },\n    defaultVariants: {\n      variant: 'md',\n    },\n  },\n);\n\nconst inputAddonVariants = cva(\n  'flex items-center shrink-0 justify-center bg-muted border border-input shadow-xs shadow-[rgba(0,0,0,0.05)] text-secondary-foreground [&_svg]:text-secondary-foreground/60',\n  {\n    variants: {\n      variant: {\n        sm: 'rounded-md h-7 min-w-7 text-xs px-2.5 [&_svg:not([class*=size-])]:size-3.5',\n        md: 'rounded-md h-8.5 min-w-8.5 px-3 text-[0.8125rem] leading-(--text-sm--line-height) [&_svg:not([class*=size-])]:size-4.5',\n        lg: 'rounded-md h-10 min-w-10 px-4 text-sm [&_svg:not([class*=size-])]:size-4.5',\n      },\n      mode: {\n        default: '',\n        icon: 'px-0 justify-center',\n      },\n    },\n    defaultVariants: {\n      variant: 'md',\n      mode: 'default',\n    },\n  },\n);\n\nconst inputGroupVariants = cva(\n  `\n    flex items-stretch\n    [&_[data-slot=input]]:grow\n    [&_[data-slot=input-addon]:has(+[data-slot=input])]:rounded-e-none [&_[data-slot=input-addon]:has(+[data-slot=input])]:border-e-0\n    [&_[data-slot=input-addon]:has(+[data-slot=datefield])]:rounded-e-none [&_[data-slot=input-addon]:has(+[data-slot=datefield])]:border-e-0 \n    [&_[data-slot=input]+[data-slot=input-addon]]:rounded-s-none [&_[data-slot=input]+[data-slot=input-addon]]:border-s-0\n    [&_[data-slot=input-addon]:has(+[data-slot=button])]:rounded-e-none\n    [&_[data-slot=input]+[data-slot=button]]:rounded-s-none\n    [&_[data-slot=button]+[data-slot=input]]:rounded-s-none\n    [&_[data-slot=input-addon]+[data-slot=input]]:rounded-s-none\n    [&_[data-slot=input-addon]+[data-slot=datefield]]:[&_[data-slot=input]]:rounded-s-none\n    [&_[data-slot=datefield]:has(+[data-slot=input-addon])]:[&_[data-slot=input]]:rounded-e-none\n    [&_[data-slot=input]:has(+[data-slot=button])]:rounded-e-none\n    [&_[data-slot=input]:has(+[data-slot=input-addon])]:rounded-e-none\n    [&_[data-slot=datefield]]:grow\n    [&_[data-slot=datefield]+[data-slot=input-addon]]:rounded-s-none [&_[data-slot=datefield]+[data-slot=input-addon]]:border-s-0\n  `,\n  {\n    variants: {},\n    defaultVariants: {},\n  },\n);\n\nconst inputWrapperVariants = cva(\n  `\n    flex items-center gap-1.5\n    has-[:focus-visible]:ring-ring/30 \n    has-[:focus-visible]:border-ring\n    has-[:focus-visible]:outline-none \n    has-[:focus-visible]:ring-[3px]\n\n    [&_[data-slot=datefield]]:grow \n    [&_[data-slot=input]]:data-focus-within:ring-transparent  \n    [&_[data-slot=input]]:data-focus-within:ring-0 \n    [&_[data-slot=input]]:data-focus-within:border-0 \n    [&_[data-slot=input]]:flex \n    [&_[data-slot=input]]:w-full \n    [&_[data-slot=input]]:outline-none \n    [&_[data-slot=input]]:transition-colors \n    [&_[data-slot=input]]:text-foreground\n    [&_[data-slot=input]]:placeholder:text-muted-foreground \n    [&_[data-slot=input]]:border-0 \n    [&_[data-slot=input]]:bg-transparent \n    [&_[data-slot=input]]:p-0\n    [&_[data-slot=input]]:shadow-none \n    [&_[data-slot=input]]:focus-visible:ring-0 \n    [&_[data-slot=input]]:h-auto \n    [&_[data-slot=input]]:disabled:cursor-not-allowed\n    [&_[data-slot=input]]:disabled:opacity-50    \n\n    [&_svg]:text-muted-foreground \n\n    has-[[aria-invalid=true]]:border-destructive/60 \n    has-[[aria-invalid=true]]:ring-destructive/10 \n    dark:has-[[aria-invalid=true]]:border-destructive \n    dark:has-[[aria-invalid=true]]:ring-destructive/20    \n  `,\n  {\n    variants: {\n      variant: {\n        sm: 'gap-1.25 [&_svg:not([class*=size-])]:size-3.5',\n        md: 'gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        lg: 'gap-1.5 [&_svg:not([class*=size-])]:size-4',\n      },\n    },\n    defaultVariants: {\n      variant: 'md',\n    },\n  },\n);\n\nfunction Input({\n  className,\n  type,\n  variant,\n  ...props\n}: React.ComponentProps<'input'> & VariantProps<typeof inputVariants>) {\n  return <input data-slot=\"input\" type={type} className={cn(inputVariants({ variant }), className)} {...props} />;\n}\n\nfunction InputAddon({\n  className,\n  variant,\n  mode,\n  ...props\n}: React.ComponentProps<'div'> & VariantProps<typeof inputAddonVariants>) {\n  return <div data-slot=\"input-addon\" className={cn(inputAddonVariants({ variant, mode }), className)} {...props} />;\n}\n\nfunction InputGroup({ className, ...props }: React.ComponentProps<'div'> & VariantProps<typeof inputGroupVariants>) {\n  return <div data-slot=\"input-group\" className={cn(inputGroupVariants(), className)} {...props} />;\n}\n\nfunction InputWrapper({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<'div'> & VariantProps<typeof inputWrapperVariants>) {\n  return (\n    <div\n      data-slot=\"input-wrapper\"\n      className={cn(inputVariants({ variant }), inputWrapperVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Input, InputAddon, InputGroup, InputWrapper, inputVariants, inputAddonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/slider.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Slider as SliderPrimitive } from 'radix-ui';\n\nfunction Slider({ className, children, ...props }: React.ComponentProps<typeof SliderPrimitive.Root>) {\n  return (\n    <SliderPrimitive.Root\n      data-slot=\"slider\"\n      className={cn('relative flex h-4 w-full touch-none select-none items-center', className)}\n      {...props}\n    >\n      <SliderPrimitive.Track className=\"relative h-1.5 w-full overflow-hidden rounded-full bg-accent\">\n        <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n      </SliderPrimitive.Track>\n      {children}\n    </SliderPrimitive.Root>\n  );\n}\n\nfunction SliderThumb({ className, ...props }: React.ComponentProps<typeof SliderPrimitive.Thumb>) {\n  return (\n    <SliderPrimitive.Thumb\n      data-slot=\"slider-thumb\"\n      className={cn(\n        'box-content block size-4 shrink-0 cursor-pointer rounded-full border-[2px] border-primary bg-primary-foreground shadow-xs shadow-black/5 outline-hidden focus:outline-hidden',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Slider, SliderThumb };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "registry/default/ui/button.tsx",
      "content": "import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { ChevronDown, LucideIcon } from 'lucide-react';\nimport { Slot as SlotPrimitive } from 'radix-ui';\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'cursor-pointer group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center has-data-[arrow=true]:justify-between whitespace-nowrap text-sm font-medium ring-offset-background transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-60 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground hover:bg-primary/90 data-[state=open]:bg-primary/90',\n        mono: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black hover:bg-zinc-950/90 dark:hover:bg-zinc-300/90 data-[state=open]:bg-zinc-950/90 dark:data-[state=open]:bg-zinc-300/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90 data-[state=open]:bg-destructive/90',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90 data-[state=open]:bg-secondary/90',\n        outline: 'bg-background text-accent-foreground border border-input hover:bg-accent data-[state=open]:bg-accent',\n        dashed:\n          'text-accent-foreground border border-input border-dashed bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:text-accent-foreground',\n        ghost:\n          'text-accent-foreground hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\n        dim: 'text-muted-foreground hover:text-foreground data-[state=open]:text-foreground',\n        foreground: '',\n        inverse: '',\n      },\n      appearance: {\n        default: '',\n        ghost: '',\n      },\n      underline: {\n        solid: '',\n        dashed: '',\n      },\n      underlined: {\n        solid: '',\n        dashed: '',\n      },\n      size: {\n        lg: 'h-10 rounded-md px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-8.5 rounded-md px-3 gap-1.5 text-[0.8125rem] leading-(--text-sm--line-height) [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-7 rounded-md px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n        icon: 'size-8.5 rounded-md [&_svg:not([class*=size-])]:size-4 shrink-0',\n      },\n      autoHeight: {\n        true: '',\n        false: '',\n      },\n      shape: {\n        default: '',\n        circle: 'rounded-full',\n      },\n      mode: {\n        default: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        icon: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 shrink-0',\n        link: 'text-primary h-auto p-0 bg-transparent rounded-none hover:bg-transparent data-[state=open]:bg-transparent',\n        input: `\n            justify-start font-normal hover:bg-background [&_svg]:transition-colors [&_svg]:hover:text-foreground data-[state=open]:bg-background \n            focus-visible:border-ring focus-visible:outline-hidden focus-visible:ring-[3px] focus-visible:ring-ring/30 \n            [[data-state=open]>&]:border-ring [[data-state=open]>&]:outline-hidden [[data-state=open]>&]:ring-[3px] \n            [[data-state=open]>&]:ring-ring/30 \n            aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n            in-data-[invalid=true]:border-destructive/60 in-data-[invalid=true]:ring-destructive/10  dark:in-data-[invalid=true]:border-destructive dark:in-data-[invalid=true]:ring-destructive/20\n          `,\n      },\n      placeholder: {\n        true: 'text-muted-foreground',\n        false: '',\n      },\n    },\n    compoundVariants: [\n      // Icons opacity for default mode\n      {\n        variant: 'ghost',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Icons opacity for default mode\n      {\n        variant: 'outline',\n        mode: 'input',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Auto height\n      {\n        size: 'md',\n        autoHeight: true,\n        className: 'h-auto min-h-8.5',\n      },\n      {\n        size: 'sm',\n        autoHeight: true,\n        className: 'h-auto min-h-7',\n      },\n      {\n        size: 'lg',\n        autoHeight: true,\n        className: 'h-auto min-h-10',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Link\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      // Ghost\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className: 'bg-transparent text-primary/90 hover:bg-primary/5 data-[state=open]:bg-primary/5',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className: 'bg-transparent text-destructive/90 hover:bg-destructive/5 data-[state=open]:bg-destructive/5',\n      },\n      {\n        variant: 'ghost',\n        mode: 'icon',\n        className: 'text-muted-foreground',\n      },\n\n      // Size\n      {\n        size: 'sm',\n        mode: 'icon',\n        className: 'w-7 h-7 p-0 [[&_svg:not([class*=size-])]:size-3.5',\n      },\n      {\n        size: 'md',\n        mode: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'lg',\n        mode: 'icon',\n        className: 'w-10 h-10 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n\n      // Input mode\n      {\n        mode: 'input',\n        placeholder: true,\n        variant: 'outline',\n        className: 'font-normal text-muted-foreground',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'sm',\n        className: 'gap-1.25',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'md',\n        className: 'gap-1.5',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'lg',\n        className: 'gap-1.5',\n      },\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      mode: 'default',\n      size: 'md',\n      shape: 'default',\n      appearance: 'default',\n    },\n  },\n);\n\nfunction Button({\n  className,\n  selected,\n  variant,\n  shape,\n  appearance,\n  mode,\n  size,\n  autoHeight,\n  underlined,\n  underline,\n  asChild = false,\n  placeholder = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonVariants> & {\n    selected?: boolean;\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? SlotPrimitive.Slot : 'button';\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(\n        buttonVariants({\n          variant,\n          size,\n          shape,\n          appearance,\n          mode,\n          autoHeight,\n          placeholder,\n          underlined,\n          underline,\n          className,\n        }),\n        asChild && props.disabled && 'pointer-events-none opacity-50',\n      )}\n      {...(selected && { 'data-state': 'open' })}\n      {...props}\n    />\n  );\n}\n\ninterface ButtonArrowProps extends React.SVGProps<SVGSVGElement> {\n  icon?: LucideIcon; // Allows passing any Lucide icon\n}\n\nfunction ButtonArrow({ icon: Icon = ChevronDown, className, ...props }: ButtonArrowProps) {\n  return <Icon data-slot=\"button-arrow\" className={cn('ms-auto -me-1', className)} {...props} />;\n}\n\nexport { Button, ButtonArrow, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/label.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { Label as LabelPrimitive } from 'radix-ui';\n\nconst labelVariants = cva(\n  'text-sm leading-none text-foreground peer-disabled:cursor-not-allowed peer-disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        primary: 'font-medium',\n        secondary: 'font-normal',\n      },\n    },\n    defaultVariants: {\n      variant: 'primary',\n    },\n  },\n);\n\nfunction Label({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>) {\n  return <LabelPrimitive.Root data-slot=\"label\" className={cn(labelVariants({ variant }), className)} {...props} />;\n}\n\nexport { Label };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}