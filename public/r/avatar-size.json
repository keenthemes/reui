{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "avatar-size",
  "type": "registry:component",
  "dependencies": ["clsx", "tailwind-merge", "class-variance-authority", "radix-ui"],
  "registryDependencies": ["https://reui.io/r/avatar.json"],
  "files": [
    {
      "path": "registry/default/components/avatar/size.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage, AvatarIndicator, AvatarStatus } from '@/registry/default/ui/avatar';\n\nexport default function AvatarDemo() {\n  return (\n    <div className=\"flex flex-wrap items-center gap-6\">\n      <Avatar className=\"size-6\">\n        <AvatarImage src=\"/media/avatars/2.png\" alt=\"@reui\" />\n        <AvatarFallback>CH</AvatarFallback>\n        <AvatarIndicator className=\"-end-2 -top-2\">\n          <AvatarStatus variant=\"online\" className=\"size-2\" />\n        </AvatarIndicator>\n      </Avatar>\n      <Avatar className=\"size-8\">\n        <AvatarImage src=\"/media/avatars/2.png\" alt=\"@reui\" />\n        <AvatarFallback>CH</AvatarFallback>\n        <AvatarIndicator className=\"-end-2 -top-2\">\n          <AvatarStatus variant=\"online\" className=\"size-2.5\" />\n        </AvatarIndicator>\n      </Avatar>\n      <Avatar className=\"size-10\">\n        <AvatarImage src=\"/media/avatars/2.png\" alt=\"@reui\" />\n        <AvatarFallback>CH</AvatarFallback>\n        <AvatarIndicator className=\"-end-2 -top-2\">\n          <AvatarStatus variant=\"online\" className=\"size-2.5\" />\n        </AvatarIndicator>\n      </Avatar>\n      <Avatar className=\"size-14\">\n        <AvatarImage src=\"/media/avatars/2.png\" alt=\"@reui\" />\n        <AvatarFallback>CH</AvatarFallback>\n        <AvatarIndicator className=\"-end-1 -top-1\">\n          <AvatarStatus variant=\"online\" className=\"size-3\" />\n        </AvatarIndicator>\n      </Avatar>\n      <Avatar className=\"size-20\">\n        <AvatarImage src=\"/media/avatars/2.png\" alt=\"@reui\" />\n        <AvatarFallback>CH</AvatarFallback>\n        <AvatarIndicator className=\"-end-px -top-px\">\n          <AvatarStatus variant=\"online\" className=\"size-3\" />\n        </AvatarIndicator>\n      </Avatar>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/avatar.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { cva, VariantProps } from 'class-variance-authority';\nimport { Avatar as AvatarPrimitive } from 'radix-ui';\n\nconst avatarStatusVariants = cva('flex items-center rounded-full size-2 border-2 border-background', {\n  variants: {\n    variant: {\n      online: 'bg-green-600',\n      offline: 'bg-zinc-600 dark:bg-zinc-300',\n      busy: 'bg-yellow-600',\n      away: 'bg-blue-600',\n    },\n  },\n  defaultVariants: {\n    variant: 'online',\n  },\n});\n\nfunction Avatar({ className, ...props }: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root data-slot=\"avatar\" className={cn('relative flex shrink-0 size-10', className)} {...props} />\n  );\n}\n\nfunction AvatarImage({ className, ...props }: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <div className={cn('relative overflow-hidden rounded-full', className)}>\n      <AvatarPrimitive.Image data-slot=\"avatar-image\" className={cn('aspect-square h-full w-full')} {...props} />\n    </div>\n  );\n}\n\nfunction AvatarFallback({ className, ...props }: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        'flex h-full w-full items-center justify-center rounded-full border border-border bg-accent text-accent-foreground text-xs',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarIndicator({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"avatar-indicator\"\n      className={cn('absolute flex size-6 items-center justify-center', className)}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarStatus({\n  className,\n  variant,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof avatarStatusVariants>) {\n  return <div data-slot=\"avatar-status\" className={cn(avatarStatusVariants({ variant }), className)} {...props} />;\n}\n\nexport { Avatar, AvatarFallback, AvatarImage, AvatarIndicator, AvatarStatus, avatarStatusVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}
