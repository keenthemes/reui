{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "base-fieldset",
  "type": "registry:ui",
  "dependencies": ["@base-ui-components/react", "clsx", "tailwind-merge"],
  "files": [
    {
      "path": "registry/default/ui/base-fieldset.tsx",
      "content": "import { cn } from '@/registry/default/lib/utils';\nimport { Fieldset as BaseFieldset } from '@base-ui-components/react/fieldset';\n\nfunction Fieldset({ className, ...props }: React.ComponentProps<typeof BaseFieldset.Root>) {\n  return <BaseFieldset.Root data-slot=\"fieldset\" className={cn('flex w-full flex-col gap-4', className)} {...props} />;\n}\n\nfunction FieldsetLegend({ className, ...props }: React.ComponentProps<typeof BaseFieldset.Legend>) {\n  return (\n    <BaseFieldset.Legend\n      data-slot=\"fieldset-legend\"\n      className={cn('text-sm font-medium text-foreground', className)}\n      {...props}\n    />\n  );\n}\n\nexport { Fieldset, FieldsetLegend };\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}
