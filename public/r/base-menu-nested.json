{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "base-menu-nested",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "tailwind-merge",
    "@base-ui-components/react",
    "class-variance-authority",
    "lucide-react"
  ],
  "registryDependencies": [
    "https://reui.io/r/base-badge.json",
    "https://reui.io/r/base-button.json",
    "https://reui.io/r/base-menu.json"
  ],
  "files": [
    {
      "path": "registry/default/components/base-menu/nested.tsx",
      "content": "import { Badge } from '@/registry/default/ui/base-badge';\nimport { Button } from '@/registry/default/ui/base-button';\nimport {\n  Menu,\n  MenuArrow,\n  MenuGroup,\n  MenuGroupLabel,\n  MenuItem,\n  MenuPopup,\n  MenuPortal,\n  MenuPositioner,\n  MenuSeparator,\n  MenuShortcut,\n  MenuSubmenuRoot,\n  MenuSubmenuTrigger,\n  MenuTrigger,\n} from '@/registry/default/ui/base-menu';\nimport {\n  Bug,\n  FileText,\n  Globe,\n  LogOut,\n  Mail,\n  Monitor,\n  Package,\n  Plus,\n  Server,\n  Settings,\n  Shield,\n  Trash,\n  User,\n  UserPlus,\n  Users,\n} from 'lucide-react';\n\nexport default function MenuDemo() {\n  return (\n    <Menu>\n      <MenuTrigger render={<Button variant=\"outline\">Show Menu</Button>} />\n      <MenuPortal>\n        <MenuPositioner sideOffset={4}>\n          <MenuPopup className=\"w-64\">\n            <MenuArrow />\n\n            {/* Account Section */}\n            <MenuGroup>\n              <MenuGroupLabel>My Account</MenuGroupLabel>\n              <MenuSeparator />\n              <MenuItem>\n                <User />\n                <span>Profile</span>\n                <MenuShortcut>⇧⌘P</MenuShortcut>\n              </MenuItem>\n              <MenuItem>\n                <Mail />\n                <span>Inbox</span>\n                <MenuShortcut>⌘I</MenuShortcut>\n              </MenuItem>\n              <MenuItem>\n                <Settings />\n                <span>Settings</span>\n                <MenuShortcut>⌘S</MenuShortcut>\n              </MenuItem>\n            </MenuGroup>\n\n            {/* Team Management Section */}\n            <MenuSeparator />\n            <MenuGroup>\n              <MenuGroupLabel>Team Management</MenuGroupLabel>\n              <MenuSubmenuRoot>\n                <MenuSubmenuTrigger>\n                  <Users />\n                  <span>Team Settings</span>\n                </MenuSubmenuTrigger>\n                <MenuPortal>\n                  <MenuPositioner sideOffset={-4} alignOffset={-4}>\n                    <MenuPopup className=\"min-w-[8rem]\">\n                      <MenuItem disabled>\n                        <Shield />\n                        <span>Permissions</span>\n                      </MenuItem>\n                      <MenuItem>\n                        <UserPlus />\n                        <span>Invite Members</span>\n                      </MenuItem>\n                      <MenuSeparator />\n                      <MenuItem>\n                        <Monitor />\n                        <span>Monitor Activity</span>\n                      </MenuItem>\n                      <MenuItem>\n                        <FileText />\n                        <span>Logs</span>\n                      </MenuItem>\n                      <MenuItem>\n                        <Server />\n                        <span>Server Status</span>\n                      </MenuItem>\n                      <MenuItem>\n                        <Globe />\n                        <span>Web Traffic</span>\n                      </MenuItem>\n                      <MenuSeparator />\n                      <MenuItem variant=\"destructive\">\n                        <Bug />\n                        <span>System Errors</span>\n                      </MenuItem>\n                    </MenuPopup>\n                  </MenuPositioner>\n                </MenuPortal>\n              </MenuSubmenuRoot>\n\n              {/* Roles Submenu */}\n              <MenuSubmenuRoot>\n                <MenuSubmenuTrigger>\n                  <Shield />\n                  <span>Roles</span>\n                </MenuSubmenuTrigger>\n                <MenuPortal>\n                  <MenuPositioner sideOffset={-4} alignOffset={-4}>\n                    <MenuPopup className=\"min-w-[8rem]\">\n                      <MenuItem>\n                        <Plus />\n                        <span>Add Role</span>\n                      </MenuItem>\n                      <MenuItem>\n                        <Users />\n                        <span>Assign Roles</span>\n                      </MenuItem>\n                      <MenuSeparator />\n                      <MenuItem variant=\"destructive\">\n                        <Trash />\n                        <span>Delete Role</span>\n                      </MenuItem>\n                    </MenuPopup>\n                  </MenuPositioner>\n                </MenuPortal>\n              </MenuSubmenuRoot>\n\n              <MenuItem>\n                <Package />\n                <span>Integrations</span>\n                <Badge variant=\"destructive\" shape=\"circle\" size=\"xs\" className=\"ms-auto\">\n                  5\n                </Badge>\n              </MenuItem>\n            </MenuGroup>\n\n            {/* Logout */}\n            <MenuSeparator />\n            <MenuGroup>\n              <MenuItem>\n                <LogOut />\n                <span>Log Out</span>\n                <MenuShortcut>⇧⌘Q</MenuShortcut>\n              </MenuItem>\n            </MenuGroup>\n          </MenuPopup>\n        </MenuPositioner>\n      </MenuPortal>\n    </Menu>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/base-badge.tsx",
      "content": "import * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { mergeProps } from '@base-ui-components/react/merge-props';\nimport { useRender } from '@base-ui-components/react/use-render';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nexport interface BadgeProps extends useRender.ComponentProps<'span'>, VariantProps<typeof badgeVariants> {\n  asChild?: boolean;\n  dotClassName?: string;\n  disabled?: boolean;\n}\n\nexport interface BadgeButtonProps extends useRender.ComponentProps<'button'>, VariantProps<typeof badgeButtonVariants> {\n  asChild?: boolean;\n}\n\nexport type BadgeDotProps = React.HTMLAttributes<HTMLSpanElement>;\n\nconst badgeVariants = cva(\n  'inline-flex items-center justify-center border border-transparent font-medium focus:outline-hidden focus:ring-2 focus:ring-ring focus:ring-offset-2 [&_svg]:-ms-px [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground',\n        secondary: 'bg-secondary text-secondary-foreground',\n        success:\n          'bg-[var(--color-success-accent,var(--color-green-500))] text-[var(--color-success-foreground,var(--color-white))]',\n        warning:\n          'bg-[var(--color-warning-accent,var(--color-yellow-500))] text-[var(--color-warning-foreground,var(--color-white))]',\n        info: 'bg-[var(--color-info-accent,var(--color-violet-500))] text-[var(--color-info-foreground,var(--color-white))]',\n        outline: 'bg-transparent border border-border text-secondary-foreground',\n        destructive: 'bg-destructive text-destructive-foreground',\n      },\n      appearance: {\n        default: '',\n        light: '',\n        outline: '',\n        ghost: 'border-transparent bg-transparent',\n      },\n      disabled: {\n        true: 'opacity-50 pointer-events-none',\n      },\n      size: {\n        lg: 'rounded-md px-[0.5rem] h-7 min-w-7 gap-1.5 text-xs [&_svg]:size-3.5',\n        md: 'rounded-md px-[0.45rem] h-6 min-w-6 gap-1.5 text-xs [&_svg]:size-3.5 ',\n        sm: 'rounded-sm px-[0.325rem] h-5 min-w-5 gap-1 text-[0.6875rem] leading-[0.75rem] [&_svg]:size-3',\n        xs: 'rounded-sm px-[0.25rem] h-4 min-w-4 gap-1 text-[0.625rem] leading-[0.5rem] [&_svg]:size-3',\n      },\n      shape: {\n        default: '',\n        circle: 'rounded-full',\n      },\n    },\n    compoundVariants: [\n      /* Light */\n      {\n        variant: 'primary',\n        appearance: 'light',\n        className:\n          'text-[var(--color-primary-accent,var(--color-blue-700))] bg-[var(--color-primary-soft,var(--color-blue-50))] dark:bg-[var(--color-primary-soft,var(--color-blue-950))] dark:text-[var(--color-primary-soft,var(--color-blue-600))]',\n      },\n      {\n        variant: 'secondary',\n        appearance: 'light',\n        className: 'bg-secondary dark:bg-secondary/50 text-secondary-foreground',\n      },\n      {\n        variant: 'success',\n        appearance: 'light',\n        className:\n          'text-[var(--color-success-accent,var(--color-green-800))] bg-[var(--color-success-soft,var(--color-green-100))] dark:bg-[var(--color-success-soft,var(--color-green-950))] dark:text-[var(--color-success-soft,var(--color-green-600))]',\n      },\n      {\n        variant: 'warning',\n        appearance: 'light',\n        className:\n          'text-[var(--color-warning-accent,var(--color-yellow-700))] bg-[var(--color-warning-soft,var(--color-yellow-100))] dark:bg-[var(--color-warning-soft,var(--color-yellow-950))] dark:text-[var(--color-warning-soft,var(--color-yellow-600))]',\n      },\n      {\n        variant: 'info',\n        appearance: 'light',\n        className:\n          'text-[var(--color-info-accent,var(--color-violet-700))] bg-[var(--color-info-soft,var(--color-violet-100))] dark:bg-[var(--color-info-soft,var(--color-violet-950))] dark:text-[var(--color-info-soft,var(--color-violet-400))]',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'light',\n        className:\n          'text-[var(--color-destructive-accent,var(--color-red-700))] bg-[var(--color-destructive-soft,var(--color-red-50))] dark:bg-[var(--color-destructive-soft,var(--color-red-950))] dark:text-[var(--color-destructive-soft,var(--color-red-600))]',\n      },\n      /* Outline */\n      {\n        variant: 'primary',\n        appearance: 'outline',\n        className:\n          'text-[var(--color-primary-accent,var(--color-blue-700))] border-[var(--color-primary-soft,var(--color-blue-100))] bg-[var(--color-primary-soft,var(--color-blue-50))] dark:bg-[var(--color-primary-soft,var(--color-blue-950))] dark:border-[var(--color-primary-soft,var(--color-blue-900))] dark:text-[var(--color-primary-soft,var(--color-blue-600))]',\n      },\n      {\n        variant: 'success',\n        appearance: 'outline',\n        className:\n          'text-[var(--color-success-accent,var(--color-green-700))] border-[var(--color-success-soft,var(--color-green-200))] bg-[var(--color-success-soft,var(--color-green-50))] dark:bg-[var(--color-success-soft,var(--color-green-950))] dark:border-[var(--color-success-soft,var(--color-green-900))] dark:text-[var(--color-success-soft,var(--color-green-600))]',\n      },\n      {\n        variant: 'warning',\n        appearance: 'outline',\n        className:\n          'text-[var(--color-warning-accent,var(--color-yellow-700))] border-[var(--color-warning-soft,var(--color-yellow-200))] bg-[var(--color-warning-soft,var(--color-yellow-50))] dark:bg-[var(--color-warning-soft,var(--color-yellow-950))] dark:border-[var(--color-warning-soft,var(--color-yellow-900))] dark:text-[var(--color-warning-soft,var(--color-yellow-600))]',\n      },\n      {\n        variant: 'info',\n        appearance: 'outline',\n        className:\n          'text-[var(--color-info-accent,var(--color-violet-700))] border-[var(--color-info-soft,var(--color-violet-100))] bg-[var(--color-info-soft,var(--color-violet-50))] dark:bg-[var(--color-info-soft,var(--color-violet-950))] dark:border-[var(--color-info-soft,var(--color-violet-900))] dark:text-[var(--color-info-soft,var(--color-violet-400))]',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'outline',\n        className:\n          'text-[var(--color-destructive-accent,var(--color-red-700))] border-[var(--color-destructive-soft,var(--color-red-100))] bg-[var(--color-destructive-soft,var(--color-red-50))] dark:bg-[var(--color-destructive-soft,var(--color-red-950))] dark:border-[var(--color-destructive-soft,var(--color-red-900))] dark:text-[var(--color-destructive-soft,var(--color-red-600))]',\n      },\n      /* Ghost */\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className: 'text-primary',\n      },\n      {\n        variant: 'secondary',\n        appearance: 'ghost',\n        className: 'text-secondary-foreground',\n      },\n      {\n        variant: 'success',\n        appearance: 'ghost',\n        className: 'text-[var(--color-success-accent,var(--color-green-500))]',\n      },\n      {\n        variant: 'warning',\n        appearance: 'ghost',\n        className: 'text-[var(--color-warning-accent,var(--color-yellow-500))]',\n      },\n      {\n        variant: 'info',\n        appearance: 'ghost',\n        className: 'text-[var(--color-info-accent,var(--color-violet-500))]',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className: 'text-destructive',\n      },\n\n      { size: 'lg', appearance: 'ghost', className: 'px-0' },\n      { size: 'md', appearance: 'ghost', className: 'px-0' },\n      { size: 'sm', appearance: 'ghost', className: 'px-0' },\n      { size: 'xs', appearance: 'ghost', className: 'px-0' },\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      appearance: 'default',\n      size: 'md',\n    },\n  },\n);\n\nconst badgeButtonVariants = cva(\n  'cursor-pointer transition-all inline-flex items-center justify-center leading-none size-3.5 [&>svg]:opacity-100! [&>svg]:size-3.5 p-0 rounded-md -me-0.5 opacity-60 hover:opacity-100',\n  {\n    variants: {\n      variant: {\n        default: '',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nfunction Badge({\n  render,\n  asChild = false,\n  children,\n  className,\n  variant,\n  size,\n  appearance,\n  shape,\n  disabled,\n  ...props\n}: BadgeProps) {\n  const defaultProps = {\n    className: cn(badgeVariants({ variant, size, appearance, shape, disabled }), className),\n    'data-slot': 'badge',\n  };\n\n  // Determine render element based on asChild prop\n  const renderElement =\n    asChild && React.isValidElement(children)\n      ? (children as React.ReactElement<Record<string, unknown>, string | React.JSXElementConstructor<unknown>>)\n      : render || <span />;\n\n  // When using asChild, children becomes the element props, otherwise use children normally\n  const finalProps =\n    asChild && React.isValidElement(children)\n      ? mergeProps(defaultProps, props)\n      : mergeProps(defaultProps, { ...props, children });\n\n  const element = useRender({\n    render: renderElement,\n    props: finalProps,\n  });\n\n  return element;\n}\n\nfunction BadgeButton({ render, asChild = false, children, className, variant, ...props }: BadgeButtonProps) {\n  const defaultProps = {\n    className: cn(badgeButtonVariants({ variant, className })),\n    role: 'button' as const,\n    'data-slot': 'badge-button',\n  };\n\n  // Determine render element based on asChild prop\n  const renderElement =\n    asChild && React.isValidElement(children)\n      ? (children as React.ReactElement<Record<string, unknown>, string | React.JSXElementConstructor<unknown>>)\n      : render || <button />;\n\n  // When using asChild, children becomes the element props, otherwise use children normally\n  const finalProps =\n    asChild && React.isValidElement(children)\n      ? mergeProps(defaultProps, props)\n      : mergeProps(defaultProps, { ...props, children });\n\n  const element = useRender({\n    render: renderElement,\n    props: finalProps,\n  });\n\n  return element;\n}\n\nfunction BadgeDot({ className, ...props }: BadgeDotProps) {\n  return (\n    <span\n      data-slot=\"badge-dot\"\n      className={cn('size-1.5 rounded-full bg-[currentColor] opacity-75', className)}\n      {...props}\n    />\n  );\n}\n\nexport { Badge, BadgeButton, BadgeDot, badgeVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/base-button.tsx",
      "content": "import * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { mergeProps } from '@base-ui-components/react/merge-props';\nimport { useRender } from '@base-ui-components/react/use-render';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { ChevronDown, LucideIcon } from 'lucide-react';\n\nconst buttonVariants = cva(\n  'cursor-pointer group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center has-data-[arrow=true]:justify-between whitespace-nowrap text-sm font-medium ring-offset-background transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-60 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground hover:bg-primary/90 data-[state=open]:bg-primary/90',\n        mono: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black hover:bg-zinc-950/90 dark:hover:bg-zinc-300/90 data-[state=open]:bg-zinc-950/90 dark:data-[state=open]:bg-zinc-300/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90 data-[state=open]:bg-destructive/90',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90 data-[state=open]:bg-secondary/90',\n        outline: 'bg-background text-accent-foreground border border-input hover:bg-accent data-[state=open]:bg-accent',\n        dashed:\n          'text-accent-foreground border border-input border-dashed bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:text-accent-foreground',\n        ghost:\n          'text-accent-foreground hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\n        dim: 'text-muted-foreground hover:text-foreground data-[state=open]:text-foreground',\n        foreground: '',\n        inverse: '',\n      },\n      appearance: {\n        default: '',\n        ghost: '',\n      },\n      underline: {\n        solid: '',\n        dashed: '',\n      },\n      underlined: {\n        solid: '',\n        dashed: '',\n      },\n      size: {\n        lg: 'h-10 rounded-md px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-8.5 rounded-md px-3 gap-1.5 text-[0.8125rem] leading-(--text-sm--line-height) [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-7 rounded-md px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n        icon: 'size-8.5 rounded-md [&_svg:not([class*=size-])]:size-4 shrink-0',\n      },\n      autoHeight: {\n        true: '',\n        false: '',\n      },\n      shape: {\n        default: '',\n        circle: 'rounded-full',\n      },\n      mode: {\n        default: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        icon: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        link: 'text-primary h-auto p-0 bg-transparent rounded-none hover:bg-transparent data-[state=open]:bg-transparent',\n        input: `\n            justify-start font-normal hover:bg-background [&_svg]:transition-colors [&_svg]:hover:text-foreground data-[state=open]:bg-background \n            focus-visible:border-ring focus-visible:outline-hidden focus-visible:ring-[3px] focus-visible:ring-ring/30 \n            [[data-state=open]>&]:border-ring [[data-state=open]>&]:outline-hidden [[data-state=open]>&]:ring-[3px] \n            [[data-state=open]>&]:ring-ring/30 \n            aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n            in-data-[invalid=true]:border-destructive/60 in-data-[invalid=true]:ring-destructive/10  dark:in-data-[invalid=true]:border-destructive dark:in-data-[invalid=true]:ring-destructive/20\n          `,\n      },\n      placeholder: {\n        true: 'text-muted-foreground',\n        false: '',\n      },\n    },\n    compoundVariants: [\n      // Icons opacity for default mode\n      {\n        variant: 'ghost',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Icons opacity for default mode\n      {\n        variant: 'outline',\n        mode: 'input',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Auto height\n      {\n        size: 'md',\n        autoHeight: true,\n        className: 'h-auto min-h-8.5',\n      },\n      {\n        size: 'sm',\n        autoHeight: true,\n        className: 'h-auto min-h-7',\n      },\n      {\n        size: 'lg',\n        autoHeight: true,\n        className: 'h-auto min-h-10',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Link\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      // Ghost\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className: 'bg-transparent text-primary/90 hover:bg-primary/5 data-[state=open]:bg-primary/5',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className: 'bg-transparent text-destructive/90 hover:bg-destructive/5 data-[state=open]:bg-destructive/5',\n      },\n      {\n        variant: 'ghost',\n        mode: 'icon',\n        className: 'text-muted-foreground',\n      },\n\n      // Size\n      {\n        size: 'sm',\n        mode: 'icon',\n        className: 'w-7 h-7 p-0 [[&_svg:not([class*=size-])]:size-3.5',\n      },\n      {\n        size: 'md',\n        mode: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'lg',\n        mode: 'icon',\n        className: 'w-10 h-10 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n\n      // Input mode\n      {\n        mode: 'input',\n        placeholder: true,\n        variant: 'outline',\n        className: 'font-normal text-muted-foreground',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'sm',\n        className: 'gap-1.25',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'md',\n        className: 'gap-1.5',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'lg',\n        className: 'gap-1.5',\n      },\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      mode: 'default',\n      size: 'md',\n      shape: 'default',\n      appearance: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps extends useRender.ComponentProps<'button'>, VariantProps<typeof buttonVariants> {\n  selected?: boolean;\n  asChild?: boolean;\n}\n\nfunction Button({\n  render,\n  asChild = false,\n  children,\n  className,\n  selected,\n  variant,\n  shape,\n  appearance,\n  mode,\n  size,\n  autoHeight,\n  underlined,\n  underline,\n  placeholder = false,\n  ...props\n}: ButtonProps) {\n  const defaultProps = {\n    'data-slot': 'button',\n    className: cn(\n      buttonVariants({\n        variant,\n        size,\n        shape,\n        appearance,\n        mode,\n        autoHeight,\n        placeholder,\n        underlined,\n        underline,\n        className,\n      }),\n      asChild && props.disabled && 'pointer-events-none opacity-50',\n    ),\n    ...(selected && { 'data-state': 'open' as const }),\n  };\n\n  // Determine render element based on asChild prop\n  const renderElement =\n    asChild && React.isValidElement(children)\n      ? (children as React.ReactElement<Record<string, unknown>, string | React.JSXElementConstructor<unknown>>)\n      : render || <button />;\n\n  // When using asChild, children becomes the element props, otherwise use children normally\n  const finalProps =\n    asChild && React.isValidElement(children)\n      ? mergeProps(defaultProps, props)\n      : mergeProps(defaultProps, { ...props, children });\n\n  const element = useRender({\n    render: renderElement,\n    props: finalProps,\n  });\n\n  return element;\n}\n\ninterface ButtonArrowProps extends React.SVGProps<SVGSVGElement> {\n  icon?: LucideIcon;\n}\n\nfunction ButtonArrow({ icon: Icon = ChevronDown, className, ...props }: ButtonArrowProps) {\n  return <Icon data-slot=\"button-arrow\" className={cn('ms-auto -me-1', className)} {...props} />;\n}\n\nexport { Button, ButtonArrow, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/base-menu.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Menu as BaseUIMenu } from '@base-ui-components/react/menu';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\n\n// Root - Groups all parts of the menu\nfunction Menu({ ...props }: React.ComponentProps<typeof BaseUIMenu.Root>) {\n  return <BaseUIMenu.Root data-slot=\"menu\" {...props} />;\n}\n\n// Trigger - A button that opens the menu\nfunction MenuTrigger({ ...props }: React.ComponentProps<typeof BaseUIMenu.Trigger>) {\n  return <BaseUIMenu.Trigger data-slot=\"menu-trigger\" {...props} />;\n}\n\n// Portal - A portal element that moves the popup to a different part of the DOM\nfunction MenuPortal({ ...props }: React.ComponentProps<typeof BaseUIMenu.Portal>) {\n  return <BaseUIMenu.Portal data-slot=\"menu-portal\" {...props} />;\n}\n\n// Backdrop - An overlay displayed beneath the menu popup\nfunction MenuBackdrop({ ...props }: React.ComponentProps<typeof BaseUIMenu.Backdrop>) {\n  return <BaseUIMenu.Backdrop data-slot=\"menu-backdrop\" {...props} />;\n}\n\n// Positioner - Positions the menu popup against the trigger\nfunction MenuPositioner({ ...props }: React.ComponentProps<typeof BaseUIMenu.Positioner>) {\n  return <BaseUIMenu.Positioner data-slot=\"menu-positioner\" {...props} />;\n}\n\n// Popup - A container for the menu items\nfunction MenuPopup({ ...props }: React.ComponentProps<typeof BaseUIMenu.Popup>) {\n  return (\n    <BaseUIMenu.Popup\n      data-slot=\"menu-popup\"\n      {...props}\n      className={cn(\n        'space-y-0.5 z-50 min-w-[8rem] overflow-hidden rounded-md border border-border bg-popover p-2 text-popover-foreground shadow-md shadow-black/5',\n        'origin-[var(--transform-origin)] transition-[transform,scale,opacity] data-[ending-style]:scale-90 data-[ending-style]:opacity-0 data-[starting-style]:scale-90 data-[starting-style]:opacity-0',\n        props.className,\n      )}\n    />\n  );\n}\n\n// Arrow - Displays an element positioned against the menu anchor\nfunction MenuArrow({ ...props }: React.ComponentProps<typeof BaseUIMenu.Arrow>) {\n  return <BaseUIMenu.Arrow data-slot=\"menu-arrow\" {...props} />;\n}\n\n// Item - An individual interactive item in the menu\nfunction MenuItem({\n  className,\n  inset,\n  variant,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.Item> & {\n  inset?: boolean;\n  variant?: 'destructive';\n}) {\n  return (\n    <BaseUIMenu.Item\n      data-slot=\"menu-item\"\n      {...props}\n      className={cn(\n        'text-foreground relative flex cursor-default select-none items-center gap-2 rounded-md px-2 py-1.5 text-sm outline-hidden transition-colors data-disabled:pointer-events-none data-disabled:opacity-50',\n        '[&_svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&_svg]:shrink-0',\n        'focus:bg-accent focus:text-foreground',\n        'data-[highlighted=true]:bg-accent data-[highlighted=true]:text-accent-foreground',\n        inset && 'ps-8',\n        variant === 'destructive' &&\n          'text-destructive hover:text-destructive focus:text-destructive hover:bg-destructive/5 focus:bg-destructive/5 data-[active=true]:bg-destructive/5',\n        className,\n      )}\n    />\n  );\n}\n\n// Separator - A separator element accessible to screen readers\nfunction MenuSeparator({ className, ...props }: React.ComponentProps<typeof BaseUIMenu.Separator>) {\n  return (\n    <BaseUIMenu.Separator\n      data-slot=\"menu-separator\"\n      {...props}\n      className={cn('-mx-2 my-1.5 h-px bg-muted', className)}\n    />\n  );\n}\n\n// Group - Groups related menu items with the corresponding label\nfunction MenuGroup({ ...props }: React.ComponentProps<typeof BaseUIMenu.Group>) {\n  return <BaseUIMenu.Group data-slot=\"menu-group\" {...props} />;\n}\n\n// GroupLabel - An accessible label that is automatically associated with its parent group\nfunction MenuGroupLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.GroupLabel> & {\n  inset?: boolean;\n}) {\n  return (\n    <BaseUIMenu.GroupLabel\n      data-slot=\"menu-group-label\"\n      {...props}\n      className={cn('px-2 py-1.5 text-xs text-muted-foreground font-medium', inset && 'ps-8', className)}\n    />\n  );\n}\n\n// RadioGroup - Groups related radio items\nfunction MenuRadioGroup({ ...props }: React.ComponentProps<typeof BaseUIMenu.RadioGroup>) {\n  return <BaseUIMenu.RadioGroup data-slot=\"menu-radio-group\" {...props} />;\n}\n\n// RadioItem - A menu item that works like a radio button in a given group\nfunction MenuRadioItem({ className, children, ...props }: React.ComponentProps<typeof BaseUIMenu.RadioItem>) {\n  return (\n    <BaseUIMenu.RadioItem\n      data-slot=\"menu-radio-item\"\n      {...props}\n      className={cn(\n        'relative flex cursor-default select-none items-center rounded-md py-1.5 ps-6 pe-2 text-sm outline-hidden transition-colors focus:bg-accent focus:text-accent-foreground data-disabled:pointer-events-none data-disabled:opacity-50',\n        className,\n      )}\n    >\n      <span className=\"absolute start-1.5 flex h-3.5 w-3.5 items-center justify-center\">\n        <BaseUIMenu.RadioItemIndicator>\n          <Circle className=\"h-1.5 w-1.5 fill-primary stroke-primary\" />\n        </BaseUIMenu.RadioItemIndicator>\n      </span>\n      {children}\n    </BaseUIMenu.RadioItem>\n  );\n}\n\n// RadioItemIndicator - Indicates whether the radio item is selected\nfunction MenuRadioItemIndicator({ ...props }: React.ComponentProps<typeof BaseUIMenu.RadioItemIndicator>) {\n  return <BaseUIMenu.RadioItemIndicator data-slot=\"menu-radio-item-indicator\" {...props} />;\n}\n\n// CheckboxItem - A menu item that toggles a setting on or off\nfunction MenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.CheckboxItem>) {\n  return (\n    <BaseUIMenu.CheckboxItem\n      data-slot=\"menu-checkbox-item\"\n      checked={checked}\n      {...props}\n      className={cn(\n        'relative flex gap-2 cursor-default select-none items-center rounded-md py-1.5 ps-8 pe-2 text-sm outline-hidden transition-colors focus:bg-accent focus:text-accent-foreground data-disabled:pointer-events-none data-disabled:opacity-50',\n        className,\n      )}\n    >\n      <span className=\"absolute start-2 flex h-3.5 w-3.5 items-center text-muted-foreground justify-center\">\n        <BaseUIMenu.CheckboxItemIndicator>\n          <Check className=\"h-4 w-4 text-primary\" />\n        </BaseUIMenu.CheckboxItemIndicator>\n      </span>\n      {children}\n    </BaseUIMenu.CheckboxItem>\n  );\n}\n\n// CheckboxItemIndicator - Indicates whether the checkbox item is ticked\nfunction MenuCheckboxItemIndicator({ ...props }: React.ComponentProps<typeof BaseUIMenu.CheckboxItemIndicator>) {\n  return <BaseUIMenu.CheckboxItemIndicator data-slot=\"menu-checkbox-item-indicator\" {...props} />;\n}\n\n// SubmenuRoot - Groups all parts of a submenu\nfunction MenuSubmenuRoot({ ...props }: React.ComponentProps<typeof BaseUIMenu.SubmenuRoot>) {\n  return <BaseUIMenu.SubmenuRoot data-slot=\"menu-submenu-root\" {...props} />;\n}\n\n// SubmenuTrigger - A menu item that opens a submenu\nfunction MenuSubmenuTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.SubmenuTrigger> & {\n  inset?: boolean;\n}) {\n  return (\n    <BaseUIMenu.SubmenuTrigger\n      data-slot=\"menu-submenu-trigger\"\n      {...props}\n      className={cn(\n        'flex cursor-default gap-2 select-none items-center rounded-md px-2 py-1.5 text-sm outline-hidden',\n        'focus:bg-accent focus:text-foreground',\n        '[&[data-popup-open]]:bg-accent [&[data-popup-open]]:text-foreground',\n        '[&>svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&>svg:not([class*=size-])]:size-4 [&>svg]:shrink-0',\n        inset && 'ps-8',\n        className,\n      )}\n    >\n      {children}\n      <ChevronRight data-slot=\"menu-submenu-trigger-indicator\" className=\"ms-auto size-3.5! rtl:rotate-180\" />\n    </BaseUIMenu.SubmenuTrigger>\n  );\n}\n\n// Shortcut - A shortcut display component\nfunction MenuShortcut({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) {\n  return (\n    <span\n      data-slot=\"menu-shortcut\"\n      {...props}\n      className={cn('ms-auto text-xs tracking-widest opacity-60', className)}\n    />\n  );\n}\n\nexport {\n  Menu,\n  MenuTrigger,\n  MenuPortal,\n  MenuBackdrop,\n  MenuPositioner,\n  MenuPopup,\n  MenuArrow,\n  MenuItem,\n  MenuSeparator,\n  MenuGroup,\n  MenuGroupLabel,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuRadioItemIndicator,\n  MenuCheckboxItem,\n  MenuCheckboxItemIndicator,\n  MenuSubmenuRoot,\n  MenuSubmenuTrigger,\n  MenuShortcut,\n};\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}