{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "grid-background-hero",
  "type": "registry:component",
  "dependencies": ["class-variance-authority", "lucide-react", "radix-ui", "motion"],
  "registryDependencies": ["https://reui.io/r/button.json", "https://reui.io/r/grid-background.json"],
  "files": [
    {
      "path": "registry/default/components/grid-background/hero.tsx",
      "content": "'use client';\n\nimport { Button } from '@/registry/default/ui/button';\nimport { GridBackground } from '@/registry/default/ui/grid-background';\n\nexport default function Component() {\n  return (\n    <div className=\"relative h-[600px] w-full rounded-xl overflow-hidden\">\n      <GridBackground\n        gridSize=\"4:4\"\n        colors={{\n          background: 'bg-gradient-to-br from-slate-900 via-fuchsia-900 to-slate-900',\n          borderColor: 'border-purple-500/20',\n          borderSize: '1px',\n          borderStyle: 'solid',\n        }}\n        beams={{\n          count: 8,\n          colors: ['bg-purple-400', 'bg-indigo-400', 'bg-cyan-400', 'bg-violet-400', 'bg-fuchsia-400'],\n          speed: 5,\n          shadow: 'shadow-lg shadow-current/60',\n        }}\n      >\n        {/* Content */}\n        <div className=\"flex flex-col items-center justify-center max-w-4xl mx-auto space-y-10 h-full px-8\">\n          {/* Main heading */}\n          <h1 className=\"text-center text-3xl md:text-4xl font-bold bg-gradient-to-r from-white via-purple-200 to-fuchsia-400 bg-clip-text text-transparent animate-fade-in\">\n            AI Agents That\n            <br />\n            <span className=\"bg-gradient-to-r from-purple-400 to-cyan-400 bg-clip-text text-transparent\">\n              Actually Perform\n            </span>\n          </h1>\n\n          {/* Subtitle */}\n          <p className=\"text-center text-xl text-purple-100 max-w-lg mx-auto animate-fade-in\">\n            Deploy AI agents that deliver results that matter to your business and workflows.\n          </p>\n\n          {/* CTA buttons */}\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center animate-fade-in\">\n            <Button\n              size=\"lg\"\n              variant=\"ghost\"\n              className=\"bg-zinc-950 hover:bg-zinc-950 text-white hover:text-white hover:shadow-lg hover:shadow-fuchsia-950 w-40\"\n            >\n              Start Building Free\n            </Button>\n            <Button\n              size=\"lg\"\n              variant=\"ghost\"\n              className=\"bg-fuchsia-900 hover:bg-fuchsia-900 text-white hover:text-white hover:shadow-lg hover:shadow-fuchsia-950 w-40\"\n            >\n              Watch Demo\n            </Button>\n          </div>\n        </div>\n      </GridBackground>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/button.tsx",
      "content": "import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { ChevronDown, LucideIcon } from 'lucide-react';\nimport { Slot as SlotPrimitive } from 'radix-ui';\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'cursor-pointer group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center has-data-[arrow=true]:justify-between whitespace-nowrap text-sm font-medium ring-offset-background transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-60 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground hover:bg-primary/90 data-[state=open]:bg-primary/90',\n        mono: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black hover:bg-zinc-950/90 dark:hover:bg-zinc-300/90 data-[state=open]:bg-zinc-950/90 dark:data-[state=open]:bg-zinc-300/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90 data-[state=open]:bg-destructive/90',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90 data-[state=open]:bg-secondary/90',\n        outline: 'bg-background text-accent-foreground border border-input hover:bg-accent data-[state=open]:bg-accent',\n        dashed:\n          'text-accent-foreground border border-input border-dashed bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:text-accent-foreground',\n        ghost:\n          'text-accent-foreground hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\n        dim: 'text-muted-foreground hover:text-foreground data-[state=open]:text-foreground',\n        foreground: '',\n        inverse: '',\n      },\n      appearance: {\n        default: '',\n        ghost: '',\n      },\n      underline: {\n        solid: '',\n        dashed: '',\n      },\n      underlined: {\n        solid: '',\n        dashed: '',\n      },\n      size: {\n        lg: 'h-10 rounded-md px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-8.5 rounded-md px-3 gap-1.5 text-[0.8125rem] leading-(--text-sm--line-height) [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-7 rounded-md px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n        icon: 'size-8.5 rounded-md [&_svg:not([class*=size-])]:size-4 shrink-0',\n      },\n      autoHeight: {\n        true: '',\n        false: '',\n      },\n      shape: {\n        default: '',\n        circle: 'rounded-full',\n      },\n      mode: {\n        default: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        icon: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 shrink-0',\n        link: 'text-primary h-auto p-0 bg-transparent rounded-none hover:bg-transparent data-[state=open]:bg-transparent',\n        input: `\n            justify-start font-normal hover:bg-background [&_svg]:transition-colors [&_svg]:hover:text-foreground data-[state=open]:bg-background \n            focus-visible:border-ring focus-visible:outline-hidden focus-visible:ring-[3px] focus-visible:ring-ring/30 \n            [[data-state=open]>&]:border-ring [[data-state=open]>&]:outline-hidden [[data-state=open]>&]:ring-[3px] \n            [[data-state=open]>&]:ring-ring/30 \n            aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n            in-data-[invalid=true]:border-destructive/60 in-data-[invalid=true]:ring-destructive/10  dark:in-data-[invalid=true]:border-destructive dark:in-data-[invalid=true]:ring-destructive/20\n          `,\n      },\n      placeholder: {\n        true: 'text-muted-foreground',\n        false: '',\n      },\n    },\n    compoundVariants: [\n      // Icons opacity for default mode\n      {\n        variant: 'ghost',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Icons opacity for default mode\n      {\n        variant: 'outline',\n        mode: 'input',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Auto height\n      {\n        size: 'md',\n        autoHeight: true,\n        className: 'h-auto min-h-8.5',\n      },\n      {\n        size: 'sm',\n        autoHeight: true,\n        className: 'h-auto min-h-7',\n      },\n      {\n        size: 'lg',\n        autoHeight: true,\n        className: 'h-auto min-h-10',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Link\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      // Ghost\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className: 'bg-transparent text-primary/90 hover:bg-primary/5 data-[state=open]:bg-primary/5',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className: 'bg-transparent text-destructive/90 hover:bg-destructive/5 data-[state=open]:bg-destructive/5',\n      },\n      {\n        variant: 'ghost',\n        mode: 'icon',\n        className: 'text-muted-foreground',\n      },\n\n      // Size\n      {\n        size: 'sm',\n        mode: 'icon',\n        className: 'w-7 h-7 p-0 [[&_svg:not([class*=size-])]:size-3.5',\n      },\n      {\n        size: 'md',\n        mode: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'lg',\n        mode: 'icon',\n        className: 'w-10 h-10 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n\n      // Input mode\n      {\n        mode: 'input',\n        placeholder: true,\n        variant: 'outline',\n        className: 'font-normal text-muted-foreground',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'sm',\n        className: 'gap-1.25',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'md',\n        className: 'gap-1.5',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'lg',\n        className: 'gap-1.5',\n      },\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      mode: 'default',\n      size: 'md',\n      shape: 'default',\n      appearance: 'default',\n    },\n  },\n);\n\nfunction Button({\n  className,\n  selected,\n  variant,\n  shape,\n  appearance,\n  mode,\n  size,\n  autoHeight,\n  underlined,\n  underline,\n  asChild = false,\n  placeholder = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonVariants> & {\n    selected?: boolean;\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? SlotPrimitive.Slot : 'button';\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(\n        buttonVariants({\n          variant,\n          size,\n          shape,\n          appearance,\n          mode,\n          autoHeight,\n          placeholder,\n          underlined,\n          underline,\n          className,\n        }),\n        asChild && props.disabled && 'pointer-events-none opacity-50',\n      )}\n      {...(selected && { 'data-state': 'open' })}\n      {...props}\n    />\n  );\n}\n\ninterface ButtonArrowProps extends React.SVGProps<SVGSVGElement> {\n  icon?: LucideIcon; // Allows passing any Lucide icon\n}\n\nfunction ButtonArrow({ icon: Icon = ChevronDown, className, ...props }: ButtonArrowProps) {\n  return <Icon data-slot=\"button-arrow\" className={cn('ms-auto -me-1', className)} {...props} />;\n}\n\nexport { Button, ButtonArrow, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/grid-background.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { HTMLMotionProps, motion } from 'motion/react';\nimport { cn } from '@/lib/utils';\n\ntype GridSize = '4:4' | '5:5' | '6:6' | '6:8' | '8:8' | '8:12' | '10:10' | '12:12' | '12:16' | '16:16';\n\ntype GridBackgroundProps = HTMLMotionProps<'div'> & {\n  children?: React.ReactNode;\n  gridSize?: GridSize;\n  colors?: {\n    background?: string;\n    borderColor?: string;\n    borderSize?: string;\n    borderStyle?: 'solid' | 'dashed' | 'dotted';\n  };\n  beams?: {\n    count?: number;\n    colors?: string[];\n    size?: string;\n    shadow?: string;\n    speed?: number;\n  };\n};\n\nfunction GridBackground({\n  className,\n  children,\n  gridSize = '8:8',\n  colors = {},\n  beams = {},\n  ...props\n}: GridBackgroundProps) {\n  const {\n    background = 'bg-slate-900',\n    borderColor = 'border-slate-700/50',\n    borderSize = '1px',\n    borderStyle = 'solid',\n  } = colors;\n\n  const {\n    count = 12,\n    colors: beamColors = [\n      'bg-cyan-400',\n      'bg-purple-400',\n      'bg-fuchsia-400',\n      'bg-violet-400',\n      'bg-blue-400',\n      'bg-indigo-400',\n      'bg-green-400',\n      'bg-yellow-400',\n      'bg-orange-400',\n      'bg-red-400',\n      'bg-pink-400',\n      'bg-rose-400',\n    ],\n    shadow = 'shadow-lg shadow-cyan-400/50 rounded-full',\n    speed = 4,\n  } = beams;\n\n  // Parse grid dimensions\n  const [cols, rows] = gridSize.split(':').map(Number);\n\n  // Generate beam configurations\n  const animatedBeams = React.useMemo(\n    () =>\n      Array.from({ length: Math.min(count, 12) }, (_, i) => {\n        const direction = Math.random() > 0.5 ? 'horizontal' : 'vertical';\n        const startPosition = Math.random() > 0.5 ? 'start' : 'end';\n\n        return {\n          id: i,\n          color: beamColors[i % beamColors.length],\n          direction,\n          startPosition,\n          // For horizontal beams: choose a row index (1 to rows-1) - exclude edges\n          // For vertical beams: choose a column index (1 to cols-1) - exclude edges\n          gridLine:\n            direction === 'horizontal'\n              ? Math.floor(Math.random() * (rows - 1)) + 1\n              : Math.floor(Math.random() * (cols - 1)) + 1,\n          delay: Math.random() * 2,\n          duration: speed + Math.random() * 2,\n        };\n      }),\n    [count, beamColors, speed, cols, rows],\n  );\n\n  const gridStyle = {\n    '--border-style': borderStyle,\n  } as React.CSSProperties;\n\n  return (\n    <motion.div\n      data-slot=\"grid-background\"\n      className={cn('relative size-full overflow-hidden', background, className)}\n      style={gridStyle}\n      {...props}\n    >\n      {/* Grid Container */}\n      <div\n        className={cn('absolute inset-0 size-full', borderColor)}\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${cols}, 1fr)`,\n          gridTemplateRows: `repeat(${rows}, 1fr)`,\n          borderRightWidth: borderSize,\n          borderBottomWidth: borderSize,\n          borderRightStyle: borderStyle,\n          borderBottomStyle: borderStyle,\n        }}\n      >\n        {/* Grid Cells */}\n        {Array.from({ length: cols * rows }).map((_, index) => (\n          <div\n            key={index}\n            className={cn('relative', borderColor)}\n            style={{\n              borderTopWidth: borderSize,\n              borderLeftWidth: borderSize,\n              borderTopStyle: borderStyle,\n              borderLeftStyle: borderStyle,\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Animated Beams */}\n      {animatedBeams.map((beam) => {\n        // Calculate exact grid line positions as percentages\n        const horizontalPosition = (beam.gridLine / rows) * 100;\n        const verticalPosition = (beam.gridLine / cols) * 100;\n\n        return (\n          <motion.div\n            key={beam.id}\n            className={cn(\n              'absolute rounded-full backdrop-blur-sm z-20',\n              beam.color,\n              beam.direction === 'horizontal' ? 'w-6 h-0.5' : 'w-0.5 h-6',\n              shadow,\n            )}\n            style={{\n              ...(beam.direction === 'horizontal'\n                ? {\n                    // Position exactly on the horizontal grid line\n                    top: `${horizontalPosition}%`,\n                    left: beam.startPosition === 'start' ? '-12px' : 'calc(100% + 12px)',\n                    transform: 'translateY(-50%)', // Center on the line\n                  }\n                : {\n                    // Position exactly on the vertical grid line\n                    left: `${verticalPosition}%`,\n                    top: beam.startPosition === 'start' ? '-12px' : 'calc(100% + 12px)',\n                    transform: 'translateX(-50%)', // Center on the line\n                  }),\n            }}\n            initial={{\n              opacity: 0,\n            }}\n            animate={{\n              opacity: [0, 1, 1, 0],\n              ...(beam.direction === 'horizontal'\n                ? {\n                    // Move across the full width of the container\n                    x: beam.startPosition === 'start' ? [0, 'calc(100vw + 24px)'] : [0, 'calc(-100vw - 24px)'],\n                  }\n                : {\n                    // Move across the full height of the container\n                    y: beam.startPosition === 'start' ? [0, 'calc(100vh + 24px)'] : [0, 'calc(-100vh - 24px)'],\n                  }),\n            }}\n            transition={{\n              duration: beam.duration,\n              delay: beam.delay,\n              repeat: Infinity,\n              repeatDelay: Math.random() * 3 + 2, // 2-5s pause between repeats\n              ease: 'linear',\n              times: [0, 0.1, 0.9, 1], // Quick fade in, maintain, quick fade out\n            }}\n          />\n        );\n      })}\n\n      {/* Content Layer */}\n      <div className=\"relative z-10 size-full\">{children}</div>\n    </motion.div>\n  );\n}\n\nexport { GridBackground, type GridBackgroundProps };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
