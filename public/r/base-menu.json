{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "base-menu",
  "type": "registry:ui",
  "dependencies": [
    "@base-ui-components/react",
    "clsx",
    "tailwind-merge",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/default/ui/base-menu.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Menu as BaseUIMenu } from '@base-ui-components/react/menu';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\n\n// Root - Groups all parts of the menu\nfunction Menu({ ...props }: React.ComponentProps<typeof BaseUIMenu.Root>) {\n  return <BaseUIMenu.Root data-slot=\"menu\" {...props} />;\n}\n\n// Trigger - A button that opens the menu\nfunction MenuTrigger({ ...props }: React.ComponentProps<typeof BaseUIMenu.Trigger>) {\n  return <BaseUIMenu.Trigger data-slot=\"menu-trigger\" {...props} />;\n}\n\n// Portal - A portal element that moves the popup to a different part of the DOM\nfunction MenuPortal({ ...props }: React.ComponentProps<typeof BaseUIMenu.Portal>) {\n  return <BaseUIMenu.Portal data-slot=\"menu-portal\" {...props} />;\n}\n\n// Backdrop - An overlay displayed beneath the menu popup\nfunction MenuBackdrop({ ...props }: React.ComponentProps<typeof BaseUIMenu.Backdrop>) {\n  return <BaseUIMenu.Backdrop data-slot=\"menu-backdrop\" {...props} />;\n}\n\n// Positioner - Positions the menu popup against the trigger\nfunction MenuPositioner({ ...props }: React.ComponentProps<typeof BaseUIMenu.Positioner>) {\n  return <BaseUIMenu.Positioner data-slot=\"menu-positioner\" {...props} />;\n}\n\n// Popup - A container for the menu items\nfunction MenuPopup({ ...props }: React.ComponentProps<typeof BaseUIMenu.Popup>) {\n  return (\n    <BaseUIMenu.Popup\n      data-slot=\"menu-popup\"\n      {...props}\n      className={cn(\n        'space-y-0.5 z-50 min-w-[8rem] overflow-hidden rounded-md border border-border bg-popover p-2 text-popover-foreground shadow-md shadow-black/5',\n        'origin-[var(--transform-origin)] transition-[transform,scale,opacity] data-[ending-style]:scale-90 data-[ending-style]:opacity-0 data-[starting-style]:scale-90 data-[starting-style]:opacity-0',\n        props.className,\n      )}\n    />\n  );\n}\n\n// Arrow - Displays an element positioned against the menu anchor\nfunction MenuArrow({ ...props }: React.ComponentProps<typeof BaseUIMenu.Arrow>) {\n  return <BaseUIMenu.Arrow data-slot=\"menu-arrow\" {...props} />;\n}\n\n// Item - An individual interactive item in the menu\nfunction MenuItem({\n  className,\n  inset,\n  variant,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.Item> & {\n  inset?: boolean;\n  variant?: 'destructive';\n}) {\n  return (\n    <BaseUIMenu.Item\n      data-slot=\"menu-item\"\n      {...props}\n      className={cn(\n        'text-foreground relative flex cursor-default select-none items-center gap-2 rounded-md px-2 py-1.5 text-sm outline-hidden transition-colors data-disabled:pointer-events-none data-disabled:opacity-50',\n        '[&_svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&_svg]:shrink-0',\n        'focus:bg-accent focus:text-foreground',\n        'data-[highlighted=true]:bg-accent data-[highlighted=true]:text-accent-foreground',\n        inset && 'ps-8',\n        variant === 'destructive' &&\n          'text-destructive hover:text-destructive focus:text-destructive hover:bg-destructive/5 focus:bg-destructive/5 data-[active=true]:bg-destructive/5',\n        className,\n      )}\n    />\n  );\n}\n\n// Separator - A separator element accessible to screen readers\nfunction MenuSeparator({ className, ...props }: React.ComponentProps<typeof BaseUIMenu.Separator>) {\n  return (\n    <BaseUIMenu.Separator\n      data-slot=\"menu-separator\"\n      {...props}\n      className={cn('-mx-2 my-1.5 h-px bg-muted', className)}\n    />\n  );\n}\n\n// Group - Groups related menu items with the corresponding label\nfunction MenuGroup({ ...props }: React.ComponentProps<typeof BaseUIMenu.Group>) {\n  return <BaseUIMenu.Group data-slot=\"menu-group\" {...props} />;\n}\n\n// GroupLabel - An accessible label that is automatically associated with its parent group\nfunction MenuGroupLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.GroupLabel> & {\n  inset?: boolean;\n}) {\n  return (\n    <BaseUIMenu.GroupLabel\n      data-slot=\"menu-group-label\"\n      {...props}\n      className={cn('px-2 py-1.5 text-xs text-muted-foreground font-medium', inset && 'ps-8', className)}\n    />\n  );\n}\n\n// RadioGroup - Groups related radio items\nfunction MenuRadioGroup({ ...props }: React.ComponentProps<typeof BaseUIMenu.RadioGroup>) {\n  return <BaseUIMenu.RadioGroup data-slot=\"menu-radio-group\" {...props} />;\n}\n\n// RadioItem - A menu item that works like a radio button in a given group\nfunction MenuRadioItem({ className, children, ...props }: React.ComponentProps<typeof BaseUIMenu.RadioItem>) {\n  return (\n    <BaseUIMenu.RadioItem\n      data-slot=\"menu-radio-item\"\n      {...props}\n      className={cn(\n        'relative flex cursor-default select-none items-center rounded-md py-1.5 ps-6 pe-2 text-sm outline-hidden transition-colors focus:bg-accent focus:text-accent-foreground data-disabled:pointer-events-none data-disabled:opacity-50',\n        className,\n      )}\n    >\n      <span className=\"absolute start-1.5 flex h-3.5 w-3.5 items-center justify-center\">\n        <BaseUIMenu.RadioItemIndicator>\n          <Circle className=\"h-1.5 w-1.5 fill-primary stroke-primary\" />\n        </BaseUIMenu.RadioItemIndicator>\n      </span>\n      {children}\n    </BaseUIMenu.RadioItem>\n  );\n}\n\n// RadioItemIndicator - Indicates whether the radio item is selected\nfunction MenuRadioItemIndicator({ ...props }: React.ComponentProps<typeof BaseUIMenu.RadioItemIndicator>) {\n  return <BaseUIMenu.RadioItemIndicator data-slot=\"menu-radio-item-indicator\" {...props} />;\n}\n\n// CheckboxItem - A menu item that toggles a setting on or off\nfunction MenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.CheckboxItem>) {\n  return (\n    <BaseUIMenu.CheckboxItem\n      data-slot=\"menu-checkbox-item\"\n      checked={checked}\n      {...props}\n      className={cn(\n        'relative flex gap-2 cursor-default select-none items-center rounded-md py-1.5 ps-8 pe-2 text-sm outline-hidden transition-colors focus:bg-accent focus:text-accent-foreground data-disabled:pointer-events-none data-disabled:opacity-50',\n        className,\n      )}\n    >\n      <span className=\"absolute start-2 flex h-3.5 w-3.5 items-center text-muted-foreground justify-center\">\n        <BaseUIMenu.CheckboxItemIndicator>\n          <Check className=\"h-4 w-4 text-primary\" />\n        </BaseUIMenu.CheckboxItemIndicator>\n      </span>\n      {children}\n    </BaseUIMenu.CheckboxItem>\n  );\n}\n\n// CheckboxItemIndicator - Indicates whether the checkbox item is ticked\nfunction MenuCheckboxItemIndicator({ ...props }: React.ComponentProps<typeof BaseUIMenu.CheckboxItemIndicator>) {\n  return <BaseUIMenu.CheckboxItemIndicator data-slot=\"menu-checkbox-item-indicator\" {...props} />;\n}\n\n// SubmenuRoot - Groups all parts of a submenu\nfunction MenuSubmenuRoot({ ...props }: React.ComponentProps<typeof BaseUIMenu.SubmenuRoot>) {\n  return <BaseUIMenu.SubmenuRoot data-slot=\"menu-submenu-root\" {...props} />;\n}\n\n// SubmenuTrigger - A menu item that opens a submenu\nfunction MenuSubmenuTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.SubmenuTrigger> & {\n  inset?: boolean;\n}) {\n  return (\n    <BaseUIMenu.SubmenuTrigger\n      data-slot=\"menu-submenu-trigger\"\n      {...props}\n      className={cn(\n        'flex cursor-default gap-2 select-none items-center rounded-md px-2 py-1.5 text-sm outline-hidden',\n        'focus:bg-accent focus:text-foreground',\n        '[&[data-popup-open]]:bg-accent [&[data-popup-open]]:text-foreground',\n        '[&>svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&>svg:not([class*=size-])]:size-4 [&>svg]:shrink-0',\n        inset && 'ps-8',\n        className,\n      )}\n    >\n      {children}\n      <ChevronRight data-slot=\"menu-submenu-trigger-indicator\" className=\"ms-auto size-3.5! rtl:rotate-180\" />\n    </BaseUIMenu.SubmenuTrigger>\n  );\n}\n\n// Shortcut - A shortcut display component\nfunction MenuShortcut({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) {\n  return (\n    <span\n      data-slot=\"menu-shortcut\"\n      {...props}\n      className={cn('ms-auto text-xs tracking-widest opacity-60', className)}\n    />\n  );\n}\n\nexport {\n  Menu,\n  MenuTrigger,\n  MenuPortal,\n  MenuBackdrop,\n  MenuPositioner,\n  MenuPopup,\n  MenuArrow,\n  MenuItem,\n  MenuSeparator,\n  MenuGroup,\n  MenuGroupLabel,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuRadioItemIndicator,\n  MenuCheckboxItem,\n  MenuCheckboxItemIndicator,\n  MenuSubmenuRoot,\n  MenuSubmenuTrigger,\n  MenuShortcut,\n};\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}