{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "date-picker-presets",
  "type": "registry:component",
  "dependencies": [
    "date-fns",
    "react-day-picker",
    "clsx",
    "tailwind-merge",
    "class-variance-authority",
    "lucide-react",
    "radix-ui"
  ],
  "registryDependencies": [
    "https://reui.io/r/button.json",
    "https://reui.io/r/calendar.json",
    "https://reui.io/r/popover.json"
  ],
  "files": [
    {
      "path": "registry/default/components/date-picker/presets.tsx",
      "content": "'use client';\n\nimport { useEffect, useState } from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Button } from '@/registry/default/ui/button';\nimport { Calendar } from '@/registry/default/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/registry/default/ui/popover';\nimport {\n  endOfMonth,\n  endOfYear,\n  format,\n  isEqual,\n  startOfDay,\n  startOfMonth,\n  startOfYear,\n  subDays,\n  subMonths,\n  subYears,\n} from 'date-fns';\nimport { Calendar as CalendarIcon } from 'lucide-react';\nimport { DateRange } from 'react-day-picker';\n\nexport default function DatePickerDemo() {\n  const today = new Date();\n\n  // Define preset ranges in an array\n  const presets = [\n    { label: 'Today', range: { from: today, to: today } },\n    {\n      label: 'Yesterday',\n      range: { from: subDays(today, 1), to: subDays(today, 1) },\n    },\n    { label: 'Last 7 days', range: { from: subDays(today, 6), to: today } },\n    { label: 'Last 30 days', range: { from: subDays(today, 29), to: today } },\n    { label: 'Month to date', range: { from: startOfMonth(today), to: today } },\n    {\n      label: 'Last month',\n      range: {\n        from: startOfMonth(subMonths(today, 1)),\n        to: endOfMonth(subMonths(today, 1)),\n      },\n    },\n    { label: 'Year to date', range: { from: startOfYear(today), to: today } },\n    {\n      label: 'Last year',\n      range: {\n        from: startOfYear(subYears(today, 1)),\n        to: endOfYear(subYears(today, 1)),\n      },\n    },\n  ];\n\n  const [month, setMonth] = useState(today);\n  const defaultPreset = presets[2];\n  const [date, setDate] = useState<DateRange | undefined>(defaultPreset.range); // Default: Last 7 days\n  const [selectedPreset, setSelectedPreset] = useState<string | null>(defaultPreset.label);\n\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n\n  const handleApply = () => {\n    if (date) {\n      setDate(date);\n    }\n    setIsPopoverOpen(false);\n  };\n\n  const handleReset = () => {\n    setDate(defaultPreset.range);\n    setSelectedPreset(defaultPreset.label);\n    setIsPopoverOpen(false);\n  };\n\n  const handleSelect = (selected: DateRange | undefined) => {\n    setDate({\n      from: selected?.from || undefined,\n      to: selected?.to || undefined,\n    });\n    setSelectedPreset(null); // Clear preset when manually selecting a range\n  };\n\n  // Update `selectedPreset` whenever `date` changes\n  useEffect(() => {\n    const matchedPreset = presets.find(\n      (preset) =>\n        isEqual(startOfDay(preset.range.from), startOfDay(date?.from || new Date(0))) &&\n        isEqual(startOfDay(preset.range.to), startOfDay(date?.to || new Date(0))),\n    );\n    setSelectedPreset(matchedPreset?.label || null);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [date]);\n\n  return (\n    <Popover open={isPopoverOpen} onOpenChange={setIsPopoverOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          mode=\"input\"\n          placeholder={!date?.from && !date?.to}\n          className=\"w-[250px]\"\n        >\n          <CalendarIcon />\n          {date?.from ? (\n            date.to ? (\n              <>\n                {format(date.from, 'LLL dd, y')} - {format(date.to, 'LLL dd, y')}\n              </>\n            ) : (\n              format(date.from, 'LLL dd, y')\n            )\n          ) : (\n            <span>Pick a date range</span>\n          )}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-auto p-0\" align=\"center\">\n        <div className=\"flex max-sm:flex-col\">\n          <div className=\"relative border-border max-sm:order-1 max-sm:border-t sm:w-32\">\n            <div className=\"h-full border-border sm:border-e py-2\">\n              <div className=\"flex flex-col px-2 gap-[2px]\">\n                {presets.map((preset, index) => (\n                  <Button\n                    key={index}\n                    type=\"button\"\n                    variant=\"ghost\"\n                    className={cn('h-8 w-full justify-start', selectedPreset === preset.label && 'bg-accent')}\n                    onClick={() => {\n                      setDate(preset.range);\n\n                      // Update the calendar to show the starting month of the selected range\n                      setMonth(preset.range.from || today);\n\n                      setSelectedPreset(preset.label); // Explicitly set the active preset\n                    }}\n                  >\n                    {preset.label}\n                  </Button>\n                ))}\n              </div>\n            </div>\n          </div>\n          <Calendar\n            autoFocus\n            mode=\"range\"\n            month={month}\n            onMonthChange={setMonth}\n            showOutsideDays={false}\n            selected={date}\n            onSelect={handleSelect}\n            numberOfMonths={2}\n          />\n        </div>\n        <div className=\"flex items-center justify-end gap-1.5 border-t border-border p-3\">\n          <Button variant=\"outline\" onClick={handleReset}>\n            Reset\n          </Button>\n          <Button onClick={handleApply}>Apply</Button>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "registry/default/ui/button.tsx",
      "content": "import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { ChevronDown, LucideIcon } from 'lucide-react';\nimport { Slot as SlotPrimitive } from 'radix-ui';\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'cursor-pointer group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center has-data-[arrow=true]:justify-between whitespace-nowrap text-sm font-medium ring-offset-background transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-60 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground hover:bg-primary/90 data-[state=open]:bg-primary/90',\n        mono: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black hover:bg-zinc-950/90 dark:hover:bg-zinc-300/90 data-[state=open]:bg-zinc-950/90 dark:data-[state=open]:bg-zinc-300/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90 data-[state=open]:bg-destructive/90',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90 data-[state=open]:bg-secondary/90',\n        outline: 'bg-background text-accent-foreground border border-input hover:bg-accent data-[state=open]:bg-accent',\n        dashed:\n          'text-accent-foreground border border-input border-dashed bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:text-accent-foreground',\n        ghost:\n          'text-accent-foreground hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\n        dim: 'text-muted-foreground hover:text-foreground data-[state=open]:text-foreground',\n        foreground: '',\n        inverse: '',\n      },\n      appearance: {\n        default: '',\n        ghost: '',\n      },\n      underline: {\n        solid: '',\n        dashed: '',\n      },\n      underlined: {\n        solid: '',\n        dashed: '',\n      },\n      size: {\n        lg: 'h-10 rounded-md px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-8.5 rounded-md px-3 gap-1.5 text-[0.8125rem] leading-(--text-sm--line-height) [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-7 rounded-md px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n        icon: 'size-8.5 rounded-md [&_svg:not([class*=size-])]:size-4 shrink-0',\n      },\n      autoHeight: {\n        true: '',\n        false: '',\n      },\n      shape: {\n        default: '',\n        circle: 'rounded-full',\n      },\n      mode: {\n        default: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        icon: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 shrink-0',\n        link: 'text-primary h-auto p-0 bg-transparent rounded-none hover:bg-transparent data-[state=open]:bg-transparent',\n        input: `\n            justify-start font-normal hover:bg-background [&_svg]:transition-colors [&_svg]:hover:text-foreground data-[state=open]:bg-background \n            focus-visible:border-ring focus-visible:outline-hidden focus-visible:ring-[3px] focus-visible:ring-ring/30 \n            [[data-state=open]>&]:border-ring [[data-state=open]>&]:outline-hidden [[data-state=open]>&]:ring-[3px] \n            [[data-state=open]>&]:ring-ring/30 \n            aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n            in-data-[invalid=true]:border-destructive/60 in-data-[invalid=true]:ring-destructive/10  dark:in-data-[invalid=true]:border-destructive dark:in-data-[invalid=true]:ring-destructive/20\n          `,\n      },\n      placeholder: {\n        true: 'text-muted-foreground',\n        false: '',\n      },\n    },\n    compoundVariants: [\n      // Icons opacity for default mode\n      {\n        variant: 'ghost',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Icons opacity for default mode\n      {\n        variant: 'outline',\n        mode: 'input',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Auto height\n      {\n        size: 'md',\n        autoHeight: true,\n        className: 'h-auto min-h-8.5',\n      },\n      {\n        size: 'sm',\n        autoHeight: true,\n        className: 'h-auto min-h-7',\n      },\n      {\n        size: 'lg',\n        autoHeight: true,\n        className: 'h-auto min-h-10',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Link\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      // Ghost\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className: 'bg-transparent text-primary/90 hover:bg-primary/5 data-[state=open]:bg-primary/5',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className: 'bg-transparent text-destructive/90 hover:bg-destructive/5 data-[state=open]:bg-destructive/5',\n      },\n      {\n        variant: 'ghost',\n        mode: 'icon',\n        className: 'text-muted-foreground',\n      },\n\n      // Size\n      {\n        size: 'sm',\n        mode: 'icon',\n        className: 'w-7 h-7 p-0 [[&_svg:not([class*=size-])]:size-3.5',\n      },\n      {\n        size: 'md',\n        mode: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'lg',\n        mode: 'icon',\n        className: 'w-10 h-10 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n\n      // Input mode\n      {\n        mode: 'input',\n        placeholder: true,\n        variant: 'outline',\n        className: 'font-normal text-muted-foreground',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'sm',\n        className: 'gap-1.25',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'md',\n        className: 'gap-1.5',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'lg',\n        className: 'gap-1.5',\n      },\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      mode: 'default',\n      size: 'md',\n      shape: 'default',\n      appearance: 'default',\n    },\n  },\n);\n\nfunction Button({\n  className,\n  selected,\n  variant,\n  shape,\n  appearance,\n  mode,\n  size,\n  autoHeight,\n  underlined,\n  underline,\n  asChild = false,\n  placeholder = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonVariants> & {\n    selected?: boolean;\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? SlotPrimitive.Slot : 'button';\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(\n        buttonVariants({\n          variant,\n          size,\n          shape,\n          appearance,\n          mode,\n          autoHeight,\n          placeholder,\n          underlined,\n          underline,\n          className,\n        }),\n        asChild && props.disabled && 'pointer-events-none opacity-50',\n      )}\n      {...(selected && { 'data-state': 'open' })}\n      {...props}\n    />\n  );\n}\n\ninterface ButtonArrowProps extends React.SVGProps<SVGSVGElement> {\n  icon?: LucideIcon; // Allows passing any Lucide icon\n}\n\nfunction ButtonArrow({ icon: Icon = ChevronDown, className, ...props }: ButtonArrowProps) {\n  return <Icon data-slot=\"button-arrow\" className={cn('ms-auto -me-1', className)} {...props} />;\n}\n\nexport { Button, ButtonArrow, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/calendar.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { buttonVariants } from '@/registry/default/ui/button';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\nimport { DayPicker } from 'react-day-picker';\n\nfunction Calendar({ className, classNames, showOutsideDays = true, ...props }: React.ComponentProps<typeof DayPicker>) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn('p-3', className)}\n      classNames={{\n        months: 'relative flex flex-col sm:flex-row gap-4',\n        month: 'w-full',\n        month_caption: 'relative mx-10 mb-1 flex h-8 items-center justify-center z-20',\n        caption_label: 'text-sm font-medium',\n        nav: 'absolute top-0 flex w-full justify-between z-10',\n        button_previous: cn(\n          buttonVariants({ variant: 'ghost' }),\n          'size-8 text-muted-foreground/80 hover:text-foreground p-0',\n        ),\n        button_next: cn(\n          buttonVariants({ variant: 'ghost' }),\n          'size-8 text-muted-foreground/80 hover:text-foreground p-0',\n        ),\n        weekday: 'size-8 p-0 text-xs font-medium text-muted-foreground/80',\n        day_button:\n          'cursor-pointer relative flex size-8 items-center justify-center whitespace-nowrap rounded-md p-0 text-foreground transition-200 group-[[data-selected]:not(.range-middle)]:[transition-property:color,background-color,border-radius,box-shadow] group-[[data-selected]:not(.range-middle)]:duration-150 group-data-disabled:pointer-events-none focus-visible:z-10 hover:not-in-data-selected:bg-accent group-data-selected:bg-primary hover:not-in-data-selected:text-foreground group-data-selected:text-primary-foreground group-data-disabled:text-foreground/30 group-data-disabled:line-through group-data-outside:text-foreground/30 group-data-selected:group-data-outside:text-primary-foreground outline-none focus-visible:ring-ring/50 focus-visible:ring-[3px] group-[.range-start:not(.range-end)]:rounded-e-none group-[.range-end:not(.range-start)]:rounded-s-none group-[.range-middle]:rounded-none group-[.range-middle]:group-data-selected:bg-accent group-[.range-middle]:group-data-selected:text-foreground',\n        day: 'group size-8 px-0 py-px text-sm',\n        range_start: 'range-start',\n        range_end: 'range-end',\n        range_middle: 'range-middle',\n        today:\n          '*:after:pointer-events-none *:after:absolute *:after:bottom-1 *:after:start-1/2 *:after:z-10 *:after:size-[3px] *:after:-translate-x-1/2 rtl:*:after:translate-x-1/2 *:after:rounded-full *:after:bg-primary [&[data-selected]:not(.range-middle)>*]:after:bg-background [&[data-disabled]>*]:after:bg-foreground/30 *:after:transition-colors',\n        outside: 'text-muted-foreground data-selected:bg-accent/50 data-selected:text-muted-foreground',\n        hidden: 'invisible',\n        week_number: 'size-8 p-0 text-xs font-medium text-muted-foreground/80',\n        ...classNames,\n      }}\n      components={{\n        Chevron: (props) => {\n          if (props.orientation === 'left') {\n            return <ChevronLeft className=\"h-4 w-4 rtl:rotate-180\" />;\n          } else {\n            return <ChevronRight className=\"h-4 w-4 rtl:rotate-180\" />;\n          }\n        },\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { Calendar };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/popover.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Popover as PopoverPrimitive } from 'radix-ui';\n\nfunction Popover({ ...props }: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\n}\n\nfunction PopoverTrigger({ ...props }: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\n}\n\nfunction PopoverContent({\n  className,\n  align = 'center',\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  return (\n    <PopoverPrimitive.Content\n      data-slot=\"popover-content\"\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        'z-50 w-72 rounded-md border border-border bg-popover p-4 text-popover-foreground shadow-md shadow-black/5 outline-hidden data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Popover, PopoverContent, PopoverTrigger };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
