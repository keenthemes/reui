{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scrollspy-default",
  "type": "registry:component",
  "dependencies": ["class-variance-authority", "lucide-react", "radix-ui", "clsx", "tailwind-merge"],
  "registryDependencies": [
    "https://reui.io/r/button.json",
    "https://reui.io/r/scroll-area.json",
    "https://reui.io/r/scrollspy.json"
  ],
  "files": [
    {
      "path": "registry/default/components/scrollspy/default.tsx",
      "content": "'use client';\n\nimport { useRef } from 'react';\nimport { Button } from '@/registry/default/ui/button';\nimport { ScrollArea } from '@/registry/default/ui/scroll-area';\nimport { Scrollspy } from '@/registry/default/ui/scrollspy';\n\nexport default function Demo() {\n  const parentRef = useRef<HTMLDivElement | null>(null);\n  const nav = [\n    {\n      id: 'section-1',\n      label: 'Section 1',\n    },\n    {\n      id: 'section-2',\n      label: 'Section 2',\n    },\n    {\n      id: 'section-3',\n      label: 'Section 3',\n    },\n    {\n      id: 'section-4',\n      label: 'Section 4',\n    },\n    {\n      id: 'section-5',\n      label: 'Section 5',\n    },\n  ];\n\n  return (\n    <div className=\"flex grow gap-5\">\n      <div className=\"flex flex-col gap-2 w-[150px]\">\n        <Scrollspy offset={50} targetRef={parentRef} className=\"flex flex-col gap-2.5\">\n          {nav.map((item) => (\n            <Button\n              key={item.id}\n              variant=\"outline\"\n              data-scrollspy-anchor={item.id}\n              className={'data-[active=true]:bg-accent data-[active=true]:text-primary'}\n            >\n              {item.label}\n            </Button>\n          ))}\n        </Scrollspy>\n      </div>\n      <div className=\"grow\">\n        <ScrollArea className=\"h-[500px] grow pe-5 -me-5\" viewportRef={parentRef}>\n          <div className=\"space-y-8\">\n            {nav.map((item) => (\n              <div key={item.id} id={item.id} className=\"space-y-2.5\">\n                <h3 className=\"text-foreground text-base\">{item.label}</h3>\n                <div className=\"bg-muted rounded-lg h-[350px]\"></div>\n              </div>\n            ))}\n          </div>\n        </ScrollArea>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/button.tsx",
      "content": "import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { ChevronDown, LucideIcon } from 'lucide-react';\nimport { Slot as SlotPrimitive } from 'radix-ui';\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'cursor-pointer group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center has-data-[arrow=true]:justify-between whitespace-nowrap text-sm font-medium ring-offset-background transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-60 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground hover:bg-primary/90 data-[state=open]:bg-primary/90',\n        mono: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black hover:bg-zinc-950/90 dark:hover:bg-zinc-300/90 data-[state=open]:bg-zinc-950/90 dark:data-[state=open]:bg-zinc-300/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90 data-[state=open]:bg-destructive/90',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90 data-[state=open]:bg-secondary/90',\n        outline: 'bg-background text-accent-foreground border border-input hover:bg-accent data-[state=open]:bg-accent',\n        dashed:\n          'text-accent-foreground border border-input border-dashed bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:text-accent-foreground',\n        ghost:\n          'text-accent-foreground hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\n        dim: 'text-muted-foreground hover:text-foreground data-[state=open]:text-foreground',\n        foreground: '',\n        inverse: '',\n      },\n      appearance: {\n        default: '',\n        ghost: '',\n      },\n      underline: {\n        solid: '',\n        dashed: '',\n      },\n      underlined: {\n        solid: '',\n        dashed: '',\n      },\n      size: {\n        lg: 'h-10 rounded-md px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-8.5 rounded-md px-3 gap-1.5 text-[0.8125rem] leading-(--text-sm--line-height) [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-7 rounded-md px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n        icon: 'size-8.5 rounded-md [&_svg:not([class*=size-])]:size-4 shrink-0',\n      },\n      autoHeight: {\n        true: '',\n        false: '',\n      },\n      shape: {\n        default: '',\n        circle: 'rounded-full',\n      },\n      mode: {\n        default: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        icon: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 shrink-0',\n        link: 'text-primary h-auto p-0 bg-transparent rounded-none hover:bg-transparent data-[state=open]:bg-transparent',\n        input: `\n            justify-start font-normal hover:bg-background [&_svg]:transition-colors [&_svg]:hover:text-foreground data-[state=open]:bg-background \n            focus-visible:border-ring focus-visible:outline-hidden focus-visible:ring-[3px] focus-visible:ring-ring/30 \n            [[data-state=open]>&]:border-ring [[data-state=open]>&]:outline-hidden [[data-state=open]>&]:ring-[3px] \n            [[data-state=open]>&]:ring-ring/30 \n            aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n            in-data-[invalid=true]:border-destructive/60 in-data-[invalid=true]:ring-destructive/10  dark:in-data-[invalid=true]:border-destructive dark:in-data-[invalid=true]:ring-destructive/20\n          `,\n      },\n      placeholder: {\n        true: 'text-muted-foreground',\n        false: '',\n      },\n    },\n    compoundVariants: [\n      // Icons opacity for default mode\n      {\n        variant: 'ghost',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Icons opacity for default mode\n      {\n        variant: 'outline',\n        mode: 'input',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Auto height\n      {\n        size: 'md',\n        autoHeight: true,\n        className: 'h-auto min-h-8.5',\n      },\n      {\n        size: 'sm',\n        autoHeight: true,\n        className: 'h-auto min-h-7',\n      },\n      {\n        size: 'lg',\n        autoHeight: true,\n        className: 'h-auto min-h-10',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Link\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      // Ghost\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className: 'bg-transparent text-primary/90 hover:bg-primary/5 data-[state=open]:bg-primary/5',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className: 'bg-transparent text-destructive/90 hover:bg-destructive/5 data-[state=open]:bg-destructive/5',\n      },\n      {\n        variant: 'ghost',\n        mode: 'icon',\n        className: 'text-muted-foreground',\n      },\n\n      // Size\n      {\n        size: 'sm',\n        mode: 'icon',\n        className: 'w-7 h-7 p-0 [[&_svg:not([class*=size-])]:size-3.5',\n      },\n      {\n        size: 'md',\n        mode: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'lg',\n        mode: 'icon',\n        className: 'w-10 h-10 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n\n      // Input mode\n      {\n        mode: 'input',\n        placeholder: true,\n        variant: 'outline',\n        className: 'font-normal text-muted-foreground',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'sm',\n        className: 'gap-1.25',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'md',\n        className: 'gap-1.5',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'lg',\n        className: 'gap-1.5',\n      },\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      mode: 'default',\n      size: 'md',\n      shape: 'default',\n      appearance: 'default',\n    },\n  },\n);\n\nfunction Button({\n  className,\n  selected,\n  variant,\n  shape,\n  appearance,\n  mode,\n  size,\n  autoHeight,\n  underlined,\n  underline,\n  asChild = false,\n  placeholder = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonVariants> & {\n    selected?: boolean;\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? SlotPrimitive.Slot : 'button';\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(\n        buttonVariants({\n          variant,\n          size,\n          shape,\n          appearance,\n          mode,\n          autoHeight,\n          placeholder,\n          underlined,\n          underline,\n          className,\n        }),\n        asChild && props.disabled && 'pointer-events-none opacity-50',\n      )}\n      {...(selected && { 'data-state': 'open' })}\n      {...props}\n    />\n  );\n}\n\ninterface ButtonArrowProps extends React.SVGProps<SVGSVGElement> {\n  icon?: LucideIcon; // Allows passing any Lucide icon\n}\n\nfunction ButtonArrow({ icon: Icon = ChevronDown, className, ...props }: ButtonArrowProps) {\n  return <Icon data-slot=\"button-arrow\" className={cn('ms-auto -me-1', className)} {...props} />;\n}\n\nexport { Button, ButtonArrow, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/scroll-area.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { ScrollArea as ScrollAreaPrimitive } from 'radix-ui';\n\nfunction ScrollArea({\n  className,\n  viewportClassName,\n  children,\n  viewportRef,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root> & {\n  viewportRef?: React.Ref<HTMLDivElement>;\n  viewportClassName?: string;\n}) {\n  return (\n    <ScrollAreaPrimitive.Root data-slot=\"scroll-area\" className={cn('relative overflow-hidden', className)} {...props}>\n      <ScrollAreaPrimitive.Viewport\n        ref={viewportRef}\n        className={cn('h-full w-full rounded-[inherit]', viewportClassName)}\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  );\n}\n\nfunction ScrollBar({\n  className,\n  orientation = 'vertical',\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        'flex touch-none select-none transition-colors',\n        orientation === 'vertical' && 'h-full w-2 border-l border-l-transparent p-[1px]',\n        orientation === 'horizontal' && 'h-2 flex-col border-t border-t-transparent p-[1px]',\n        className,\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  );\n}\n\nexport { ScrollArea, ScrollBar };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/scrollspy.tsx",
      "content": "import { ReactNode, RefObject, useCallback, useEffect, useRef } from 'react';\n\ntype ScrollspyProps = {\n  children: ReactNode;\n  targetRef?: RefObject<HTMLElement | HTMLDivElement | Document | null | undefined>;\n  onUpdate?: (id: string) => void;\n  offset?: number;\n  smooth?: boolean;\n  className?: string;\n  dataAttribute?: string;\n  history?: boolean;\n  throttleTime?: number;\n};\n\nexport function Scrollspy({\n  children,\n  targetRef,\n  onUpdate,\n  className,\n  offset = 0,\n  smooth = true,\n  dataAttribute = 'scrollspy',\n  history = true,\n}: ScrollspyProps) {\n  const selfRef = useRef<HTMLDivElement | null>(null);\n  const anchorElementsRef = useRef<Element[] | null>(null);\n  const prevIdTracker = useRef<string | null>(null);\n\n  // Sets active nav, hash, prevIdTracker, and calls onUpdate\n  const setActiveSection = useCallback(\n    (sectionId: string | null, force = false) => {\n      if (!sectionId) return;\n      anchorElementsRef.current?.forEach((item) => {\n        const id = item.getAttribute(`data-${dataAttribute}-anchor`);\n        if (id === sectionId) {\n          item.setAttribute('data-active', 'true');\n        } else {\n          item.removeAttribute('data-active');\n        }\n      });\n      if (onUpdate) onUpdate(sectionId);\n      if (history && (force || prevIdTracker.current !== sectionId)) {\n        window.history.replaceState({}, '', `#${sectionId}`);\n      }\n      prevIdTracker.current = sectionId;\n    },\n    [anchorElementsRef, dataAttribute, history, onUpdate],\n  );\n\n  const handleScroll = useCallback(() => {\n    if (!anchorElementsRef.current || anchorElementsRef.current.length === 0) return;\n    const scrollElement = targetRef?.current === document ? window : targetRef?.current;\n    const scrollTop =\n      scrollElement === window\n        ? window.scrollY || document.documentElement.scrollTop\n        : (scrollElement as HTMLElement).scrollTop;\n\n    // Find the anchor whose section is closest to but not past the top\n    let activeIdx = 0;\n    let minDelta = Infinity;\n    anchorElementsRef.current.forEach((anchor, idx) => {\n      const sectionId = anchor.getAttribute(`data-${dataAttribute}-anchor`);\n      const sectionElement = document.getElementById(sectionId!);\n      if (!sectionElement) return;\n      let customOffset = offset;\n      const dataOffset = anchor.getAttribute(`data-${dataAttribute}-offset`);\n      if (dataOffset) customOffset = parseInt(dataOffset, 10);\n      const delta = Math.abs(sectionElement.offsetTop - customOffset - scrollTop);\n      if (sectionElement.offsetTop - customOffset <= scrollTop && delta < minDelta) {\n        minDelta = delta;\n        activeIdx = idx;\n      }\n    });\n\n    // If at bottom, force last anchor\n    if (scrollElement) {\n      const scrollHeight =\n        scrollElement === window ? document.documentElement.scrollHeight : (scrollElement as HTMLElement).scrollHeight;\n      const clientHeight = scrollElement === window ? window.innerHeight : (scrollElement as HTMLElement).clientHeight;\n      if (scrollTop + clientHeight >= scrollHeight - 2) {\n        activeIdx = anchorElementsRef.current.length - 1;\n      }\n    }\n\n    // Set only one anchor active and sync the URL hash\n    const activeAnchor = anchorElementsRef.current[activeIdx];\n    const sectionId = activeAnchor?.getAttribute(`data-${dataAttribute}-anchor`) || null;\n    setActiveSection(sectionId);\n    // Remove data-active from all others\n    anchorElementsRef.current.forEach((item, idx) => {\n      if (idx !== activeIdx) {\n        item.removeAttribute('data-active');\n      }\n    });\n  }, [anchorElementsRef, targetRef, dataAttribute, offset, setActiveSection]);\n\n  const scrollTo = useCallback(\n    (anchorElement: HTMLElement) => (event?: Event) => {\n      if (event) event.preventDefault();\n      const sectionId = anchorElement.getAttribute(`data-${dataAttribute}-anchor`)?.replace('#', '') || null;\n      if (!sectionId) return;\n      const sectionElement = document.getElementById(sectionId);\n      if (!sectionElement) return;\n\n      const scrollToElement = targetRef?.current === document ? window : targetRef?.current;\n\n      let customOffset = offset;\n      const dataOffset = anchorElement.getAttribute(`data-${dataAttribute}-offset`);\n      if (dataOffset) {\n        customOffset = parseInt(dataOffset, 10);\n      }\n\n      const scrollTop = sectionElement.offsetTop - customOffset;\n\n      if (scrollToElement && 'scrollTo' in scrollToElement) {\n        scrollToElement.scrollTo({\n          top: scrollTop,\n          left: 0,\n          behavior: smooth ? 'smooth' : 'auto',\n        });\n      }\n      setActiveSection(sectionId, true);\n    },\n    [dataAttribute, offset, smooth, targetRef, setActiveSection],\n  );\n\n  // Scroll to the section if the ID is present in the URL hash\n  const scrollToHashSection = useCallback(() => {\n    const hash = CSS.escape(window.location.hash.replace('#', ''));\n\n    if (hash) {\n      const targetElement = document.querySelector(`[data-${dataAttribute}-anchor=\"${hash}\"]`) as HTMLElement;\n      if (targetElement) {\n        scrollTo(targetElement)();\n      }\n    }\n  }, [dataAttribute, scrollTo]);\n\n  useEffect(() => {\n    // Query elements and store them in the ref, avoiding unnecessary re-renders\n    if (selfRef.current) {\n      anchorElementsRef.current = Array.from(selfRef.current.querySelectorAll(`[data-${dataAttribute}-anchor]`));\n    }\n\n    anchorElementsRef.current?.forEach((item) => {\n      item.addEventListener('click', scrollTo(item as HTMLElement));\n    });\n\n    const scrollElement = targetRef?.current === document ? window : targetRef?.current;\n\n    // Attach the scroll event to the correct scrollable element\n    scrollElement?.addEventListener('scroll', handleScroll);\n\n    // Check if there's a hash in the URL and scroll to the corresponding section\n    setTimeout(() => {\n      scrollToHashSection();\n      // Wait for scroll to settle, then update nav highlighting\n      setTimeout(() => {\n        handleScroll();\n      }, 100);\n    }, 100); // Adding a slight delay to ensure content is fully rendered\n\n    return () => {\n      scrollElement?.removeEventListener('scroll', handleScroll);\n      anchorElementsRef.current?.forEach((item) => {\n        item.removeEventListener('click', scrollTo(item as HTMLElement));\n      });\n    };\n  }, [targetRef, selfRef, handleScroll, dataAttribute, scrollTo, scrollToHashSection]);\n\n  return (\n    <div data-slot=\"scrollspy\" className={className} ref={selfRef}>\n      {children}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}
