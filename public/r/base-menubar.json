{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "base-menubar",
  "type": "registry:ui",
  "dependencies": ["@base-ui-components/react", "clsx", "tailwind-merge", "lucide-react"],
  "files": [
    {
      "path": "registry/default/ui/base-menubar.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Menubar as BaseUIMenubar } from '@base-ui-components/react/menubar';\nimport { Menu as BaseUIMenu } from '@base-ui-components/react/menu';\nimport { Check, ChevronRight } from 'lucide-react';\n\n// Root - Groups all parts of the menubar\nfunction Menubar({ className, ...props }: React.ComponentProps<typeof BaseUIMenubar>) {\n  return (\n    <BaseUIMenubar\n      data-slot=\"menubar\"\n      className={cn('flex h-10 items-center gap-1 rounded-md border bg-background p-1', className)}\n      {...props}\n    />\n  );\n}\n\n// Menu - Groups all parts of a menubar menu\nfunction MenubarMenu({ ...props }: React.ComponentProps<typeof BaseUIMenu.Root>) {\n  return <BaseUIMenu.Root data-slot=\"menubar-menu\" {...props} />;\n}\n\n// Trigger - A button that opens the menubar menu\nfunction MenubarTrigger({ className, ...props }: React.ComponentProps<typeof BaseUIMenu.Trigger>) {\n  return (\n    <BaseUIMenu.Trigger\n      data-slot=\"menubar-trigger\"\n      className={cn(\n        'h-8 rounded px-3 text-sm font-medium text-foreground outline-none select-none',\n        'focus-visible:bg-accent data-[disabled]:opacity-50 data-[popup-open]:bg-accent',\n        '[&>svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&>svg]:shrink-0',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n// Portal - A portal element that moves the popup to a different part of the DOM\nfunction MenubarPortal({ ...props }: React.ComponentProps<typeof BaseUIMenu.Portal>) {\n  return <BaseUIMenu.Portal data-slot=\"menubar-portal\" {...props} />;\n}\n\n// Positioner - Positions the menubar popup against the trigger\nfunction MenubarPositioner({ ...props }: React.ComponentProps<typeof BaseUIMenu.Positioner>) {\n  return <BaseUIMenu.Positioner data-slot=\"menubar-positioner\" {...props} />;\n}\n\n// Popup - A container for the menubar items\nfunction MenubarPopup({ className, ...props }: React.ComponentProps<typeof BaseUIMenu.Popup>) {\n  return (\n    <BaseUIMenu.Popup\n      data-slot=\"menubar-popup\"\n      className={cn(\n        'origin-[var(--transform-origin)] rounded-md bg-popover py-1 text-popover-foreground shadow-lg shadow-black/5 outline outline-border',\n        'data-[ending-style]:opacity-0 data-[ending-style]:transition-opacity data-[instant]:transition-none',\n        'dark:shadow-none dark:outline dark:-outline-offset-1 dark:outline-border',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n// Item - An individual interactive item in the menubar\nfunction MenubarItem({\n  className,\n  inset,\n  variant,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.Item> & {\n  inset?: boolean;\n  variant?: 'destructive';\n}) {\n  return (\n    <BaseUIMenu.Item\n      data-slot=\"menubar-item\"\n      className={cn(\n        'flex cursor-default items-center justify-between gap-4 px-4 py-2 text-sm leading-4 outline-none select-none',\n        'data-[highlighted]:relative data-[highlighted]:z-0 data-[highlighted]:text-foreground',\n        'data-[highlighted]:before:absolute data-[highlighted]:before:inset-x-1 data-[highlighted]:before:inset-y-0 data-[highlighted]:before:z-[-1] data-[highlighted]:before:rounded-sm data-[highlighted]:before:bg-accent',\n        '[&_svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&_svg]:shrink-0',\n        inset && 'ps-8',\n        variant === 'destructive' &&\n          'text-destructive hover:text-destructive focus:text-destructive hover:bg-destructive/5 focus:bg-destructive/5 data-[active=true]:bg-destructive/5',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n// Separator - A separator element accessible to screen readers\nfunction MenubarSeparator({ className, ...props }: React.ComponentProps<typeof BaseUIMenu.Separator>) {\n  return (\n    <BaseUIMenu.Separator\n      data-slot=\"menubar-separator\"\n      className={cn('my-1.5 h-px bg-border', className)}\n      {...props}\n    />\n  );\n}\n\n// Group - Groups related menubar items with the corresponding label\nfunction MenubarGroup({ ...props }: React.ComponentProps<typeof BaseUIMenu.Group>) {\n  return <BaseUIMenu.Group data-slot=\"menubar-group\" {...props} />;\n}\n\n// GroupLabel - An accessible label that is automatically associated with its parent group\nfunction MenubarGroupLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.GroupLabel> & {\n  inset?: boolean;\n}) {\n  return (\n    <BaseUIMenu.GroupLabel\n      data-slot=\"menubar-group-label\"\n      className={cn('px-2 py-1.5 text-xs text-muted-foreground font-medium', inset && 'ps-8', className)}\n      {...props}\n    />\n  );\n}\n\n// RadioGroup - Groups related radio items\nfunction MenubarRadioGroup({ ...props }: React.ComponentProps<typeof BaseUIMenu.RadioGroup>) {\n  return <BaseUIMenu.RadioGroup data-slot=\"menubar-radio-group\" {...props} />;\n}\n\n// RadioItem - A menubar item that works like a radio button in a given group\nfunction MenubarRadioItem({ className, children, ...props }: React.ComponentProps<typeof BaseUIMenu.RadioItem>) {\n  return (\n    <BaseUIMenu.RadioItem\n      data-slot=\"menubar-radio-item\"\n      className={cn(\n        'flex cursor-default items-center justify-between gap-4 ps-8 pe-4 py-2 text-sm leading-4 outline-none select-none',\n        'data-[highlighted]:relative data-[highlighted]:z-0 data-[highlighted]:text-foreground',\n        'data-[highlighted]:before:absolute data-[highlighted]:before:inset-x-1 data-[highlighted]:before:inset-y-0 data-[highlighted]:before:z-[-1] data-[highlighted]:before:rounded-sm data-[highlighted]:before:bg-accent',\n        'data-disabled:pointer-events-none data-disabled:opacity-50',\n        '[&_svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&_svg]:shrink-0',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <span className=\"absolute start-2.5 flex h-3.5 w-3.5 items-center justify-center\">\n        <BaseUIMenu.RadioItemIndicator className=\"size-1.5 rounded-full bg-primary\"/>\n      </span>\n    </BaseUIMenu.RadioItem>\n  );\n}\n\n// RadioItemIndicator - Indicates whether the radio item is selected\nfunction MenubarRadioItemIndicator({ ...props }: React.ComponentProps<typeof BaseUIMenu.RadioItemIndicator>) {\n  return <BaseUIMenu.RadioItemIndicator data-slot=\"menubar-radio-item-indicator\" {...props} />;\n}\n\n// CheckboxItem - A menubar item that toggles a setting on or off\nfunction MenubarCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.CheckboxItem>) {\n  return (\n    <BaseUIMenu.CheckboxItem\n      data-slot=\"menubar-checkbox-item\"\n      checked={checked}\n      className={cn(\n        'relative flex cursor-default items-center gap-4 ps-8 pe-4 py-2 text-sm leading-4 outline-none select-none',\n        'data-[highlighted]:relative data-[highlighted]:z-0 data-[highlighted]:text-foreground',\n        'data-[highlighted]:before:absolute data-[highlighted]:before:inset-x-1 data-[highlighted]:before:inset-y-0 data-[highlighted]:before:z-[-1] data-[highlighted]:before:rounded-sm data-[highlighted]:before:bg-accent',\n        'data-disabled:pointer-events-none data-disabled:opacity-50',\n        '[&_svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&_svg]:shrink-0',\n        className,\n      )}\n      {...props}\n    >      \n      <span className=\"absolute start-2.5 flex h-3.5 w-3.5 items-center justify-center\">\n        <BaseUIMenu.CheckboxItemIndicator>\n          <Check className=\"h-4 w-4 text-primary\" />\n        </BaseUIMenu.CheckboxItemIndicator>\n      </span>\n      {children}\n    </BaseUIMenu.CheckboxItem>\n  );\n}\n\n// CheckboxItemIndicator - Indicates whether the checkbox item is ticked\nfunction MenubarCheckboxItemIndicator({ ...props }: React.ComponentProps<typeof BaseUIMenu.CheckboxItemIndicator>) {\n  return <BaseUIMenu.CheckboxItemIndicator data-slot=\"menubar-checkbox-item-indicator\" {...props} />;\n}\n\n// SubmenuRoot - Groups all parts of a submenu\nfunction MenubarSubmenuRoot({ ...props }: React.ComponentProps<typeof BaseUIMenu.SubmenuRoot>) {\n  return <BaseUIMenu.SubmenuRoot data-slot=\"menubar-submenu-root\" {...props} />;\n}\n\n// SubmenuTrigger - A menubar item that opens a submenu\nfunction MenubarSubmenuTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof BaseUIMenu.SubmenuTrigger> & {\n  inset?: boolean;\n}) {\n  return (\n    <BaseUIMenu.SubmenuTrigger\n      data-slot=\"menubar-submenu-trigger\"\n      className={cn(\n        'flex w-full cursor-default items-center justify-between gap-4 px-4 py-2 text-sm leading-4 outline-none select-none',\n        'data-[highlighted]:relative data-[highlighted]:z-0 data-[highlighted]:text-foreground',\n        'data-[highlighted]:before:absolute data-[highlighted]:before:inset-x-1 data-[highlighted]:before:inset-y-0 data-[highlighted]:before:z-[-1] data-[highlighted]:before:rounded-sm data-[highlighted]:before:bg-accent',\n        'data-[popup-open]:relative data-[popup-open]:z-0 data-[popup-open]:before:absolute data-[popup-open]:before:inset-x-1 data-[popup-open]:before:inset-y-0 data-[popup-open]:before:z-[-1] data-[popup-open]:before:rounded-sm data-[popup-open]:before:bg-accent/50',\n        'data-[highlighted]:data-[popup-open]:before:bg-accent',\n        '[&>svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&>svg]:shrink-0',\n        inset && 'ps-8',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRight data-slot=\"menubar-submenu-trigger-indicator\" className=\"size-3.5 rtl:rotate-180\" />\n    </BaseUIMenu.SubmenuTrigger>\n  );\n}\n\n// Shortcut - A shortcut display component\nfunction MenubarShortcut({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) {\n  return (\n    <span\n      data-slot=\"menubar-shortcut\"\n      className={cn('ms-auto text-xs tracking-widest opacity-60', className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarPortal,\n  MenubarPositioner,\n  MenubarPopup,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarGroup,\n  MenubarGroupLabel,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarRadioItemIndicator,\n  MenubarCheckboxItem,\n  MenubarCheckboxItemIndicator,\n  MenubarSubmenuRoot,\n  MenubarSubmenuTrigger,\n  MenubarShortcut,\n};\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}
