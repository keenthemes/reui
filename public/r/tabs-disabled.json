{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tabs-disabled",
  "type": "registry:component",
  "dependencies": ["clsx", "tailwind-merge", "class-variance-authority", "radix-ui", "lucide-react"],
  "registryDependencies": ["https://reui.io/r/tabs.json"],
  "files": [
    {
      "path": "registry/default/components/tabs/disabled.tsx",
      "content": "import { Tabs, TabsList, TabsTrigger } from '@/registry/default/ui/tabs';\nimport { Bell, ShieldCheck, UserRound } from 'lucide-react';\n\nexport default function TabsDemo() {\n  return (\n    <div className=\"flex flex-col items-center gap-8\">\n      <Tabs defaultValue=\"profile\" className=\"text-sm text-muted-foreground\">\n        <TabsList>\n          <TabsTrigger value=\"profile\">\n            <UserRound /> Profile\n          </TabsTrigger>\n          <TabsTrigger value=\"security\" disabled>\n            <ShieldCheck /> Security\n          </TabsTrigger>\n          <TabsTrigger value=\"notifications\">\n            <Bell /> Notifications\n          </TabsTrigger>\n        </TabsList>\n      </Tabs>\n\n      <Tabs defaultValue=\"profile\" className=\"text-sm text-muted-foreground\">\n        <TabsList variant=\"button\">\n          <TabsTrigger value=\"profile\">\n            <UserRound /> Profile\n          </TabsTrigger>\n          <TabsTrigger value=\"security\" disabled>\n            <ShieldCheck /> Security\n          </TabsTrigger>\n          <TabsTrigger value=\"notifications\">\n            <Bell /> Notifications\n          </TabsTrigger>\n        </TabsList>\n      </Tabs>\n\n      <Tabs defaultValue=\"profile\" className=\"text-sm text-muted-foreground\">\n        <TabsList variant=\"line\">\n          <TabsTrigger value=\"profile\">\n            <UserRound /> Profile\n          </TabsTrigger>\n          <TabsTrigger value=\"security\" disabled>\n            <ShieldCheck /> Security\n          </TabsTrigger>\n          <TabsTrigger value=\"notifications\">\n            <Bell /> Notifications\n          </TabsTrigger>\n        </TabsList>\n      </Tabs>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/tabs.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { Tabs as TabsPrimitive } from 'radix-ui';\n\n// Variants for TabsList\nconst tabsListVariants = cva('flex items-center shrink-0', {\n  variants: {\n    variant: {\n      default: 'bg-accent p-1',\n      button: '',\n      line: 'border-b border-border',\n    },\n    shape: {\n      default: '',\n      pill: '',\n    },\n    size: {\n      lg: 'gap-2.5',\n      md: 'gap-2',\n      sm: 'gap-1.5',\n      xs: 'gap-1',\n    },\n  },\n  compoundVariants: [\n    { variant: 'default', size: 'lg', className: 'p-1.5 gap-2.5' },\n    { variant: 'default', size: 'md', className: 'p-1 gap-2' },\n    { variant: 'default', size: 'sm', className: 'p-1 gap-1.5' },\n    { variant: 'default', size: 'xs', className: 'p-1 gap-1' },\n\n    {\n      variant: 'default',\n      shape: 'default',\n      size: 'lg',\n      className: 'rounded-lg',\n    },\n    {\n      variant: 'default',\n      shape: 'default',\n      size: 'md',\n      className: 'rounded-lg',\n    },\n    {\n      variant: 'default',\n      shape: 'default',\n      size: 'sm',\n      className: 'rounded-md',\n    },\n    {\n      variant: 'default',\n      shape: 'default',\n      size: 'xs',\n      className: 'rounded-md',\n    },\n\n    { variant: 'line', size: 'lg', className: 'gap-9' },\n    { variant: 'line', size: 'md', className: 'gap-8' },\n    { variant: 'line', size: 'sm', className: 'gap-4' },\n    { variant: 'line', size: 'xs', className: 'gap-4' },\n\n    {\n      variant: 'default',\n      shape: 'pill',\n      className: 'rounded-full [&_[role=tab]]:rounded-full',\n    },\n    {\n      variant: 'button',\n      shape: 'pill',\n      className: 'rounded-full [&_[role=tab]]:rounded-full',\n    },\n  ],\n  defaultVariants: {\n    variant: 'default',\n    size: 'md',\n  },\n});\n\n// Variants for TabsTrigger\nconst tabsTriggerVariants = cva(\n  'shrink-0 cursor-pointer whitespace-nowrap inline-flex justify-center items-center font-medium ring-offset-background transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-disabled:pointer-events-none data-disabled:opacity-50 [&_svg]:shrink-0 [&_svg]:text-muted-foreground [&:hover_svg]:text-primary [&[data-state=active]_svg]:text-primary',\n  {\n    variants: {\n      variant: {\n        default:\n          'text-muted-foreground data-[state=active]:bg-background hover:text-foreground data-[state=active]:text-foreground data-[state=active]:shadow-xs data-[state=active]:shadow-black/5',\n        button:\n          'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 rounded-lg text-accent-foreground hover:text-foreground data-[state=active]:bg-accent data-[state=active]:text-foreground',\n        line: 'border-b-2 text-muted-foreground border-transparent data-[state=active]:border-primary hover:text-primary data-[state=active]:text-primary data-[state=active]:border-primary data-[state=active]:text-primary',\n      },\n      size: {\n        lg: 'gap-2.5 [&_svg]:size-5 text-sm',\n        md: 'gap-2 [&_svg]:size-4 text-sm',\n        sm: 'gap-1.5 [&_svg]:size-3.5 text-xs',\n        xs: 'gap-1 [&_svg]:size-3.5 text-xs',\n      },\n    },\n    compoundVariants: [\n      { variant: 'default', size: 'lg', className: 'py-2.5 px-4 rounded-md' },\n      { variant: 'default', size: 'md', className: 'py-1.5 px-3 rounded-md' },\n      { variant: 'default', size: 'sm', className: 'py-1.5 px-2.5 rounded-sm' },\n      { variant: 'default', size: 'xs', className: 'py-1 px-2 rounded-sm' },\n\n      { variant: 'button', size: 'lg', className: 'py-3 px-4 rounded-lg' },\n      { variant: 'button', size: 'md', className: 'py-2.5 px-3 rounded-lg' },\n      { variant: 'button', size: 'sm', className: 'py-2 px-2.5 rounded-md' },\n      { variant: 'button', size: 'xs', className: 'py-1.5 px-2 rounded-md' },\n\n      { variant: 'line', size: 'lg', className: 'py-3' },\n      { variant: 'line', size: 'md', className: 'py-2.5' },\n      { variant: 'line', size: 'sm', className: 'py-2' },\n      { variant: 'line', size: 'xs', className: 'py-1.5' },\n    ],\n    defaultVariants: {\n      variant: 'default',\n      size: 'md',\n    },\n  },\n);\n\n// Variants for TabsContent\nconst tabsContentVariants = cva(\n  'mt-2.5 focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default: '',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\n// Context\ntype TabsContextType = {\n  variant?: 'default' | 'button' | 'line';\n  size?: 'lg' | 'sm' | 'xs' | 'md';\n};\nconst TabsContext = React.createContext<TabsContextType>({\n  variant: 'default',\n  size: 'md',\n});\n\n// Components\nfunction Tabs({ className, ...props }: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return <TabsPrimitive.Root data-slot=\"tabs\" className={cn('', className)} {...props} />;\n}\n\nfunction TabsList({\n  className,\n  variant = 'default',\n  shape = 'default',\n  size = 'md',\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List> & VariantProps<typeof tabsListVariants>) {\n  return (\n    <TabsContext.Provider value={{ variant: variant || 'default', size: size || 'md' }}>\n      <TabsPrimitive.List\n        data-slot=\"tabs-list\"\n        className={cn(tabsListVariants({ variant, shape, size }), className)}\n        {...props}\n      />\n    </TabsContext.Provider>\n  );\n}\n\nfunction TabsTrigger({ className, ...props }: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  const { variant, size } = React.useContext(TabsContext);\n\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(tabsTriggerVariants({ variant, size }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction TabsContent({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content> & VariantProps<typeof tabsContentVariants>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(tabsContentVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}
