{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "stepper-progress",
  "type": "registry:component",
  "dependencies": ["class-variance-authority", "lucide-react", "radix-ui", "clsx", "tailwind-merge"],
  "registryDependencies": ["https://reui.io/r/button.json", "https://reui.io/r/stepper.json"],
  "files": [
    {
      "path": "registry/default/components/stepper/progress.tsx",
      "content": "import React, { useState } from 'react';\nimport { Button } from '@/registry/default/ui/button';\nimport {\n  Stepper,\n  StepperContent,\n  StepperIndicator,\n  StepperItem,\n  StepperNav,\n  StepperPanel,\n  StepperTrigger,\n} from '@/registry/default/ui/stepper';\nimport { ArrowLeft } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport default function StepperProgress() {\n  const steps = [1, 2, 3, 4];\n  const [currentStep, setCurrentStep] = useState(1);\n\n  return (\n    <div className=\"w-full flex flex-col\">\n      <Stepper value={currentStep} onValueChange={setCurrentStep}>\n        <StepperNav>\n          {steps.map((step) => (\n            <StepperItem\n              key={step}\n              step={step}\n              className=\"flex-1 first:rounded-s-full last:rounded-e-full overflow-hidden transition-all duration-300\"\n            >\n              <StepperTrigger className=\"w-full flex-col items-start gap-2\" asChild>\n                <StepperIndicator className=\"bg-border h-2 w-full rounded-none\">\n                  <span className=\"sr-only\">{step}</span>\n                </StepperIndicator>\n              </StepperTrigger>\n            </StepperItem>\n          ))}\n        </StepperNav>\n\n        <div className=\"flex items-center justify-between gap-2.5 py-2\">\n          <Button\n            mode=\"link\"\n            onClick={() => setCurrentStep((prev) => prev - 1)}\n            className={cn(currentStep === 1 && 'pointer-events-none opacity-0')}\n          >\n            <ArrowLeft /> Back\n          </Button>\n\n          <div className=\"text-sm font-medium\">\n            <span className=\"text-foreground\">{currentStep}</span>{' '}\n            <span className=\"text-muted-foreground/60\">/ {steps.length}</span>\n          </div>\n        </div>\n\n        <StepperPanel className=\"text-sm py-12\">\n          {steps.map((step) => (\n            <StepperContent className=\"w-full flex items-center justify-center\" key={step} value={step}>\n              Step {step} content\n            </StepperContent>\n          ))}\n        </StepperPanel>\n\n        <div className=\"flex items-center justify-end gap-2.5\">\n          <Button\n            variant=\"outline\"\n            onClick={() => setCurrentStep((prev) => prev + 1)}\n            disabled={currentStep === steps.length}\n          >\n            Next\n          </Button>\n        </div>\n      </Stepper>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/button.tsx",
      "content": "import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { ChevronDown, LucideIcon } from 'lucide-react';\nimport { Slot as SlotPrimitive } from 'radix-ui';\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'cursor-pointer group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center has-data-[arrow=true]:justify-between whitespace-nowrap text-sm font-medium ring-offset-background transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-60 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground hover:bg-primary/90 data-[state=open]:bg-primary/90',\n        mono: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black hover:bg-zinc-950/90 dark:hover:bg-zinc-300/90 data-[state=open]:bg-zinc-950/90 dark:data-[state=open]:bg-zinc-300/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90 data-[state=open]:bg-destructive/90',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90 data-[state=open]:bg-secondary/90',\n        outline: 'bg-background text-accent-foreground border border-input hover:bg-accent data-[state=open]:bg-accent',\n        dashed:\n          'text-accent-foreground border border-input border-dashed bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:text-accent-foreground',\n        ghost:\n          'text-accent-foreground hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\n        dim: 'text-muted-foreground hover:text-foreground data-[state=open]:text-foreground',\n        foreground: '',\n        inverse: '',\n      },\n      appearance: {\n        default: '',\n        ghost: '',\n      },\n      underline: {\n        solid: '',\n        dashed: '',\n      },\n      underlined: {\n        solid: '',\n        dashed: '',\n      },\n      size: {\n        lg: 'h-10 rounded-md px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-8.5 rounded-md px-3 gap-1.5 text-[0.8125rem] leading-(--text-sm--line-height) [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-7 rounded-md px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n        icon: 'size-8.5 rounded-md [&_svg:not([class*=size-])]:size-4 shrink-0',\n      },\n      autoHeight: {\n        true: '',\n        false: '',\n      },\n      shape: {\n        default: '',\n        circle: 'rounded-full',\n      },\n      mode: {\n        default: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        icon: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 shrink-0',\n        link: 'text-primary h-auto p-0 bg-transparent rounded-none hover:bg-transparent data-[state=open]:bg-transparent',\n        input: `\n            justify-start font-normal hover:bg-background [&_svg]:transition-colors [&_svg]:hover:text-foreground data-[state=open]:bg-background \n            focus-visible:border-ring focus-visible:outline-hidden focus-visible:ring-[3px] focus-visible:ring-ring/30 \n            [[data-state=open]>&]:border-ring [[data-state=open]>&]:outline-hidden [[data-state=open]>&]:ring-[3px] \n            [[data-state=open]>&]:ring-ring/30 \n            aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n            in-data-[invalid=true]:border-destructive/60 in-data-[invalid=true]:ring-destructive/10  dark:in-data-[invalid=true]:border-destructive dark:in-data-[invalid=true]:ring-destructive/20\n          `,\n      },\n      placeholder: {\n        true: 'text-muted-foreground',\n        false: '',\n      },\n    },\n    compoundVariants: [\n      // Icons opacity for default mode\n      {\n        variant: 'ghost',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Icons opacity for default mode\n      {\n        variant: 'outline',\n        mode: 'input',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Auto height\n      {\n        size: 'md',\n        autoHeight: true,\n        className: 'h-auto min-h-8.5',\n      },\n      {\n        size: 'sm',\n        autoHeight: true,\n        className: 'h-auto min-h-7',\n      },\n      {\n        size: 'lg',\n        autoHeight: true,\n        className: 'h-auto min-h-10',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Link\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      // Ghost\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className: 'bg-transparent text-primary/90 hover:bg-primary/5 data-[state=open]:bg-primary/5',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className: 'bg-transparent text-destructive/90 hover:bg-destructive/5 data-[state=open]:bg-destructive/5',\n      },\n      {\n        variant: 'ghost',\n        mode: 'icon',\n        className: 'text-muted-foreground',\n      },\n\n      // Size\n      {\n        size: 'sm',\n        mode: 'icon',\n        className: 'w-7 h-7 p-0 [[&_svg:not([class*=size-])]:size-3.5',\n      },\n      {\n        size: 'md',\n        mode: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'lg',\n        mode: 'icon',\n        className: 'w-10 h-10 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n\n      // Input mode\n      {\n        mode: 'input',\n        placeholder: true,\n        variant: 'outline',\n        className: 'font-normal text-muted-foreground',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'sm',\n        className: 'gap-1.25',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'md',\n        className: 'gap-1.5',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'lg',\n        className: 'gap-1.5',\n      },\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      mode: 'default',\n      size: 'md',\n      shape: 'default',\n      appearance: 'default',\n    },\n  },\n);\n\nfunction Button({\n  className,\n  selected,\n  variant,\n  shape,\n  appearance,\n  mode,\n  size,\n  autoHeight,\n  underlined,\n  underline,\n  asChild = false,\n  placeholder = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonVariants> & {\n    selected?: boolean;\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? SlotPrimitive.Slot : 'button';\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(\n        buttonVariants({\n          variant,\n          size,\n          shape,\n          appearance,\n          mode,\n          autoHeight,\n          placeholder,\n          underlined,\n          underline,\n          className,\n        }),\n        asChild && props.disabled && 'pointer-events-none opacity-50',\n      )}\n      {...(selected && { 'data-state': 'open' })}\n      {...props}\n    />\n  );\n}\n\ninterface ButtonArrowProps extends React.SVGProps<SVGSVGElement> {\n  icon?: LucideIcon; // Allows passing any Lucide icon\n}\n\nfunction ButtonArrow({ icon: Icon = ChevronDown, className, ...props }: ButtonArrowProps) {\n  return <Icon data-slot=\"button-arrow\" className={cn('ms-auto -me-1', className)} {...props} />;\n}\n\nexport { Button, ButtonArrow, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/stepper.tsx",
      "content": "/* eslint-disable react-hooks/exhaustive-deps */\n\n'use client';\n\nimport * as React from 'react';\nimport { createContext, useContext } from 'react';\nimport { cn } from '@/registry/default/lib/utils';\n\n// Types\ntype StepperOrientation = 'horizontal' | 'vertical';\ntype StepState = 'active' | 'completed' | 'inactive' | 'loading';\ntype StepIndicators = {\n  active?: React.ReactNode;\n  completed?: React.ReactNode;\n  inactive?: React.ReactNode;\n  loading?: React.ReactNode;\n};\n\ninterface StepperContextValue {\n  activeStep: number;\n  setActiveStep: (step: number) => void;\n  stepsCount: number;\n  orientation: StepperOrientation;\n  registerTrigger: (node: HTMLButtonElement | null) => void;\n  triggerNodes: HTMLButtonElement[];\n  focusNext: (currentIdx: number) => void;\n  focusPrev: (currentIdx: number) => void;\n  focusFirst: () => void;\n  focusLast: () => void;\n  indicators: StepIndicators;\n}\n\ninterface StepItemContextValue {\n  step: number;\n  state: StepState;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StepperContext = createContext<StepperContextValue | undefined>(undefined);\nconst StepItemContext = createContext<StepItemContextValue | undefined>(undefined);\n\nfunction useStepper() {\n  const ctx = useContext(StepperContext);\n  if (!ctx) throw new Error('useStepper must be used within a Stepper');\n  return ctx;\n}\n\nfunction useStepItem() {\n  const ctx = useContext(StepItemContext);\n  if (!ctx) throw new Error('useStepItem must be used within a StepperItem');\n  return ctx;\n}\n\ninterface StepperProps extends React.HTMLAttributes<HTMLDivElement> {\n  defaultValue?: number;\n  value?: number;\n  onValueChange?: (value: number) => void;\n  orientation?: StepperOrientation;\n  indicators?: StepIndicators;\n}\n\nfunction Stepper({\n  defaultValue = 1,\n  value,\n  onValueChange,\n  orientation = 'horizontal',\n  className,\n  children,\n  indicators = {},\n  ...props\n}: StepperProps) {\n  const [activeStep, setActiveStep] = React.useState(defaultValue);\n  const [triggerNodes, setTriggerNodes] = React.useState<HTMLButtonElement[]>([]);\n\n  // Register/unregister triggers\n  const registerTrigger = React.useCallback((node: HTMLButtonElement | null) => {\n    setTriggerNodes((prev) => {\n      if (node && !prev.includes(node)) {\n        return [...prev, node];\n      } else if (!node && prev.includes(node!)) {\n        return prev.filter((n) => n !== node);\n      } else {\n        return prev;\n      }\n    });\n  }, []);\n\n  const handleSetActiveStep = React.useCallback(\n    (step: number) => {\n      if (value === undefined) {\n        setActiveStep(step);\n      }\n      onValueChange?.(step);\n    },\n    [value, onValueChange],\n  );\n\n  const currentStep = value ?? activeStep;\n\n  // Keyboard navigation logic\n  const focusTrigger = (idx: number) => {\n    if (triggerNodes[idx]) triggerNodes[idx].focus();\n  };\n  const focusNext = (currentIdx: number) => focusTrigger((currentIdx + 1) % triggerNodes.length);\n  const focusPrev = (currentIdx: number) => focusTrigger((currentIdx - 1 + triggerNodes.length) % triggerNodes.length);\n  const focusFirst = () => focusTrigger(0);\n  const focusLast = () => focusTrigger(triggerNodes.length - 1);\n\n  // Context value\n  const contextValue = React.useMemo<StepperContextValue>(\n    () => ({\n      activeStep: currentStep,\n      setActiveStep: handleSetActiveStep,\n      stepsCount: React.Children.toArray(children).filter(\n        (child): child is React.ReactElement =>\n          React.isValidElement(child) && (child.type as { displayName?: string }).displayName === 'StepperItem',\n      ).length,\n      orientation,\n      registerTrigger,\n      focusNext,\n      focusPrev,\n      focusFirst,\n      focusLast,\n      triggerNodes,\n      indicators,\n    }),\n    [currentStep, handleSetActiveStep, children, orientation, registerTrigger, triggerNodes],\n  );\n\n  return (\n    <StepperContext.Provider value={contextValue}>\n      <div\n        role=\"tablist\"\n        aria-orientation={orientation}\n        data-slot=\"stepper\"\n        className={cn('w-full', className)}\n        data-orientation={orientation}\n        {...props}\n      >\n        {children}\n      </div>\n    </StepperContext.Provider>\n  );\n}\n\ninterface StepperItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  step: number;\n  completed?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n}\n\nfunction StepperItem({\n  step,\n  completed = false,\n  disabled = false,\n  loading = false,\n  className,\n  children,\n  ...props\n}: StepperItemProps) {\n  const { activeStep } = useStepper();\n\n  const state: StepState = completed || step < activeStep ? 'completed' : activeStep === step ? 'active' : 'inactive';\n\n  const isLoading = loading && step === activeStep;\n\n  return (\n    <StepItemContext.Provider value={{ step, state, isDisabled: disabled, isLoading }}>\n      <div\n        data-slot=\"stepper-item\"\n        className={cn(\n          'group/step flex items-center justify-center group-data-[orientation=horizontal]/stepper-nav:flex-row group-data-[orientation=vertical]/stepper-nav:flex-col not-last:flex-1',\n          className,\n        )}\n        data-state={state}\n        {...(isLoading ? { 'data-loading': true } : {})}\n        {...props}\n      >\n        {children}\n      </div>\n    </StepItemContext.Provider>\n  );\n}\n\ninterface StepperTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  asChild?: boolean;\n}\n\nfunction StepperTrigger({ asChild = false, className, children, tabIndex, ...props }: StepperTriggerProps) {\n  const { state, isLoading } = useStepItem();\n  const stepperCtx = useStepper();\n  const { setActiveStep, activeStep, registerTrigger, triggerNodes, focusNext, focusPrev, focusFirst, focusLast } =\n    stepperCtx;\n  const { step, isDisabled } = useStepItem();\n  const isSelected = activeStep === step;\n  const id = `stepper-tab-${step}`;\n  const panelId = `stepper-panel-${step}`;\n\n  // Register this trigger for keyboard navigation\n  const btnRef = React.useRef<HTMLButtonElement>(null);\n  React.useEffect(() => {\n    if (btnRef.current) {\n      registerTrigger(btnRef.current);\n    }\n  }, [btnRef.current]);\n\n  // Find our index among triggers for navigation\n  const myIdx = React.useMemo(\n    () => triggerNodes.findIndex((n: HTMLButtonElement) => n === btnRef.current),\n    [triggerNodes, btnRef.current],\n  );\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        e.preventDefault();\n        if (myIdx !== -1 && focusNext) focusNext(myIdx);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        e.preventDefault();\n        if (myIdx !== -1 && focusPrev) focusPrev(myIdx);\n        break;\n      case 'Home':\n        e.preventDefault();\n        if (focusFirst) focusFirst();\n        break;\n      case 'End':\n        e.preventDefault();\n        if (focusLast) focusLast();\n        break;\n      case 'Enter':\n      case ' ':\n        e.preventDefault();\n        setActiveStep(step);\n        break;\n    }\n  };\n\n  if (asChild) {\n    return (\n      <span data-slot=\"stepper-trigger\" data-state={state} className={className}>\n        {children}\n      </span>\n    );\n  }\n\n  return (\n    <button\n      ref={btnRef}\n      role=\"tab\"\n      id={id}\n      aria-selected={isSelected}\n      aria-controls={panelId}\n      tabIndex={typeof tabIndex === 'number' ? tabIndex : isSelected ? 0 : -1}\n      data-slot=\"stepper-trigger\"\n      data-state={state}\n      data-loading={isLoading}\n      className={cn(\n        'cursor-pointer focus-visible:border-ring focus-visible:ring-ring/50 inline-flex items-center gap-3 rounded-full outline-none focus-visible:z-10 focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-60',\n        className,\n      )}\n      onClick={() => setActiveStep(step)}\n      onKeyDown={handleKeyDown}\n      disabled={isDisabled}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n}\n\nfunction StepperIndicator({ children, className }: React.ComponentProps<'div'>) {\n  const { state, isLoading } = useStepItem();\n  const { indicators } = useStepper();\n\n  return (\n    <div\n      data-slot=\"stepper-indicator\"\n      data-state={state}\n      className={cn(\n        'relative flex items-center overflow-hidden justify-center size-6 shrink-0 border-background bg-accent text-accent-foreground rounded-full text-xs data-[state=completed]:bg-primary data-[state=completed]:text-primary-foreground data-[state=active]:bg-primary data-[state=active]:text-primary-foreground',\n        className,\n      )}\n    >\n      <div className=\"absolute\">\n        {indicators &&\n        ((isLoading && indicators.loading) ||\n          (state === 'completed' && indicators.completed) ||\n          (state === 'active' && indicators.active) ||\n          (state === 'inactive' && indicators.inactive))\n          ? (isLoading && indicators.loading) ||\n            (state === 'completed' && indicators.completed) ||\n            (state === 'active' && indicators.active) ||\n            (state === 'inactive' && indicators.inactive)\n          : children}\n      </div>\n    </div>\n  );\n}\n\nfunction StepperSeparator({ className }: React.ComponentProps<'div'>) {\n  const { state } = useStepItem();\n\n  return (\n    <div\n      data-slot=\"stepper-separator\"\n      data-state={state}\n      className={cn(\n        'm-0.5 rounded-full bg-muted group-data-[orientation=vertical]/stepper-nav:h-12 group-data-[orientation=vertical]/stepper-nav:w-0.5 group-data-[orientation=horizontal]/stepper-nav:h-0.5 group-data-[orientation=horizontal]/stepper-nav:flex-1',\n        className,\n      )}\n    />\n  );\n}\n\nfunction StepperTitle({ children, className }: React.ComponentProps<'h3'>) {\n  const { state } = useStepItem();\n\n  return (\n    <h3 data-slot=\"stepper-title\" data-state={state} className={cn('text-sm font-medium leading-none', className)}>\n      {children}\n    </h3>\n  );\n}\n\nfunction StepperDescription({ children, className }: React.ComponentProps<'div'>) {\n  const { state } = useStepItem();\n\n  return (\n    <div data-slot=\"stepper-description\" data-state={state} className={cn('text-sm text-muted-foreground', className)}>\n      {children}\n    </div>\n  );\n}\n\nfunction StepperNav({ children, className }: React.ComponentProps<'nav'>) {\n  const { activeStep, orientation } = useStepper();\n\n  return (\n    <nav\n      data-slot=\"stepper-nav\"\n      data-state={activeStep}\n      data-orientation={orientation}\n      className={cn(\n        'group/stepper-nav inline-flex data-[orientation=horizontal]:w-full data-[orientation=horizontal]:flex-row data-[orientation=vertical]:flex-col',\n        className,\n      )}\n    >\n      {children}\n    </nav>\n  );\n}\n\nfunction StepperPanel({ children, className }: React.ComponentProps<'div'>) {\n  const { activeStep } = useStepper();\n\n  return (\n    <div data-slot=\"stepper-panel\" data-state={activeStep} className={cn('w-full', className)}>\n      {children}\n    </div>\n  );\n}\n\ninterface StepperContentProps extends React.ComponentProps<'div'> {\n  value: number;\n  forceMount?: boolean;\n}\n\nfunction StepperContent({ value, forceMount, children, className }: StepperContentProps) {\n  const { activeStep } = useStepper();\n  const isActive = value === activeStep;\n\n  if (!forceMount && !isActive) {\n    return null;\n  }\n\n  return (\n    <div\n      data-slot=\"stepper-content\"\n      data-state={activeStep}\n      className={cn('w-full', className, !isActive && forceMount && 'hidden')}\n      hidden={!isActive && forceMount}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport {\n  useStepper,\n  useStepItem,\n  Stepper,\n  StepperItem,\n  StepperTrigger,\n  StepperIndicator,\n  StepperSeparator,\n  StepperTitle,\n  StepperDescription,\n  StepperPanel,\n  StepperContent,\n  StepperNav,\n  type StepperProps,\n  type StepperItemProps,\n  type StepperTriggerProps,\n  type StepperContentProps,\n};\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}
