{
  "scrollspy": {
    "code": "import { ReactNode, RefObject, useCallback, useEffect, useRef } from 'react';\n\ntype ScrollspyProps = {\n  children: ReactNode;\n  targetRef?: RefObject<HTMLElement | HTMLDivElement | Document | null | undefined>;\n  onUpdate?: (id: string) => void;\n  offset?: number;\n  smooth?: boolean;\n  className?: string;\n  dataAttribute?: string;\n  history?: boolean;\n  throttleTime?: number;\n};\n\nexport function Scrollspy({\n  children,\n  targetRef,\n  onUpdate,\n  className,\n  offset = 0,\n  smooth = true,\n  dataAttribute = 'scrollspy',\n  history = true,\n}: ScrollspyProps) {\n  const selfRef = useRef<HTMLDivElement | null>(null);\n  const anchorElementsRef = useRef<Element[] | null>(null);\n  const prevIdTracker = useRef<string | null>(null);\n\n  // Sets active nav, hash, prevIdTracker, and calls onUpdate\n  const setActiveSection = useCallback(\n    (sectionId: string | null, force = false) => {\n      if (!sectionId) return;\n      anchorElementsRef.current?.forEach((item) => {\n        const id = item.getAttribute(`data-${dataAttribute}-anchor`);\n        if (id === sectionId) {\n          item.setAttribute('data-active', 'true');\n        } else {\n          item.removeAttribute('data-active');\n        }\n      });\n      if (onUpdate) onUpdate(sectionId);\n      if (history && (force || prevIdTracker.current !== sectionId)) {\n        window.history.replaceState({}, '', `#${sectionId}`);\n      }\n      prevIdTracker.current = sectionId;\n    },\n    [anchorElementsRef, dataAttribute, history, onUpdate],\n  );\n\n  const handleScroll = useCallback(() => {\n    if (!anchorElementsRef.current || anchorElementsRef.current.length === 0) return;\n    const scrollElement = targetRef?.current === document ? window : targetRef?.current;\n    const scrollTop =\n      scrollElement === window\n        ? window.scrollY || document.documentElement.scrollTop\n        : (scrollElement as HTMLElement).scrollTop;\n\n    // Find the anchor whose section is closest to but not past the top\n    let activeIdx = 0;\n    let minDelta = Infinity;\n    anchorElementsRef.current.forEach((anchor, idx) => {\n      const sectionId = anchor.getAttribute(`data-${dataAttribute}-anchor`);\n      const sectionElement = document.getElementById(sectionId!);\n      if (!sectionElement) return;\n      let customOffset = offset;\n      const dataOffset = anchor.getAttribute(`data-${dataAttribute}-offset`);\n      if (dataOffset) customOffset = parseInt(dataOffset, 10);\n      const delta = Math.abs(sectionElement.offsetTop - customOffset - scrollTop);\n      if (sectionElement.offsetTop - customOffset <= scrollTop && delta < minDelta) {\n        minDelta = delta;\n        activeIdx = idx;\n      }\n    });\n\n    // If at bottom, force last anchor\n    if (scrollElement) {\n      const scrollHeight =\n        scrollElement === window ? document.documentElement.scrollHeight : (scrollElement as HTMLElement).scrollHeight;\n      const clientHeight = scrollElement === window ? window.innerHeight : (scrollElement as HTMLElement).clientHeight;\n      if (scrollTop + clientHeight >= scrollHeight - 2) {\n        activeIdx = anchorElementsRef.current.length - 1;\n      }\n    }\n\n    // Set only one anchor active and sync the URL hash\n    const activeAnchor = anchorElementsRef.current[activeIdx];\n    const sectionId = activeAnchor?.getAttribute(`data-${dataAttribute}-anchor`) || null;\n    setActiveSection(sectionId);\n    // Remove data-active from all others\n    anchorElementsRef.current.forEach((item, idx) => {\n      if (idx !== activeIdx) {\n        item.removeAttribute('data-active');\n      }\n    });\n  }, [anchorElementsRef, targetRef, dataAttribute, offset, setActiveSection]);\n\n  const scrollTo = useCallback(\n    (anchorElement: HTMLElement) => (event?: Event) => {\n      if (event) event.preventDefault();\n      const sectionId = anchorElement.getAttribute(`data-${dataAttribute}-anchor`)?.replace('#', '') || null;\n      if (!sectionId) return;\n      const sectionElement = document.getElementById(sectionId);\n      if (!sectionElement) return;\n\n      const scrollToElement = targetRef?.current === document ? window : targetRef?.current;\n\n      let customOffset = offset;\n      const dataOffset = anchorElement.getAttribute(`data-${dataAttribute}-offset`);\n      if (dataOffset) {\n        customOffset = parseInt(dataOffset, 10);\n      }\n\n      const scrollTop = sectionElement.offsetTop - customOffset;\n\n      if (scrollToElement && 'scrollTo' in scrollToElement) {\n        scrollToElement.scrollTo({\n          top: scrollTop,\n          left: 0,\n          behavior: smooth ? 'smooth' : 'auto',\n        });\n      }\n      setActiveSection(sectionId, true);\n    },\n    [dataAttribute, offset, smooth, targetRef, setActiveSection],\n  );\n\n  // Scroll to the section if the ID is present in the URL hash\n  const scrollToHashSection = useCallback(() => {\n    const hash = CSS.escape(window.location.hash.replace('#', ''));\n\n    if (hash) {\n      const targetElement = document.querySelector(`[data-${dataAttribute}-anchor=\"${hash}\"]`) as HTMLElement;\n      if (targetElement) {\n        scrollTo(targetElement)();\n      }\n    }\n  }, [dataAttribute, scrollTo]);\n\n  useEffect(() => {\n    // Query elements and store them in the ref, avoiding unnecessary re-renders\n    if (selfRef.current) {\n      anchorElementsRef.current = Array.from(selfRef.current.querySelectorAll(`[data-${dataAttribute}-anchor]`));\n    }\n\n    anchorElementsRef.current?.forEach((item) => {\n      item.addEventListener('click', scrollTo(item as HTMLElement));\n    });\n\n    const scrollElement = targetRef?.current === document ? window : targetRef?.current;\n\n    // Attach the scroll event to the correct scrollable element\n    scrollElement?.addEventListener('scroll', handleScroll);\n\n    // Check if there's a hash in the URL and scroll to the corresponding section\n    setTimeout(() => {\n      scrollToHashSection();\n      // Wait for scroll to settle, then update nav highlighting\n      setTimeout(() => {\n        handleScroll();\n      }, 100);\n    }, 100); // Adding a slight delay to ensure content is fully rendered\n\n    return () => {\n      scrollElement?.removeEventListener('scroll', handleScroll);\n      anchorElementsRef.current?.forEach((item) => {\n        item.removeEventListener('click', scrollTo(item as HTMLElement));\n      });\n    };\n  }, [targetRef, selfRef, handleScroll, dataAttribute, scrollTo, scrollToHashSection]);\n\n  return (\n    <div data-slot=\"scrollspy\" className={className} ref={selfRef}>\n      {children}\n    </div>\n  );\n}\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { ReactNode, RefObject, useCallback, useEffect, useRef } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> ScrollspyProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  targetRef</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> RefObject</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLElement</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#FFA657\"> HTMLDivElement</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#FFA657\"> Document</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onUpdate</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">id</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  offset</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  smooth</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dataAttribute</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  history</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  throttleTime</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> function</span><span style=\"color:#D2A8FF\"> Scrollspy</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  targetRef</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onUpdate</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  offset</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  smooth</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dataAttribute</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'scrollspy'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  history</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ScrollspyProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> selfRef</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLDivElement</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> anchorElementsRef</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">Element</span><span style=\"color:#E6EDF3\">[] </span><span style=\"color:#FF7B72\">|</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> prevIdTracker</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Sets active nav, hash, prevIdTracker, and calls onUpdate</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> setActiveSection</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">sectionId</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">force</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">sectionId) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      anchorElementsRef.current?.</span><span style=\"color:#D2A8FF\">forEach</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> id</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> item.</span><span style=\"color:#D2A8FF\">getAttribute</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">`data-${</span><span style=\"color:#E6EDF3\">dataAttribute</span><span style=\"color:#A5D6FF\">}-anchor`</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (id </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> sectionId) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          item.</span><span style=\"color:#D2A8FF\">setAttribute</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'data-active'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'true'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          item.</span><span style=\"color:#D2A8FF\">removeAttribute</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'data-active'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      });</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (onUpdate) </span><span style=\"color:#D2A8FF\">onUpdate</span><span style=\"color:#E6EDF3\">(sectionId);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (history </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (force </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> prevIdTracker.current </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#E6EDF3\"> sectionId)) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        window.history.</span><span style=\"color:#D2A8FF\">replaceState</span><span style=\"color:#E6EDF3\">({}, </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">`#${</span><span style=\"color:#E6EDF3\">sectionId</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      prevIdTracker.current </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> sectionId;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [anchorElementsRef, dataAttribute, history, onUpdate],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> handleScroll</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">anchorElementsRef.current </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> anchorElementsRef.current.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ===</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> scrollElement</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> targetRef?.current </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> document </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> window </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> targetRef?.current;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> scrollTop</span><span style=\"color:#FF7B72\"> =</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      scrollElement </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> window</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        ?</span><span style=\"color:#E6EDF3\"> window.scrollY </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> document.documentElement.scrollTop</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        :</span><span style=\"color:#E6EDF3\"> (scrollElement </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> HTMLElement</span><span style=\"color:#E6EDF3\">).scrollTop;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Find the anchor whose section is closest to but not past the top</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    let</span><span style=\"color:#E6EDF3\"> activeIdx </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    let</span><span style=\"color:#E6EDF3\"> minDelta </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> Infinity</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    anchorElementsRef.current.</span><span style=\"color:#D2A8FF\">forEach</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">anchor</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">idx</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> sectionId</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> anchor.</span><span style=\"color:#D2A8FF\">getAttribute</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">`data-${</span><span style=\"color:#E6EDF3\">dataAttribute</span><span style=\"color:#A5D6FF\">}-anchor`</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> sectionElement</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> document.</span><span style=\"color:#D2A8FF\">getElementById</span><span style=\"color:#E6EDF3\">(sectionId</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">sectionElement) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      let</span><span style=\"color:#E6EDF3\"> customOffset </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> offset;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> dataOffset</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> anchor.</span><span style=\"color:#D2A8FF\">getAttribute</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">`data-${</span><span style=\"color:#E6EDF3\">dataAttribute</span><span style=\"color:#A5D6FF\">}-offset`</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (dataOffset) customOffset </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> parseInt</span><span style=\"color:#E6EDF3\">(dataOffset, </span><span style=\"color:#79C0FF\">10</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> delta</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> Math.</span><span style=\"color:#D2A8FF\">abs</span><span style=\"color:#E6EDF3\">(sectionElement.offsetTop </span><span style=\"color:#FF7B72\">-</span><span style=\"color:#E6EDF3\"> customOffset </span><span style=\"color:#FF7B72\">-</span><span style=\"color:#E6EDF3\"> scrollTop);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (sectionElement.offsetTop </span><span style=\"color:#FF7B72\">-</span><span style=\"color:#E6EDF3\"> customOffset </span><span style=\"color:#FF7B72\">&#x3C;=</span><span style=\"color:#E6EDF3\"> scrollTop </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> delta </span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#E6EDF3\"> minDelta) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        minDelta </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> delta;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        activeIdx </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> idx;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // If at bottom, force last anchor</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (scrollElement) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> scrollHeight</span><span style=\"color:#FF7B72\"> =</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        scrollElement </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> window </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> document.documentElement.scrollHeight </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (scrollElement </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> HTMLElement</span><span style=\"color:#E6EDF3\">).scrollHeight;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> clientHeight</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> scrollElement </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> window </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> window.innerHeight </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (scrollElement </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> HTMLElement</span><span style=\"color:#E6EDF3\">).clientHeight;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (scrollTop </span><span style=\"color:#FF7B72\">+</span><span style=\"color:#E6EDF3\"> clientHeight </span><span style=\"color:#FF7B72\">>=</span><span style=\"color:#E6EDF3\"> scrollHeight </span><span style=\"color:#FF7B72\">-</span><span style=\"color:#79C0FF\"> 2</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        activeIdx </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> anchorElementsRef.current.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Set only one anchor active and sync the URL hash</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> activeAnchor</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> anchorElementsRef.current[activeIdx];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> sectionId</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> activeAnchor?.</span><span style=\"color:#D2A8FF\">getAttribute</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">`data-${</span><span style=\"color:#E6EDF3\">dataAttribute</span><span style=\"color:#A5D6FF\">}-anchor`</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setActiveSection</span><span style=\"color:#E6EDF3\">(sectionId);</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Remove data-active from all others</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    anchorElementsRef.current.</span><span style=\"color:#D2A8FF\">forEach</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">idx</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (idx </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#E6EDF3\"> activeIdx) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        item.</span><span style=\"color:#D2A8FF\">removeAttribute</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'data-active'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [anchorElementsRef, targetRef, dataAttribute, offset, setActiveSection]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> scrollTo</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">anchorElement</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> HTMLElement</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> Event</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (event) event.</span><span style=\"color:#D2A8FF\">preventDefault</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> sectionId</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> anchorElement.</span><span style=\"color:#D2A8FF\">getAttribute</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">`data-${</span><span style=\"color:#E6EDF3\">dataAttribute</span><span style=\"color:#A5D6FF\">}-anchor`</span><span style=\"color:#E6EDF3\">)?.</span><span style=\"color:#D2A8FF\">replace</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'#'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">sectionId) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> sectionElement</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> document.</span><span style=\"color:#D2A8FF\">getElementById</span><span style=\"color:#E6EDF3\">(sectionId);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">sectionElement) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> scrollToElement</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> targetRef?.current </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> document </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> window </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> targetRef?.current;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      let</span><span style=\"color:#E6EDF3\"> customOffset </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> offset;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> dataOffset</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> anchorElement.</span><span style=\"color:#D2A8FF\">getAttribute</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">`data-${</span><span style=\"color:#E6EDF3\">dataAttribute</span><span style=\"color:#A5D6FF\">}-offset`</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (dataOffset) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        customOffset </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> parseInt</span><span style=\"color:#E6EDF3\">(dataOffset, </span><span style=\"color:#79C0FF\">10</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> scrollTop</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> sectionElement.offsetTop </span><span style=\"color:#FF7B72\">-</span><span style=\"color:#E6EDF3\"> customOffset;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (scrollToElement </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'scrollTo'</span><span style=\"color:#FF7B72\"> in</span><span style=\"color:#E6EDF3\"> scrollToElement) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        scrollToElement.</span><span style=\"color:#D2A8FF\">scrollTo</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          top: scrollTop,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          left: </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          behavior: smooth </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'smooth'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'auto'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setActiveSection</span><span style=\"color:#E6EDF3\">(sectionId, </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [dataAttribute, offset, smooth, targetRef, setActiveSection],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Scroll to the section if the ID is present in the URL hash</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> scrollToHashSection</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> hash</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> CSS</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#D2A8FF\">escape</span><span style=\"color:#E6EDF3\">(window.location.hash.</span><span style=\"color:#D2A8FF\">replace</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'#'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (hash) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> targetElement</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> document.</span><span style=\"color:#D2A8FF\">querySelector</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">`[data-${</span><span style=\"color:#E6EDF3\">dataAttribute</span><span style=\"color:#A5D6FF\">}-anchor=\"${</span><span style=\"color:#E6EDF3\">hash</span><span style=\"color:#A5D6FF\">}\"]`</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> HTMLElement</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (targetElement) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        scrollTo</span><span style=\"color:#E6EDF3\">(targetElement)();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [dataAttribute, scrollTo]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Query elements and store them in the ref, avoiding unnecessary re-renders</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (selfRef.current) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      anchorElementsRef.current </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> Array.</span><span style=\"color:#D2A8FF\">from</span><span style=\"color:#E6EDF3\">(selfRef.current.</span><span style=\"color:#D2A8FF\">querySelectorAll</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">`[data-${</span><span style=\"color:#E6EDF3\">dataAttribute</span><span style=\"color:#A5D6FF\">}-anchor]`</span><span style=\"color:#E6EDF3\">));</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    anchorElementsRef.current?.</span><span style=\"color:#D2A8FF\">forEach</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      item.</span><span style=\"color:#D2A8FF\">addEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'click'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#D2A8FF\">scrollTo</span><span style=\"color:#E6EDF3\">(item </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> HTMLElement</span><span style=\"color:#E6EDF3\">));</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> scrollElement</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> targetRef?.current </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> document </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> window </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> targetRef?.current;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Attach the scroll event to the correct scrollable element</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    scrollElement?.</span><span style=\"color:#D2A8FF\">addEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'scroll'</span><span style=\"color:#E6EDF3\">, handleScroll);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Check if there's a hash in the URL and scroll to the corresponding section</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setTimeout</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      scrollToHashSection</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Wait for scroll to settle, then update nav highlighting</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setTimeout</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        handleScroll</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }, </span><span style=\"color:#79C0FF\">100</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }, </span><span style=\"color:#79C0FF\">100</span><span style=\"color:#E6EDF3\">); </span><span style=\"color:#8B949E\">// Adding a slight delay to ensure content is fully rendered</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      scrollElement?.</span><span style=\"color:#D2A8FF\">removeEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'scroll'</span><span style=\"color:#E6EDF3\">, handleScroll);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      anchorElementsRef.current?.</span><span style=\"color:#D2A8FF\">forEach</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        item.</span><span style=\"color:#D2A8FF\">removeEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'click'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#D2A8FF\">scrollTo</span><span style=\"color:#E6EDF3\">(item </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> HTMLElement</span><span style=\"color:#E6EDF3\">));</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [targetRef, selfRef, handleScroll, dataAttribute, scrollTo, scrollToHashSection]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"scrollspy\"</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">className</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">selfRef</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/scrollspy.tsx",
    "timestamp": "2025-08-21T11:53:06.551Z"
  }
}