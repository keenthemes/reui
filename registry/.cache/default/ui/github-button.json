{
  "github-button": {
    "code": "'use client';\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { Star } from 'lucide-react';\nimport { motion, useInView, type SpringOptions, type UseInViewOptions } from 'motion/react';\nimport { cn } from '@/lib/utils';\n\nconst githubButtonVariants = cva(\n  'cursor-pointer relative overflow-hidden will-change-transform backface-visibility-hidden transform-gpu transition-transform duration-200 ease-out hover:scale-105 group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center whitespace-nowrap font-medium ring-offset-background disabled:pointer-events-none disabled:opacity-60 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-zinc-950 hover:bg-zinc-900 text-white border-gray-700 dark:bg-zinc-50 dark:border-gray-300 dark:text-zinc-950 dark:hover:bg-zinc-50',\n        outline: 'bg-background text-accent-foreground border border-input hover:bg-accent',\n      },\n      size: {\n        default: 'h-8.5 rounded-md px-3 gap-2 text-[0.8125rem] leading-none [&_svg]:size-4 gap-2',\n        sm: 'h-7 rounded-md px-2.5 gap-1.5 text-xs leading-none [&_svg]:size-3.5 gap-1.5',\n        lg: 'h-10 rounded-md px-4 gap-2.5 text-sm leading-none [&_svg]:size-5 gap-2.5',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\ninterface GithubButtonProps extends React.ComponentProps<'button'>, VariantProps<typeof githubButtonVariants> {\n  /** Whether to round stars */\n  roundStars?: boolean;\n  /** Whether to show Github icon */\n  fixedWidth?: boolean;\n  /** Initial number of stars */\n  initialStars?: number;\n  /** Class for stars */\n  starsClass?: string;\n  /** Target number of stars to animate to */\n  targetStars?: number;\n  /** Animation duration in seconds */\n  animationDuration?: number;\n  /** Animation delay in seconds */\n  animationDelay?: number;\n  /** Whether to start animation automatically */\n  autoAnimate?: boolean;\n  /** Callback when animation completes */\n  onAnimationComplete?: () => void;\n  /** Whether to show Github icon */\n  showGithubIcon?: boolean;\n  /** Whether to show star icon */\n  showStarIcon?: boolean;\n  /** Whether to show separator */\n  separator?: boolean;\n  /** Whether stars should be filled */\n  filled?: boolean;\n  /** Repository URL for actual Github integration */\n  repoUrl?: string;\n  /** Button text label */\n  label?: string;\n  /** Use in-view detection to trigger animation */\n  useInViewTrigger?: boolean;\n  /** In-view options */\n  inViewOptions?: UseInViewOptions;\n  /** Spring transition options */\n  transition?: SpringOptions;\n}\n\nfunction GithubButton({\n  initialStars = 0,\n  targetStars = 0,\n  starsClass = '',\n  fixedWidth = true,\n  animationDuration = 2,\n  animationDelay = 0,\n  autoAnimate = true,\n  className,\n  variant = 'default',\n  size = 'default',\n  showGithubIcon = true,\n  showStarIcon = true,\n  roundStars = false,\n  separator = false,\n  filled = false,\n  repoUrl,\n  onClick,\n  label = '',\n  useInViewTrigger = false,\n  inViewOptions = { once: true },\n  transition,\n  ...props\n}: GithubButtonProps) {\n  const [currentStars, setCurrentStars] = useState(initialStars);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [starProgress, setStarProgress] = useState(filled ? 100 : 0);\n  const [hasAnimated, setHasAnimated] = useState(false);\n\n  // Format number with units\n  const formatNumber = (num: number) => {\n    const units = ['k', 'M', 'B', 'T'];\n\n    if (roundStars && num >= 1000) {\n      let unitIndex = -1;\n      let value = num;\n\n      while (value >= 1000 && unitIndex < units.length - 1) {\n        value /= 1000;\n        unitIndex++;\n      }\n\n      // Format to 1 decimal place if needed, otherwise show whole number\n      const formatted = value % 1 === 0 ? value.toString() : value.toFixed(1);\n      return `${formatted}${units[unitIndex]}`;\n    }\n\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n\n  // Start animation\n  const startAnimation = useCallback(() => {\n    if (isAnimating || hasAnimated) return;\n\n    setIsAnimating(true);\n    const startTime = Date.now();\n    const startValue = 0; // Always start from 0 for number animation\n    const endValue = targetStars;\n    const duration = animationDuration * 1000;\n\n    const animate = () => {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n\n      // Easing function for smooth animation\n      const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n\n      // Update star count from 0 to target with more frequent updates\n      const newStars = Math.round(startValue + (endValue - startValue) * easeOutQuart);\n      setCurrentStars(newStars);\n\n      // Update star fill progress (0 to 100)\n      setStarProgress(progress * 100);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        setCurrentStars(endValue);\n        setStarProgress(100);\n        setIsAnimating(false);\n        setHasAnimated(true);\n      }\n    };\n\n    setTimeout(() => {\n      requestAnimationFrame(animate);\n    }, animationDelay * 1000);\n  }, [isAnimating, hasAnimated, targetStars, animationDuration, animationDelay]);\n\n  // Use in-view detection if enabled\n  const ref = React.useRef(null);\n  const isInView = useInView(ref, inViewOptions);\n\n  // Reset animation state when targetStars changes\n  useEffect(() => {\n    setHasAnimated(false);\n    setCurrentStars(initialStars);\n  }, [targetStars, initialStars]);\n\n  // Auto-start animation or use in-view trigger\n  useEffect(() => {\n    if (useInViewTrigger) {\n      if (isInView && !hasAnimated) {\n        startAnimation();\n      }\n    } else if (autoAnimate && !hasAnimated) {\n      startAnimation();\n    }\n  }, [autoAnimate, useInViewTrigger, isInView, hasAnimated, startAnimation]);\n\n  const navigateToRepo = () => {\n    if (!repoUrl) {\n      return;\n    }\n\n    // Next.js compatible navigation approach\n    try {\n      // Create a temporary anchor element for reliable navigation\n      const link = document.createElement('a');\n      link.href = repoUrl;\n      link.target = '_blank';\n      link.rel = 'noopener noreferrer';\n\n      // Temporarily add to DOM and click\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch {\n      // Fallback to window.open\n      try {\n        window.open(repoUrl, '_blank', 'noopener,noreferrer');\n      } catch {\n        // Final fallback\n        window.location.href = repoUrl;\n      }\n    }\n  };\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (onClick) {\n      onClick(event);\n      return;\n    }\n\n    if (repoUrl) {\n      navigateToRepo();\n    } else if (!hasAnimated) {\n      startAnimation();\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLButtonElement>) => {\n    // Handle Enter and Space key presses for accessibility\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n\n      if (repoUrl) {\n        navigateToRepo();\n      } else if (!hasAnimated) {\n        startAnimation();\n      }\n    }\n  };\n\n  return (\n    <button\n      ref={ref}\n      className={cn(githubButtonVariants({ variant, size, className }), separator && 'ps-0')}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      role=\"button\"\n      tabIndex={0}\n      aria-label={repoUrl ? `Star ${label} on GitHub` : label}\n      {...props}\n    >\n      {showGithubIcon && (\n        <div\n          className={cn(\n            'h-full relative flex items-center justify-center',\n            separator && 'w-9 bg-muted/60 border-e border-input',\n          )}\n        >\n          <svg role=\"img\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n          </svg>\n        </div>\n      )}\n\n      {label && <span>{label}</span>}\n\n      {/* Animated Star Icon */}\n      {showStarIcon && (\n        <div className=\"relative inline-flex shrink-0\">\n          <Star className=\"fill-muted-foreground text-muted-foreground\" aria-hidden=\"true\" />\n          <Star\n            className=\"absolute top-0 start-0 text-yellow-400 fill-yellow-400\"\n            size={18}\n            aria-hidden=\"true\"\n            style={{\n              clipPath: `inset(${100 - starProgress}% 0 0 0)`,\n            }}\n          />\n        </div>\n      )}\n\n      {/* Animated Number Counter with Ticker Effect */}\n      <div className={cn('flex flex-col font-semibold relative overflow-hidden', starsClass)}>\n        <motion.div\n          animate={{ opacity: 1 }}\n          transition={{\n            type: 'spring',\n            stiffness: 300,\n            damping: 30,\n            ...transition,\n          }}\n          className=\"tabular-nums\"\n        >\n          <span>{currentStars > 0 && formatNumber(currentStars)}</span>\n        </motion.div>\n        {fixedWidth && <span className=\"opacity-0 h-0 overflow-hidden tabular-nums\">{formatNumber(targetStars)}</span>}\n      </div>\n    </button>\n  );\n}\n\nexport { GithubButton, githubButtonVariants };\nexport type { GithubButtonProps };\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> React, { useCallback, useEffect, useState } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cva, </span><span style=\"color:#FF7B72\">type</span><span style=\"color:#E6EDF3\"> VariantProps } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'class-variance-authority'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Star } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'lucide-react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { motion, useInView, </span><span style=\"color:#FF7B72\">type</span><span style=\"color:#E6EDF3\"> SpringOptions, </span><span style=\"color:#FF7B72\">type</span><span style=\"color:#E6EDF3\"> UseInViewOptions } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'motion/react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> githubButtonVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">  'cursor-pointer relative overflow-hidden will-change-transform backface-visibility-hidden transform-gpu transition-transform duration-200 ease-out hover:scale-105 group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center whitespace-nowrap font-medium ring-offset-background disabled:pointer-events-none disabled:opacity-60 [&#x26;_svg]:shrink-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        default:</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'bg-zinc-950 hover:bg-zinc-900 text-white border-gray-700 dark:bg-zinc-50 dark:border-gray-300 dark:text-zinc-950 dark:hover:bg-zinc-50'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        outline: </span><span style=\"color:#A5D6FF\">'bg-background text-accent-foreground border border-input hover:bg-accent'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        default: </span><span style=\"color:#A5D6FF\">'h-8.5 rounded-md px-3 gap-2 text-[0.8125rem] leading-none [&#x26;_svg]:size-4 gap-2'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        sm: </span><span style=\"color:#A5D6FF\">'h-7 rounded-md px-2.5 gap-1.5 text-xs leading-none [&#x26;_svg]:size-3.5 gap-1.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        lg: </span><span style=\"color:#A5D6FF\">'h-10 rounded-md px-4 gap-2.5 text-sm leading-none [&#x26;_svg]:size-5 gap-2.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: </span><span style=\"color:#A5D6FF\">'default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: </span><span style=\"color:#A5D6FF\">'default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> GithubButtonProps</span><span style=\"color:#FF7B72\"> extends</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#79C0FF\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'button'</span><span style=\"color:#E6EDF3\">>, </span><span style=\"color:#79C0FF\">VariantProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> githubButtonVariants> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to round stars */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  roundStars</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to show Github icon */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  fixedWidth</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Initial number of stars */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  initialStars</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Class for stars */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  starsClass</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Target number of stars to animate to */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  targetStars</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Animation duration in seconds */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  animationDuration</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Animation delay in seconds */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  animationDelay</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to start animation automatically */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  autoAnimate</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Callback when animation completes */</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onAnimationComplete</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to show Github icon */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  showGithubIcon</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to show star icon */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  showStarIcon</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to show separator */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  separator</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether stars should be filled */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  filled</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Repository URL for actual Github integration */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  repoUrl</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Button text label */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  label</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Use in-view detection to trigger animation */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  useInViewTrigger</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** In-view options */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  inViewOptions</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> UseInViewOptions</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Spring transition options */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  transition</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> SpringOptions</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> GithubButton</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  initialStars</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  targetStars</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  starsClass</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  fixedWidth</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  animationDuration</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 2</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  animationDelay</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  autoAnimate</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  variant</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  size</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  showGithubIcon</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  showStarIcon</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  roundStars</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  separator</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  filled</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  repoUrl</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onClick</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  label</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  useInViewTrigger</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  inViewOptions</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> { once: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\"> },</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  transition</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> GithubButtonProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">currentStars</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setCurrentStars</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(initialStars);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">isAnimating</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setIsAnimating</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">starProgress</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setStarProgress</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(filled </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> 100</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">hasAnimated</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setHasAnimated</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Format number with units</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> formatNumber</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">num</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> units</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#A5D6FF\">'k'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'M'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'B'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'T'</span><span style=\"color:#E6EDF3\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (roundStars </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> num </span><span style=\"color:#FF7B72\">>=</span><span style=\"color:#79C0FF\"> 1000</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      let</span><span style=\"color:#E6EDF3\"> unitIndex </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      let</span><span style=\"color:#E6EDF3\"> value </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> num;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      while</span><span style=\"color:#E6EDF3\"> (value </span><span style=\"color:#FF7B72\">>=</span><span style=\"color:#79C0FF\"> 1000</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> unitIndex </span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#E6EDF3\"> units.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        value </span><span style=\"color:#FF7B72\">/=</span><span style=\"color:#79C0FF\"> 1000</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        unitIndex</span><span style=\"color:#FF7B72\">++</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Format to 1 decimal place if needed, otherwise show whole number</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> formatted</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> value </span><span style=\"color:#FF7B72\">%</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#FF7B72\"> ===</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> value.</span><span style=\"color:#D2A8FF\">toString</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> value.</span><span style=\"color:#D2A8FF\">toFixed</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">formatted</span><span style=\"color:#A5D6FF\">}${</span><span style=\"color:#E6EDF3\">units</span><span style=\"color:#A5D6FF\">[</span><span style=\"color:#E6EDF3\">unitIndex</span><span style=\"color:#A5D6FF\">]</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> num.</span><span style=\"color:#D2A8FF\">toString</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#D2A8FF\">replace</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">/</span><span style=\"color:#FF7B72\">\\B</span><span style=\"color:#A5D6FF\">(?=(</span><span style=\"color:#79C0FF\">\\d</span><span style=\"color:#FF7B72\">{3}</span><span style=\"color:#A5D6FF\">)</span><span style=\"color:#FF7B72\">+</span><span style=\"color:#A5D6FF\">(?!</span><span style=\"color:#79C0FF\">\\d</span><span style=\"color:#A5D6FF\">))/</span><span style=\"color:#FF7B72\">g</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">','</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Start animation</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> startAnimation</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (isAnimating </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> hasAnimated) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setIsAnimating</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> startTime</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> Date.</span><span style=\"color:#D2A8FF\">now</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> startValue</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#8B949E\">// Always start from 0 for number animation</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> endValue</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> targetStars;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> duration</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> animationDuration </span><span style=\"color:#FF7B72\">*</span><span style=\"color:#79C0FF\"> 1000</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#D2A8FF\"> animate</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> elapsed</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> Date.</span><span style=\"color:#D2A8FF\">now</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">-</span><span style=\"color:#E6EDF3\"> startTime;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> progress</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> Math.</span><span style=\"color:#D2A8FF\">min</span><span style=\"color:#E6EDF3\">(elapsed </span><span style=\"color:#FF7B72\">/</span><span style=\"color:#E6EDF3\"> duration, </span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Easing function for smooth animation</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> easeOutQuart</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#E6EDF3\"> Math.</span><span style=\"color:#D2A8FF\">pow</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">1</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#E6EDF3\"> progress, </span><span style=\"color:#79C0FF\">4</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Update star count from 0 to target with more frequent updates</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> newStars</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> Math.</span><span style=\"color:#D2A8FF\">round</span><span style=\"color:#E6EDF3\">(startValue </span><span style=\"color:#FF7B72\">+</span><span style=\"color:#E6EDF3\"> (endValue </span><span style=\"color:#FF7B72\">-</span><span style=\"color:#E6EDF3\"> startValue) </span><span style=\"color:#FF7B72\">*</span><span style=\"color:#E6EDF3\"> easeOutQuart);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setCurrentStars</span><span style=\"color:#E6EDF3\">(newStars);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Update star fill progress (0 to 100)</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setStarProgress</span><span style=\"color:#E6EDF3\">(progress </span><span style=\"color:#FF7B72\">*</span><span style=\"color:#79C0FF\"> 100</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (progress </span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        requestAnimationFrame</span><span style=\"color:#E6EDF3\">(animate);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setCurrentStars</span><span style=\"color:#E6EDF3\">(endValue);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setStarProgress</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">100</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setIsAnimating</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setHasAnimated</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setTimeout</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      requestAnimationFrame</span><span style=\"color:#E6EDF3\">(animate);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }, animationDelay </span><span style=\"color:#FF7B72\">*</span><span style=\"color:#79C0FF\"> 1000</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [isAnimating, hasAnimated, targetStars, animationDuration, animationDelay]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Use in-view detection if enabled</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> ref</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useRef</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isInView</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useInView</span><span style=\"color:#E6EDF3\">(ref, inViewOptions);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Reset animation state when targetStars changes</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setHasAnimated</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setCurrentStars</span><span style=\"color:#E6EDF3\">(initialStars);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [targetStars, initialStars]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Auto-start animation or use in-view trigger</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (useInViewTrigger) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (isInView </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">hasAnimated) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        startAnimation</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (autoAnimate </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">hasAnimated) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      startAnimation</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [autoAnimate, useInViewTrigger, isInView, hasAnimated, startAnimation]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> navigateToRepo</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">repoUrl) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Next.js compatible navigation approach</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    try</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Create a temporary anchor element for reliable navigation</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> link</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> document.</span><span style=\"color:#D2A8FF\">createElement</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'a'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      link.href </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> repoUrl;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      link.target </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> '_blank'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      link.rel </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> 'noopener noreferrer'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Temporarily add to DOM and click</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      document.body.</span><span style=\"color:#D2A8FF\">appendChild</span><span style=\"color:#E6EDF3\">(link);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      link.</span><span style=\"color:#D2A8FF\">click</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      document.body.</span><span style=\"color:#D2A8FF\">removeChild</span><span style=\"color:#E6EDF3\">(link);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    } </span><span style=\"color:#FF7B72\">catch</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Fallback to window.open</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      try</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        window.</span><span style=\"color:#D2A8FF\">open</span><span style=\"color:#E6EDF3\">(repoUrl, </span><span style=\"color:#A5D6FF\">'_blank'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'noopener,noreferrer'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      } </span><span style=\"color:#FF7B72\">catch</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">        // Final fallback</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        window.location.href </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> repoUrl;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> handleClick</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">MouseEvent</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLButtonElement</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (onClick) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      onClick</span><span style=\"color:#E6EDF3\">(event);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (repoUrl) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      navigateToRepo</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">hasAnimated) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      startAnimation</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> handleKeyDown</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">KeyboardEvent</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLButtonElement</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Handle Enter and Space key presses for accessibility</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (event.key </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'Enter'</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> event.key </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> ' '</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      event.</span><span style=\"color:#D2A8FF\">preventDefault</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (repoUrl) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        navigateToRepo</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">hasAnimated) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        startAnimation</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">button</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">ref</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">githubButtonVariants</span><span style=\"color:#E6EDF3\">({ variant, size, className }), separator </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'ps-0'</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onClick</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleClick</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onKeyDown</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleKeyDown</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"button\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      tabIndex</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      aria-label</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">repoUrl </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> `Star ${</span><span style=\"color:#E6EDF3\">label</span><span style=\"color:#A5D6FF\">} on GitHub`</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#E6EDF3\"> label</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">showGithubIcon </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">            'h-full relative flex items-center justify-center'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            separator </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'w-9 bg-muted/60 border-e border-input'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">svg</span><span style=\"color:#79C0FF\"> role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"img\"</span><span style=\"color:#79C0FF\"> viewBox</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"0 0 24 24\"</span><span style=\"color:#79C0FF\"> fill</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"currentColor\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">path</span><span style=\"color:#79C0FF\"> d</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">svg</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">label </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#8B949E\">/* Animated Star Icon */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">showStarIcon </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"relative inline-flex shrink-0\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">Star</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"fill-muted-foreground text-muted-foreground\"</span><span style=\"color:#79C0FF\"> aria-hidden</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"true\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">Star</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"absolute top-0 start-0 text-yellow-400 fill-yellow-400\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            size</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#79C0FF\">18</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            aria-hidden</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"true\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              clipPath: </span><span style=\"color:#A5D6FF\">`inset(${</span><span style=\"color:#79C0FF\">100</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#E6EDF3\"> starProgress</span><span style=\"color:#A5D6FF\">}% 0 0 0)`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#8B949E\">/* Animated Number Counter with Ticker Effect */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'flex flex-col font-semibold relative overflow-hidden'</span><span style=\"color:#E6EDF3\">, starsClass)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">motion.div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          animate</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ opacity: </span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          transition</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            type: </span><span style=\"color:#A5D6FF\">'spring'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            stiffness: </span><span style=\"color:#79C0FF\">300</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            damping: </span><span style=\"color:#79C0FF\">30</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            ...</span><span style=\"color:#E6EDF3\">transition,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"tabular-nums\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">currentStars </span><span style=\"color:#FF7B72\">></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#D2A8FF\"> formatNumber</span><span style=\"color:#E6EDF3\">(currentStars)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">motion.div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">fixedWidth </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"opacity-0 h-0 overflow-hidden tabular-nums\"</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#D2A8FF\">formatNumber</span><span style=\"color:#E6EDF3\">(targetStars)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">button</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> { GithubButton, githubButtonVariants };</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> type</span><span style=\"color:#E6EDF3\"> { GithubButtonProps };</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/github-button.tsx",
    "timestamp": "2025-08-21T11:53:06.164Z"
  }
}