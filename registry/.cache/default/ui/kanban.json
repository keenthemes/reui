{
  "kanban": {
    "code": "/* eslint-disable @typescript-eslint/no-explicit-any */\n'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/lib/utils';\nimport {\n  defaultDropAnimation,\n  defaultDropAnimationSideEffects,\n  DndContext,\n  DragEndEvent,\n  DragOverEvent,\n  DragOverlay,\n  DragStartEvent,\n  DropAnimation,\n  KeyboardSensor,\n  PointerSensor,\n  UniqueIdentifier,\n  useSensor,\n  useSensors,\n  type DraggableAttributes,\n  type DraggableSyntheticListeners,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  rectSortingStrategy,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  useSortable,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Slot } from '@radix-ui/react-slot';\n\ninterface KanbanContextProps<T> {\n  columns: Record<string, T[]>;\n  setColumns: (columns: Record<string, T[]>) => void;\n  getItemId: (item: T) => string;\n  columnIds: string[];\n  activeId: UniqueIdentifier | null;\n  setActiveId: (id: UniqueIdentifier | null) => void;\n  findContainer: (id: UniqueIdentifier) => string | undefined;\n  isColumn: (id: UniqueIdentifier) => boolean;\n}\n\nconst KanbanContext = React.createContext<KanbanContextProps<any>>({\n  columns: {},\n  setColumns: () => {},\n  getItemId: () => '',\n  columnIds: [],\n  activeId: null,\n  setActiveId: () => {},\n  findContainer: () => undefined,\n  isColumn: () => false,\n});\n\nconst ColumnContext = React.createContext<{\n  attributes: DraggableAttributes;\n  listeners: DraggableSyntheticListeners | undefined;\n  isDragging?: boolean;\n  disabled?: boolean;\n}>({\n  attributes: {} as DraggableAttributes,\n  listeners: undefined,\n  isDragging: false,\n  disabled: false,\n});\n\nconst ItemContext = React.createContext<{\n  listeners: DraggableSyntheticListeners | undefined;\n  isDragging?: boolean;\n  disabled?: boolean;\n}>({\n  listeners: undefined,\n  isDragging: false,\n  disabled: false,\n});\n\nconst dropAnimationConfig: DropAnimation = {\n  ...defaultDropAnimation,\n  sideEffects: defaultDropAnimationSideEffects({\n    styles: {\n      active: {\n        opacity: '0.4',\n      },\n    },\n  }),\n};\n\nexport interface KanbanMoveEvent {\n  event: DragEndEvent;\n  activeContainer: string;\n  activeIndex: number;\n  overContainer: string;\n  overIndex: number;\n}\n\nexport interface KanbanRootProps<T> {\n  value: Record<string, T[]>;\n  onValueChange: (value: Record<string, T[]>) => void;\n  getItemValue: (item: T) => string;\n  children: React.ReactNode;\n  className?: string;\n  onMove?: (event: KanbanMoveEvent) => void;\n}\n\nfunction Kanban<T>({ value, onValueChange, getItemValue, children, className, onMove }: KanbanRootProps<T>) {\n  const columns = value;\n  const setColumns = onValueChange;\n  const [activeId, setActiveId] = React.useState<UniqueIdentifier | null>(null);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        distance: 10,\n      },\n    }),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    }),\n  );\n\n  const columnIds = React.useMemo(() => Object.keys(columns), [columns]);\n\n  const isColumn = React.useCallback((id: UniqueIdentifier) => columnIds.includes(id as string), [columnIds]);\n\n  const findContainer = React.useCallback(\n    (id: UniqueIdentifier) => {\n      if (isColumn(id)) return id as string;\n      return columnIds.find((key) => columns[key].some((item) => getItemValue(item) === id));\n    },\n    [columns, columnIds, getItemValue, isColumn],\n  );\n\n  const handleDragStart = React.useCallback((event: DragStartEvent) => {\n    setActiveId(event.active.id);\n  }, []);\n\n  const handleDragOver = React.useCallback(\n    (event: DragOverEvent) => {\n      if (onMove) {\n        return;\n      }\n\n      const { active, over } = event;\n      if (!over) return;\n\n      if (isColumn(active.id)) return;\n\n      const activeContainer = findContainer(active.id);\n      const overContainer = findContainer(over.id);\n\n      // Only handle moving items between different columns\n      if (!activeContainer || !overContainer || activeContainer === overContainer) {\n        return;\n      }\n\n      const activeItems = columns[activeContainer];\n      const overItems = columns[overContainer];\n\n      const activeIndex = activeItems.findIndex((item: T) => getItemValue(item) === active.id);\n      let overIndex = overItems.findIndex((item: T) => getItemValue(item) === over.id);\n\n      // If dropping on the column itself, not an item\n      if (isColumn(over.id)) {\n        overIndex = overItems.length;\n      }\n\n      const newOverItems = [...overItems];\n      const [movedItem] = activeItems.splice(activeIndex, 1);\n      newOverItems.splice(overIndex, 0, movedItem);\n\n      setColumns({\n        ...columns,\n        [activeContainer]: [...activeItems],\n        [overContainer]: newOverItems,\n      });\n    },\n    [findContainer, getItemValue, isColumn, setColumns, columns, onMove],\n  );\n\n  const handleDragEnd = React.useCallback(\n    (event: DragEndEvent) => {\n      const { active, over } = event;\n      setActiveId(null);\n\n      if (!over) return;\n\n      // Handle item move callback\n      if (onMove && !isColumn(active.id)) {\n        const activeContainer = findContainer(active.id);\n        const overContainer = findContainer(over.id);\n\n        if (activeContainer && overContainer) {\n          const activeIndex = columns[activeContainer].findIndex((item: T) => getItemValue(item) === active.id);\n          const overIndex = isColumn(over.id)\n            ? columns[overContainer].length\n            : columns[overContainer].findIndex((item: T) => getItemValue(item) === over.id);\n\n          onMove({\n            event,\n            activeContainer,\n            activeIndex,\n            overContainer,\n            overIndex,\n          });\n        }\n        return;\n      }\n\n      // Handle column reordering\n      if (isColumn(active.id) && isColumn(over.id)) {\n        const activeIndex = columnIds.indexOf(active.id as string);\n        const overIndex = columnIds.indexOf(over.id as string);\n        if (activeIndex !== overIndex) {\n          const newOrder = arrayMove(Object.keys(columns), activeIndex, overIndex);\n          const newColumns: Record<string, T[]> = {};\n          newOrder.forEach((key) => {\n            newColumns[key] = columns[key];\n          });\n          setColumns(newColumns);\n        }\n        return;\n      }\n\n      const activeContainer = findContainer(active.id);\n      const overContainer = findContainer(over.id);\n\n      // Handle item reordering within the same column\n      if (activeContainer && overContainer && activeContainer === overContainer) {\n        const container = activeContainer;\n        const activeIndex = columns[container].findIndex((item: T) => getItemValue(item) === active.id);\n        const overIndex = columns[container].findIndex((item: T) => getItemValue(item) === over.id);\n\n        if (activeIndex !== overIndex) {\n          setColumns({\n            ...columns,\n            [container]: arrayMove(columns[container], activeIndex, overIndex),\n          });\n        }\n      }\n    },\n    [columnIds, columns, findContainer, getItemValue, isColumn, setColumns, onMove],\n  );\n\n  const contextValue = React.useMemo(\n    () => ({\n      columns,\n      setColumns,\n      getItemId: getItemValue,\n      columnIds,\n      activeId,\n      setActiveId,\n      findContainer,\n      isColumn,\n    }),\n    [columns, setColumns, getItemValue, columnIds, activeId, findContainer, isColumn],\n  );\n\n  return (\n    <KanbanContext.Provider value={contextValue}>\n      <DndContext sensors={sensors} onDragStart={handleDragStart} onDragOver={handleDragOver} onDragEnd={handleDragEnd}>\n        <div data-slot=\"kanban\" data-dragging={activeId !== null} className={cn(className)}>\n          {children}\n        </div>\n      </DndContext>\n    </KanbanContext.Provider>\n  );\n}\n\nexport interface KanbanBoardProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nfunction KanbanBoard({ children, className }: KanbanBoardProps) {\n  const { columnIds } = React.useContext(KanbanContext);\n\n  return (\n    <SortableContext items={columnIds} strategy={rectSortingStrategy}>\n      <div data-slot=\"kanban-board\" className={cn('grid auto-rows-fr sm:grid-cols-3 gap-4', className)}>\n        {children}\n      </div>\n    </SortableContext>\n  );\n}\n\nexport interface KanbanColumnProps {\n  value: string;\n  className?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}\n\nfunction KanbanColumn({ value, className, children, disabled }: KanbanColumnProps) {\n  const {\n    setNodeRef,\n    transform,\n    transition,\n    attributes,\n    listeners,\n    isDragging: isSortableDragging,\n  } = useSortable({\n    id: value,\n    disabled,\n  });\n\n  const { activeId, isColumn } = React.useContext(KanbanContext);\n  const isColumnDragging = activeId ? isColumn(activeId) : false;\n\n  const style = {\n    transition,\n    transform: CSS.Translate.toString(transform),\n  } as React.CSSProperties;\n\n  return (\n    <ColumnContext.Provider value={{ attributes, listeners, isDragging: isColumnDragging, disabled }}>\n      <div\n        data-slot=\"kanban-column\"\n        data-value={value}\n        data-dragging={isSortableDragging}\n        data-disabled={disabled}\n        ref={setNodeRef}\n        style={style}\n        className={cn(\n          'group/kanban-column flex flex-col',\n          isSortableDragging && 'opacity-50',\n          disabled && 'opacity-50',\n          className,\n        )}\n      >\n        {children}\n      </div>\n    </ColumnContext.Provider>\n  );\n}\n\nexport interface KanbanColumnHandleProps {\n  asChild?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  cursor?: boolean;\n}\n\nfunction KanbanColumnHandle({ asChild, className, children, cursor = true }: KanbanColumnHandleProps) {\n  const { attributes, listeners, isDragging, disabled } = React.useContext(ColumnContext);\n\n  const Comp = asChild ? Slot : 'div';\n\n  return (\n    <Comp\n      data-slot=\"kanban-column-handle\"\n      data-dragging={isDragging}\n      data-disabled={disabled}\n      {...attributes}\n      {...listeners}\n      className={cn(\n        'opacity-0 transition-opacity group-hover/kanban-column:opacity-100',\n        cursor && (isDragging ? '!cursor-grabbing' : '!cursor-grab'),\n        className,\n      )}\n    >\n      {children}\n    </Comp>\n  );\n}\n\nexport interface KanbanItemProps {\n  value: string;\n  asChild?: boolean;\n  className?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}\n\nfunction KanbanItem({ value, asChild = false, className, children, disabled }: KanbanItemProps) {\n  const {\n    setNodeRef,\n    transform,\n    transition,\n    attributes,\n    listeners,\n    isDragging: isSortableDragging,\n  } = useSortable({\n    id: value,\n    disabled,\n  });\n\n  const { activeId, isColumn } = React.useContext(KanbanContext);\n  const isItemDragging = activeId ? !isColumn(activeId) : false;\n\n  const style = {\n    transition,\n    transform: CSS.Translate.toString(transform),\n  } as React.CSSProperties;\n\n  const Comp = asChild ? Slot : 'div';\n\n  return (\n    <ItemContext.Provider value={{ listeners, isDragging: isItemDragging, disabled }}>\n      <Comp\n        data-slot=\"kanban-item\"\n        data-value={value}\n        data-dragging={isSortableDragging}\n        data-disabled={disabled}\n        ref={setNodeRef}\n        style={style}\n        {...attributes}\n        className={cn(isSortableDragging && 'opacity-50', disabled && 'opacity-50', className)}\n      >\n        {children}\n      </Comp>\n    </ItemContext.Provider>\n  );\n}\n\nexport interface KanbanItemHandleProps {\n  asChild?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  cursor?: boolean;\n}\n\nfunction KanbanItemHandle({ asChild, className, children, cursor = true }: KanbanItemHandleProps) {\n  const { listeners, isDragging, disabled } = React.useContext(ItemContext);\n\n  const Comp = asChild ? Slot : 'div';\n\n  return (\n    <Comp\n      data-slot=\"kanban-item-handle\"\n      data-dragging={isDragging}\n      data-disabled={disabled}\n      {...listeners}\n      className={cn(cursor && (isDragging ? '!cursor-grabbing' : '!cursor-grab'), className)}\n    >\n      {children}\n    </Comp>\n  );\n}\n\nexport interface KanbanColumnContentProps {\n  value: string;\n  className?: string;\n  children: React.ReactNode;\n}\n\nfunction KanbanColumnContent({ value, className, children }: KanbanColumnContentProps) {\n  const { columns, getItemId } = React.useContext(KanbanContext);\n\n  const itemIds = React.useMemo(() => columns[value].map(getItemId), [columns, getItemId, value]);\n\n  return (\n    <SortableContext items={itemIds} strategy={verticalListSortingStrategy}>\n      <div data-slot=\"kanban-column-content\" className={cn('flex flex-col gap-2', className)}>\n        {children}\n      </div>\n    </SortableContext>\n  );\n}\n\nexport interface KanbanOverlayProps {\n  className?: string;\n  children?: React.ReactNode | ((params: { value: UniqueIdentifier; variant: 'column' | 'item' }) => React.ReactNode);\n}\n\nfunction KanbanOverlay({ children, className }: KanbanOverlayProps) {\n  const { activeId, isColumn } = React.useContext(KanbanContext);\n  const [dimensions, setDimensions] = React.useState<{ width: number; height: number } | null>(null);\n\n  React.useEffect(() => {\n    if (activeId) {\n      const element = document.querySelector(\n        `[data-slot=\"kanban-${isColumn(activeId) ? 'column' : 'item'}\"][data-value=\"${activeId}\"]`,\n      );\n      if (element) {\n        const rect = element.getBoundingClientRect();\n        setDimensions({ width: rect.width, height: rect.height });\n      }\n    } else {\n      setDimensions(null);\n    }\n  }, [activeId, isColumn]);\n\n  const style = {\n    width: dimensions?.width,\n    height: dimensions?.height,\n  } as React.CSSProperties;\n\n  const content = React.useMemo(() => {\n    if (!activeId) return null;\n    if (typeof children === 'function') {\n      return children({\n        value: activeId,\n        variant: isColumn(activeId) ? 'column' : 'item',\n      });\n    }\n    return children;\n  }, [activeId, children, isColumn]);\n\n  return (\n    <DragOverlay dropAnimation={dropAnimationConfig}>\n      <div\n        data-slot=\"kanban-overlay\"\n        data-dragging={true}\n        style={style}\n        className={cn('pointer-events-none', className, activeId ? '!cursor-grabbing' : '')}\n      >\n        {content}\n      </div>\n    </DragOverlay>\n  );\n}\n\nexport {\n  Kanban,\n  KanbanBoard,\n  KanbanColumn,\n  KanbanColumnHandle,\n  KanbanItem,\n  KanbanItemHandle,\n  KanbanColumnContent,\n  KanbanOverlay,\n};\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#8B949E\">/* eslint-disable @typescript-eslint/no-explicit-any */</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultDropAnimation,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultDropAnimationSideEffects,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DndContext,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DragEndEvent,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DragOverEvent,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DragOverlay,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DragStartEvent,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DropAnimation,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  KeyboardSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  PointerSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  UniqueIdentifier,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  useSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  useSensors,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  type</span><span style=\"color:#E6EDF3\"> DraggableAttributes,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  type</span><span style=\"color:#E6EDF3\"> DraggableSyntheticListeners,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">} </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/core'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  arrayMove,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  rectSortingStrategy,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  SortableContext,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  sortableKeyboardCoordinates,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  useSortable,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  verticalListSortingStrategy,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">} </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/sortable'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { CSS } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/utilities'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Slot } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@radix-ui/react-slot'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> KanbanContextProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  columns</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">[]>;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  setColumns</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">columns</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">[]>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  getItemId</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">item</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  columnIds</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  activeId</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> UniqueIdentifier</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  setActiveId</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">id</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> UniqueIdentifier</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  findContainer</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">id</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> UniqueIdentifier</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  isColumn</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">id</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> UniqueIdentifier</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> KanbanContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">createContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">KanbanContextProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">any</span><span style=\"color:#E6EDF3\">>>({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  columns: {},</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  setColumns</span><span style=\"color:#E6EDF3\">: () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {},</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  getItemId</span><span style=\"color:#E6EDF3\">: () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  columnIds: [],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  activeId: </span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  setActiveId</span><span style=\"color:#E6EDF3\">: () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {},</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  findContainer</span><span style=\"color:#E6EDF3\">: () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  isColumn</span><span style=\"color:#E6EDF3\">: () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> ColumnContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">createContext</span><span style=\"color:#E6EDF3\">&#x3C;{</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  attributes</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> DraggableAttributes</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  listeners</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> DraggableSyntheticListeners</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  isDragging</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  disabled</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}>({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  attributes: {} </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> DraggableAttributes</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  listeners: </span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  isDragging: </span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  disabled: </span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> ItemContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">createContext</span><span style=\"color:#E6EDF3\">&#x3C;{</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  listeners</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> DraggableSyntheticListeners</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  isDragging</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  disabled</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}>({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  listeners: </span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  isDragging: </span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  disabled: </span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> dropAnimationConfig</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> DropAnimation</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#E6EDF3\">defaultDropAnimation,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  sideEffects: </span><span style=\"color:#D2A8FF\">defaultDropAnimationSideEffects</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    styles: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      active: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        opacity: </span><span style=\"color:#A5D6FF\">'0.4'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> KanbanMoveEvent</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> DragEndEvent</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  activeContainer</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  activeIndex</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  overContainer</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  overIndex</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> KanbanRootProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">[]>;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onValueChange</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">[]>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  getItemValue</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">item</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onMove</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> KanbanMoveEvent</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> Kanban</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">value</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">onValueChange</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">getItemValue</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">onMove</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> KanbanRootProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> columns</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> value;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> setColumns</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> onValueChange;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">activeId</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setActiveId</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useState</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">UniqueIdentifier</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> sensors</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useSensors</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    useSensor</span><span style=\"color:#E6EDF3\">(PointerSensor, {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      activationConstraint: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        distance: </span><span style=\"color:#79C0FF\">10</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    useSensor</span><span style=\"color:#E6EDF3\">(KeyboardSensor, {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      coordinateGetter: sortableKeyboardCoordinates,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> columnIds</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useMemo</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> Object.</span><span style=\"color:#D2A8FF\">keys</span><span style=\"color:#E6EDF3\">(columns), [columns]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isColumn</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useCallback</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">id</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> UniqueIdentifier</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> columnIds.</span><span style=\"color:#D2A8FF\">includes</span><span style=\"color:#E6EDF3\">(id </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">), [columnIds]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> findContainer</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">id</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> UniqueIdentifier</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#D2A8FF\">isColumn</span><span style=\"color:#E6EDF3\">(id)) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\"> id </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\"> columnIds.</span><span style=\"color:#D2A8FF\">find</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">key</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> columns[key].</span><span style=\"color:#D2A8FF\">some</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> getItemValue</span><span style=\"color:#E6EDF3\">(item) </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> id));</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [columns, columnIds, getItemValue, isColumn],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> handleDragStart</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useCallback</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> DragStartEvent</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setActiveId</span><span style=\"color:#E6EDF3\">(event.active.id);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, []);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> handleDragOver</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> DragOverEvent</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (onMove) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">active</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">over</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> event;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">over) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#D2A8FF\">isColumn</span><span style=\"color:#E6EDF3\">(active.id)) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> activeContainer</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> findContainer</span><span style=\"color:#E6EDF3\">(active.id);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> overContainer</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> findContainer</span><span style=\"color:#E6EDF3\">(over.id);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Only handle moving items between different columns</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">activeContainer </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">overContainer </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> activeContainer </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> overContainer) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> activeItems</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> columns[activeContainer];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> overItems</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> columns[overContainer];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> activeIndex</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> activeItems.</span><span style=\"color:#D2A8FF\">findIndex</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> getItemValue</span><span style=\"color:#E6EDF3\">(item) </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> active.id);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      let</span><span style=\"color:#E6EDF3\"> overIndex </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> overItems.</span><span style=\"color:#D2A8FF\">findIndex</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> getItemValue</span><span style=\"color:#E6EDF3\">(item) </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> over.id);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // If dropping on the column itself, not an item</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#D2A8FF\">isColumn</span><span style=\"color:#E6EDF3\">(over.id)) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        overIndex </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> overItems.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> newOverItems</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">overItems];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">movedItem</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> activeItems.</span><span style=\"color:#D2A8FF\">splice</span><span style=\"color:#E6EDF3\">(activeIndex, </span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      newOverItems.</span><span style=\"color:#D2A8FF\">splice</span><span style=\"color:#E6EDF3\">(overIndex, </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, movedItem);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setColumns</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        ...</span><span style=\"color:#E6EDF3\">columns,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        [activeContainer]: [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">activeItems],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        [overContainer]: newOverItems,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [findContainer, getItemValue, isColumn, setColumns, columns, onMove],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> handleDragEnd</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> DragEndEvent</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">active</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">over</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> event;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setActiveId</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">over) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Handle item move callback</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (onMove </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#D2A8FF\">isColumn</span><span style=\"color:#E6EDF3\">(active.id)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> activeContainer</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> findContainer</span><span style=\"color:#E6EDF3\">(active.id);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> overContainer</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> findContainer</span><span style=\"color:#E6EDF3\">(over.id);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (activeContainer </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> overContainer) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> activeIndex</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> columns[activeContainer].</span><span style=\"color:#D2A8FF\">findIndex</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> getItemValue</span><span style=\"color:#E6EDF3\">(item) </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> active.id);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> overIndex</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> isColumn</span><span style=\"color:#E6EDF3\">(over.id)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            ?</span><span style=\"color:#E6EDF3\"> columns[overContainer].</span><span style=\"color:#79C0FF\">length</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            :</span><span style=\"color:#E6EDF3\"> columns[overContainer].</span><span style=\"color:#D2A8FF\">findIndex</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> getItemValue</span><span style=\"color:#E6EDF3\">(item) </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> over.id);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          onMove</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            event,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            activeContainer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            activeIndex,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            overContainer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            overIndex,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Handle column reordering</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#D2A8FF\">isColumn</span><span style=\"color:#E6EDF3\">(active.id) </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#D2A8FF\"> isColumn</span><span style=\"color:#E6EDF3\">(over.id)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> activeIndex</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> columnIds.</span><span style=\"color:#D2A8FF\">indexOf</span><span style=\"color:#E6EDF3\">(active.id </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> overIndex</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> columnIds.</span><span style=\"color:#D2A8FF\">indexOf</span><span style=\"color:#E6EDF3\">(over.id </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (activeIndex </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#E6EDF3\"> overIndex) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> newOrder</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> arrayMove</span><span style=\"color:#E6EDF3\">(Object.</span><span style=\"color:#D2A8FF\">keys</span><span style=\"color:#E6EDF3\">(columns), activeIndex, overIndex);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> newColumns</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">[]> </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> {};</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          newOrder.</span><span style=\"color:#D2A8FF\">forEach</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">key</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            newColumns[key] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> columns[key];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          });</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          setColumns</span><span style=\"color:#E6EDF3\">(newColumns);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> activeContainer</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> findContainer</span><span style=\"color:#E6EDF3\">(active.id);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> overContainer</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> findContainer</span><span style=\"color:#E6EDF3\">(over.id);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Handle item reordering within the same column</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (activeContainer </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> overContainer </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> activeContainer </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> overContainer) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> container</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> activeContainer;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> activeIndex</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> columns[container].</span><span style=\"color:#D2A8FF\">findIndex</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> getItemValue</span><span style=\"color:#E6EDF3\">(item) </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> active.id);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> overIndex</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> columns[container].</span><span style=\"color:#D2A8FF\">findIndex</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> getItemValue</span><span style=\"color:#E6EDF3\">(item) </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> over.id);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (activeIndex </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#E6EDF3\"> overIndex) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          setColumns</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            ...</span><span style=\"color:#E6EDF3\">columns,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            [container]: </span><span style=\"color:#D2A8FF\">arrayMove</span><span style=\"color:#E6EDF3\">(columns[container], activeIndex, overIndex),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [columnIds, columns, findContainer, getItemValue, isColumn, setColumns, onMove],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> contextValue</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useMemo</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> ({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      columns,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      setColumns,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      getItemId: getItemValue,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      columnIds,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      activeId,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      setActiveId,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      findContainer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      isColumn,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [columns, setColumns, getItemValue, columnIds, activeId, findContainer, isColumn],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">KanbanContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">contextValue</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">DndContext</span><span style=\"color:#79C0FF\"> sensors</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">sensors</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> onDragStart</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleDragStart</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> onDragOver</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleDragOver</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> onDragEnd</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleDragEnd</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"kanban\"</span><span style=\"color:#79C0FF\"> data-dragging</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">activeId </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">DndContext</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">KanbanContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> KanbanBoardProps</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> KanbanBoard</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> KanbanBoardProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">columnIds</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(KanbanContext);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">SortableContext</span><span style=\"color:#79C0FF\"> items</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">columnIds</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> strategy</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">rectSortingStrategy</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"kanban-board\"</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'grid auto-rows-fr sm:grid-cols-3 gap-4'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">SortableContext</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> KanbanColumnProps</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  disabled</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> KanbanColumn</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">value</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">disabled</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> KanbanColumnProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    setNodeRef</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    transform</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    transition</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    attributes</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    listeners</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    isDragging</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#79C0FF\">isSortableDragging</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useSortable</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    id: value,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    disabled,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">activeId</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isColumn</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(KanbanContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isColumnDragging</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> activeId </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#D2A8FF\"> isColumn</span><span style=\"color:#E6EDF3\">(activeId) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> style</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transition,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transform: </span><span style=\"color:#79C0FF\">CSS</span><span style=\"color:#E6EDF3\">.Translate.</span><span style=\"color:#D2A8FF\">toString</span><span style=\"color:#E6EDF3\">(transform),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  } </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">CSSProperties</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">ColumnContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ attributes, listeners, isDragging: isColumnDragging, disabled }</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"kanban-column\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">value</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-dragging</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isSortableDragging</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-disabled</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">disabled</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">setNodeRef</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">style</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'group/kanban-column flex flex-col'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          isSortableDragging </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'opacity-50'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          disabled </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'opacity-50'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">ColumnContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> KanbanColumnHandleProps</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  asChild</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  cursor</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> KanbanColumnHandle</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">asChild</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">cursor</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> KanbanColumnHandleProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">attributes</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">listeners</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isDragging</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">disabled</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(ColumnContext);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> Comp</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> asChild </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> Slot </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'div'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">Comp</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"kanban-column-handle\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-dragging</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isDragging</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-disabled</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">disabled</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">attributes</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">listeners</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'opacity-0 transition-opacity group-hover/kanban-column:opacity-100'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        cursor </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (isDragging </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> '!cursor-grabbing'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> '!cursor-grab'</span><span style=\"color:#E6EDF3\">),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">Comp</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> KanbanItemProps</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  asChild</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  disabled</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> KanbanItem</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">value</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">asChild</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">disabled</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> KanbanItemProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    setNodeRef</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    transform</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    transition</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    attributes</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    listeners</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    isDragging</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#79C0FF\">isSortableDragging</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useSortable</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    id: value,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    disabled,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">activeId</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isColumn</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(KanbanContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isItemDragging</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> activeId </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#D2A8FF\">isColumn</span><span style=\"color:#E6EDF3\">(activeId) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> style</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transition,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transform: </span><span style=\"color:#79C0FF\">CSS</span><span style=\"color:#E6EDF3\">.Translate.</span><span style=\"color:#D2A8FF\">toString</span><span style=\"color:#E6EDF3\">(transform),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  } </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">CSSProperties</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> Comp</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> asChild </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> Slot </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'div'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">ItemContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ listeners, isDragging: isItemDragging, disabled }</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">Comp</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"kanban-item\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">value</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-dragging</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isSortableDragging</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-disabled</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">disabled</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">setNodeRef</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">style</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {...</span><span style=\"color:#E6EDF3\">attributes</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(isSortableDragging </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'opacity-50'</span><span style=\"color:#E6EDF3\">, disabled </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'opacity-50'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">Comp</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">ItemContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> KanbanItemHandleProps</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  asChild</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  cursor</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> KanbanItemHandle</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">asChild</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">cursor</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> KanbanItemHandleProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">listeners</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isDragging</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">disabled</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(ItemContext);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> Comp</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> asChild </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> Slot </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'div'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">Comp</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"kanban-item-handle\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-dragging</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isDragging</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-disabled</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">disabled</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">listeners</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(cursor </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (isDragging </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> '!cursor-grabbing'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> '!cursor-grab'</span><span style=\"color:#E6EDF3\">), className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">Comp</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> KanbanColumnContentProps</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> KanbanColumnContent</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">value</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> KanbanColumnContentProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">columns</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">getItemId</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(KanbanContext);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> itemIds</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useMemo</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> columns[value].</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">(getItemId), [columns, getItemId, value]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">SortableContext</span><span style=\"color:#79C0FF\"> items</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">itemIds</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> strategy</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">verticalListSortingStrategy</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"kanban-column-content\"</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'flex flex-col gap-2'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">SortableContext</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> KanbanOverlayProps</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#E6EDF3\"> ((</span><span style=\"color:#FFA657\">params</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> UniqueIdentifier</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#FFA657\">variant</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'column'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'item'</span><span style=\"color:#E6EDF3\"> }) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> KanbanOverlay</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> KanbanOverlayProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">activeId</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isColumn</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(KanbanContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">dimensions</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setDimensions</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useState</span><span style=\"color:#E6EDF3\">&#x3C;{ </span><span style=\"color:#FFA657\">width</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#FFA657\">height</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">|</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  React.</span><span style=\"color:#D2A8FF\">useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (activeId) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> element</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> document.</span><span style=\"color:#D2A8FF\">querySelector</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        `[data-slot=\"kanban-${</span><span style=\"color:#D2A8FF\">isColumn</span><span style=\"color:#A5D6FF\">(</span><span style=\"color:#E6EDF3\">activeId</span><span style=\"color:#A5D6FF\">) </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'column'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'item'}\"][data-value=\"${</span><span style=\"color:#E6EDF3\">activeId</span><span style=\"color:#A5D6FF\">}\"]`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (element) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> rect</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> element.</span><span style=\"color:#D2A8FF\">getBoundingClientRect</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setDimensions</span><span style=\"color:#E6EDF3\">({ width: rect.width, height: rect.height });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setDimensions</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [activeId, isColumn]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> style</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    width: dimensions?.width,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    height: dimensions?.height,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  } </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">CSSProperties</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> content</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useMemo</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">activeId) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> children </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'function'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#D2A8FF\"> children</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        value: activeId,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        variant: </span><span style=\"color:#D2A8FF\">isColumn</span><span style=\"color:#E6EDF3\">(activeId) </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'column'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'item'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> children;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [activeId, children, isColumn]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">DragOverlay</span><span style=\"color:#79C0FF\"> dropAnimation</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">dropAnimationConfig</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"kanban-overlay\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-dragging</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#79C0FF\">true</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">style</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'pointer-events-none'</span><span style=\"color:#E6EDF3\">, className, activeId </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> '!cursor-grabbing'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">content</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">DragOverlay</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  Kanban,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  KanbanBoard,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  KanbanColumn,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  KanbanColumnHandle,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  KanbanItem,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  KanbanItemHandle,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  KanbanColumnContent,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  KanbanOverlay,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/kanban.tsx",
    "timestamp": "2025-08-21T11:53:06.358Z"
  }
}