{
  "accordion-menu": {
    "code": "'use client';\n\nimport * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { ChevronDown } from 'lucide-react';\nimport { Accordion as AccordionPrimitive } from 'radix-ui';\nimport { cn } from '@/lib/utils';\n\ninterface AccordionMenuContextValue {\n  matchPath: (href: string) => boolean;\n  selectedValue: string | undefined;\n  setSelectedValue: React.Dispatch<React.SetStateAction<string | undefined>>;\n  classNames?: AccordionMenuClassNames;\n  nestedStates: Record<string, string | string[]>;\n  setNestedStates: React.Dispatch<React.SetStateAction<Record<string, string | string[]>>>;\n  onItemClick?: (value: string, event: React.MouseEvent) => void;\n}\n\ninterface AccordionMenuClassNames {\n  root?: string;\n  group?: string;\n  label?: string;\n  separator?: string;\n  item?: string;\n  sub?: string;\n  subTrigger?: string;\n  subContent?: string;\n  subWrapper?: string;\n  indicator?: string;\n}\n\ninterface AccordionMenuProps {\n  selectedValue?: string;\n  matchPath?: (href: string) => boolean;\n  classNames?: AccordionMenuClassNames;\n  onItemClick?: (value: string, event: React.MouseEvent) => void;\n}\n\nconst AccordionMenuContext = React.createContext<AccordionMenuContextValue>({\n  matchPath: () => false,\n  selectedValue: '',\n  setSelectedValue: () => {},\n  nestedStates: {},\n  setNestedStates: () => {},\n});\n\nfunction AccordionMenu({\n  className,\n  matchPath = () => false,\n  classNames,\n  children,\n  selectedValue,\n  onItemClick,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Root> & AccordionMenuProps) {\n  const [internalSelectedValue, setInternalSelectedValue] = React.useState<string | undefined>(selectedValue);\n  React.useEffect(() => {\n    setInternalSelectedValue(selectedValue);\n  }, [selectedValue]);\n\n  const initialNestedStates = React.useMemo(() => {\n    const getActiveChain = (nodes: React.ReactNode, chain: string[] = []): string[] => {\n      let result: string[] = [];\n      React.Children.forEach(nodes, (node) => {\n        if (React.isValidElement(node)) {\n          const { value, children } = node.props as {\n            value?: string;\n            children?: React.ReactNode;\n          };\n          const newChain = value ? [...chain, value] : chain;\n          if (value && (value === selectedValue || matchPath(value))) {\n            result = newChain;\n          } else if (children) {\n            const childChain = getActiveChain(children, newChain);\n            if (childChain.length > 0) {\n              result = childChain;\n            }\n          }\n        }\n      });\n      return result;\n    };\n\n    const chain = getActiveChain(children);\n    const trimmedChain = chain.length > 1 ? chain.slice(0, chain.length - 1) : chain;\n    const mapping: Record<string, string | string[]> = {};\n    if (trimmedChain.length > 0) {\n      if (props.type === 'multiple') {\n        mapping['root'] = trimmedChain;\n      } else {\n        mapping['root'] = trimmedChain[0];\n        for (let i = 0; i < trimmedChain.length - 1; i++) {\n          mapping[trimmedChain[i]] = trimmedChain[i + 1];\n        }\n      }\n    }\n    return mapping;\n  }, [children, matchPath, selectedValue, props.type]);\n\n  const [nestedStates, setNestedStates] = React.useState<Record<string, string | string[]>>(initialNestedStates);\n  const multipleValue = (\n    Array.isArray(nestedStates['root'])\n      ? nestedStates['root']\n      : typeof nestedStates['root'] === 'string'\n        ? [nestedStates['root']]\n        : []\n  ) as string[];\n  const singleValue = (nestedStates['root'] ?? '') as string;\n\n  return (\n    <AccordionMenuContext.Provider\n      value={{\n        matchPath,\n        selectedValue: internalSelectedValue,\n        setSelectedValue: setInternalSelectedValue,\n        classNames,\n        onItemClick,\n        nestedStates,\n        setNestedStates,\n      }}\n    >\n      {props.type === 'single' ? (\n        <AccordionPrimitive.Root\n          data-slot=\"accordion-menu\"\n          value={singleValue}\n          className={cn('w-full', classNames?.root, className)}\n          onValueChange={(value: string) => setNestedStates((prev) => ({ ...prev, root: value }))}\n          {...props}\n          role=\"menu\"\n        >\n          {children}\n        </AccordionPrimitive.Root>\n      ) : (\n        <AccordionPrimitive.Root\n          data-slot=\"accordion-menu\"\n          value={multipleValue}\n          className={cn('w-full', classNames?.root, className)}\n          onValueChange={(value: string | string[]) => setNestedStates((prev) => ({ ...prev, root: value }))}\n          {...props}\n          role=\"menu\"\n        >\n          {children}\n        </AccordionPrimitive.Root>\n      )}\n    </AccordionMenuContext.Provider>\n  );\n}\n\ntype AccordionMenuGroupProps = React.ComponentPropsWithoutRef<'div'>;\n\nfunction AccordionMenuGroup({ children, className, ...props }: AccordionMenuGroupProps) {\n  const { classNames } = React.useContext(AccordionMenuContext);\n  return (\n    <div\n      data-slot=\"accordion-menu-group\"\n      role=\"group\"\n      className={cn('space-y-0.5', classNames?.group, className)}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n\ntype AccordionMenuLabelProps = React.ComponentPropsWithoutRef<'div'>;\n\nfunction AccordionMenuLabel({ children, className, ...props }: AccordionMenuLabelProps) {\n  const { classNames } = React.useContext(AccordionMenuContext);\n\n  return (\n    <div\n      data-slot=\"accordion-menu-label\"\n      role=\"presentation\"\n      className={cn('px-2 py-1.5 text-xs font-medium text-muted-foreground', classNames?.label, className)}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n\ntype AccordionMenuSeparatorProps = React.ComponentPropsWithoutRef<'div'>;\n\nfunction AccordionMenuSeparator({ className, ...props }: AccordionMenuSeparatorProps) {\n  const { classNames } = React.useContext(AccordionMenuContext);\n  return (\n    <div\n      data-slot=\"accordion-menu-separator\"\n      role=\"separator\"\n      className={cn('my-1 h-px bg-border', classNames?.separator, className)}\n      {...props}\n    />\n  );\n}\n\nconst itemVariants = cva(\n  'relative cursor-pointer select-none flex w-full text-start items-center text-foreground rounded-lg gap-2 px-2 py-1.5 text-sm outline-hidden transition-colors hover:bg-accent hover:text-accent-foreground data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground disabled:opacity-50 disabled:bg-transparent focus-visible:bg-accent focus-visible:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&_svg]:shrink-0 [&_a]:flex [&>a]:w-full [&>a]:items-center [&>a]:gap-2',\n  {\n    variants: {\n      variant: {\n        default: '',\n        destructive:\n          'text-destructive hover:text-destructive focus:text-destructive hover:bg-destructive/5 focus:bg-destructive/5 data-[active=true]:bg-destructive/5',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nfunction AccordionMenuItem({\n  className,\n  children,\n  variant,\n  asChild,\n  onClick,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item> &\n  VariantProps<typeof itemVariants> & {\n    onClick?: React.MouseEventHandler<HTMLElement>;\n  }) {\n  const { classNames, selectedValue, matchPath, onItemClick } = React.useContext(AccordionMenuContext);\n  return (\n    <AccordionPrimitive.Item className=\"flex\" {...props}>\n      <AccordionPrimitive.Header className=\"flex w-full\">\n        <AccordionPrimitive.Trigger\n          asChild={asChild}\n          data-slot=\"accordion-menu-item\"\n          className={cn(itemVariants({ variant }), classNames?.item, className)}\n          onClick={(e) => {\n            if (onItemClick) {\n              onItemClick(props.value, e);\n            }\n\n            if (onClick) {\n              onClick(e);\n            }\n            e.preventDefault();\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n              const target = e.currentTarget as HTMLElement;\n              const firstChild = target.firstElementChild as HTMLElement | null;\n              if (firstChild) {\n                firstChild.click();\n              }\n            }\n          }}\n          data-selected={matchPath(props.value as string) || selectedValue === props.value ? 'true' : undefined}\n        >\n          {children}\n        </AccordionPrimitive.Trigger>\n      </AccordionPrimitive.Header>\n    </AccordionPrimitive.Item>\n  );\n}\n\nfunction AccordionMenuSub({\n  className,\n  children,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>) {\n  const { classNames } = React.useContext(AccordionMenuContext);\n  return (\n    <AccordionPrimitive.Item data-slot=\"accordion-menu-sub\" className={cn(classNames?.sub, className)} {...props}>\n      {children}\n    </AccordionPrimitive.Item>\n  );\n}\n\nfunction AccordionMenuSubTrigger({\n  className,\n  children,\n}: React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>) {\n  const { classNames } = React.useContext(AccordionMenuContext);\n  return (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-menu-sub-trigger\"\n        className={cn(\n          'w-full relative flex items-center cursor-pointer select-none text-start rounded-lg gap-2 px-2 py-1.5 text-sm outline-hidden text-foreground transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:bg-accent focus-visible:text-accent-foreground [&_svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&_svg]:shrink-0',\n          classNames?.subTrigger,\n          className,\n        )}\n      >\n        <>\n          {children}\n          <ChevronDown\n            data-slot=\"accordion-menu-sub-indicator\"\n            className={cn(\n              'ms-auto size-3.5! shrink-0 text-muted-foreground transition-transform duration-200 [[data-state=open]>&]:-rotate-180',\n            )}\n          />\n        </>\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  );\n}\n\ntype AccordionMenuSubContentProps = (\n  | (React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content> & {\n      type: 'single';\n      collapsible: boolean;\n      defaultValue?: string;\n    })\n  | (React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content> & {\n      type: 'multiple';\n      collapsible?: boolean;\n      defaultValue?: string | string[];\n    })\n) & {\n  parentValue: string;\n};\n\nfunction AccordionMenuSubContent({\n  className,\n  children,\n  type,\n  collapsible,\n  defaultValue,\n  parentValue,\n  ...props\n}: AccordionMenuSubContentProps) {\n  const { nestedStates, setNestedStates, classNames } = React.useContext(AccordionMenuContext);\n  let currentValue;\n  if (type === 'multiple') {\n    const stateValue = nestedStates[parentValue];\n    if (Array.isArray(stateValue)) {\n      currentValue = stateValue;\n    } else if (typeof stateValue === 'string') {\n      currentValue = [stateValue];\n    } else if (defaultValue) {\n      currentValue = Array.isArray(defaultValue) ? defaultValue : [defaultValue];\n    } else {\n      currentValue = [];\n    }\n  } else {\n    currentValue = nestedStates[parentValue] ?? defaultValue ?? '';\n  }\n\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-menu-sub-content\"\n      className={cn(\n        'ps-5',\n        'overflow-hidden transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down',\n        classNames?.subContent,\n        className,\n      )}\n      {...props}\n    >\n      {type === 'multiple' ? (\n        <AccordionPrimitive.Root\n          className={cn('w-full py-0.5', classNames?.subWrapper)}\n          type=\"multiple\"\n          value={currentValue as string[]}\n          role=\"menu\"\n          data-slot=\"accordion-menu-sub-wrapper\"\n          onValueChange={(value: string | string[]) => {\n            const newValue = Array.isArray(value) ? value : [value];\n            setNestedStates((prev) => ({ ...prev, [parentValue]: newValue }));\n          }}\n        >\n          {children}\n        </AccordionPrimitive.Root>\n      ) : (\n        <AccordionPrimitive.Root\n          className={cn('w-full py-0.5', classNames?.subWrapper)}\n          type=\"single\"\n          collapsible={collapsible}\n          value={currentValue as string}\n          role=\"menu\"\n          data-slot=\"accordion-menu-sub-wrapper\"\n          onValueChange={(value: string | string[]) => setNestedStates((prev) => ({ ...prev, [parentValue]: value }))}\n        >\n          {children}\n        </AccordionPrimitive.Root>\n      )}\n    </AccordionPrimitive.Content>\n  );\n}\n\ntype AccordionMenuIndicatorProps = React.ComponentPropsWithoutRef<'span'>;\n\nfunction AccordionMenuIndicator({ className, ...props }: AccordionMenuIndicatorProps) {\n  const { classNames } = React.useContext(AccordionMenuContext);\n  return (\n    <span\n      aria-hidden=\"true\"\n      data-slot=\"accordion-menu-indicator\"\n      className={cn('ms-auto flex items-center font-medium', classNames?.indicator, className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  AccordionMenu,\n  AccordionMenuGroup,\n  AccordionMenuIndicator,\n  AccordionMenuItem,\n  AccordionMenuLabel,\n  AccordionMenuSeparator,\n  AccordionMenuSub,\n  AccordionMenuSubContent,\n  AccordionMenuSubTrigger,\n  type AccordionMenuClassNames,\n};\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cva, </span><span style=\"color:#FF7B72\">type</span><span style=\"color:#E6EDF3\"> VariantProps } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'class-variance-authority'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { ChevronDown } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'lucide-react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Accordion </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#E6EDF3\"> AccordionPrimitive } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'radix-ui'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> AccordionMenuContextValue</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  matchPath</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">href</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  selectedValue</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  setSelectedValue</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">Dispatch</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">SetStateAction</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">>>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  classNames</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> AccordionMenuClassNames</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  nestedStates</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[]>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  setNestedStates</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">Dispatch</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">SetStateAction</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[]>>>;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onItemClick</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">MouseEvent</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> AccordionMenuClassNames</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  root</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  group</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  label</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  separator</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  item</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  sub</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  subTrigger</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  subContent</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  subWrapper</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  indicator</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> AccordionMenuProps</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  selectedValue</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  matchPath</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">href</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  classNames</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> AccordionMenuClassNames</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onItemClick</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">MouseEvent</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> AccordionMenuContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">createContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">AccordionMenuContextValue</span><span style=\"color:#E6EDF3\">>({</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  matchPath</span><span style=\"color:#E6EDF3\">: () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  selectedValue: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  setSelectedValue</span><span style=\"color:#E6EDF3\">: () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {},</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  nestedStates: {},</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  setNestedStates</span><span style=\"color:#E6EDF3\">: () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {},</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> AccordionMenu</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  matchPath</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  classNames</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  selectedValue</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onItemClick</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> AccordionPrimitive.Root> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#FFA657\"> AccordionMenuProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">internalSelectedValue</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setInternalSelectedValue</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useState</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">>(selectedValue);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  React.</span><span style=\"color:#D2A8FF\">useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setInternalSelectedValue</span><span style=\"color:#E6EDF3\">(selectedValue);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [selectedValue]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> initialNestedStates</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useMemo</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#D2A8FF\"> getActiveChain</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">nodes</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">chain</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [])</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[] </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      let</span><span style=\"color:#E6EDF3\"> result</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      React.Children.</span><span style=\"color:#D2A8FF\">forEach</span><span style=\"color:#E6EDF3\">(nodes, (</span><span style=\"color:#FFA657\">node</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (React.</span><span style=\"color:#D2A8FF\">isValidElement</span><span style=\"color:#E6EDF3\">(node)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">value</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">children</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> node.props </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            value</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            children</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          };</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> newChain</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> value </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">chain, value] </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> chain;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          if</span><span style=\"color:#E6EDF3\"> (value </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (value </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> selectedValue </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#D2A8FF\"> matchPath</span><span style=\"color:#E6EDF3\">(value))) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            result </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> newChain;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (children) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            const</span><span style=\"color:#79C0FF\"> childChain</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> getActiveChain</span><span style=\"color:#E6EDF3\">(children, newChain);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            if</span><span style=\"color:#E6EDF3\"> (childChain.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              result </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> childChain;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      });</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\"> result;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> chain</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> getActiveChain</span><span style=\"color:#E6EDF3\">(children);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> trimmedChain</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> chain.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> chain.</span><span style=\"color:#D2A8FF\">slice</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, chain.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> chain;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> mapping</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[]> </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> {};</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (trimmedChain.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (props.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'multiple'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        mapping[</span><span style=\"color:#A5D6FF\">'root'</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> trimmedChain;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        mapping[</span><span style=\"color:#A5D6FF\">'root'</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> trimmedChain[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        for</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">let</span><span style=\"color:#E6EDF3\"> i </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">; i </span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#E6EDF3\"> trimmedChain.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">; i</span><span style=\"color:#FF7B72\">++</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          mapping[trimmedChain[i]] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> trimmedChain[i </span><span style=\"color:#FF7B72\">+</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> mapping;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [children, matchPath, selectedValue, props.type]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">nestedStates</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setNestedStates</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useState</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[]>>(initialNestedStates);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> multipleValue</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    Array.</span><span style=\"color:#D2A8FF\">isArray</span><span style=\"color:#E6EDF3\">(nestedStates[</span><span style=\"color:#A5D6FF\">'root'</span><span style=\"color:#E6EDF3\">])</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      ?</span><span style=\"color:#E6EDF3\"> nestedStates[</span><span style=\"color:#A5D6FF\">'root'</span><span style=\"color:#E6EDF3\">]</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      :</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> nestedStates[</span><span style=\"color:#A5D6FF\">'root'</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'string'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        ?</span><span style=\"color:#E6EDF3\"> [nestedStates[</span><span style=\"color:#A5D6FF\">'root'</span><span style=\"color:#E6EDF3\">]]</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        :</span><span style=\"color:#E6EDF3\"> []</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  ) </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> singleValue</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (nestedStates[</span><span style=\"color:#A5D6FF\">'root'</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">AccordionMenuContext.Provider</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        matchPath,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        selectedValue: internalSelectedValue,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        setSelectedValue: setInternalSelectedValue,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        classNames,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        onItemClick,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        nestedStates,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        setNestedStates,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">props.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'single'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Root</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">singleValue</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-full'</span><span style=\"color:#E6EDF3\">, classNames?.root, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onValueChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> setNestedStates</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">prev</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> ({ </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">prev, root: value }))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"menu\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Root</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Root</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">multipleValue</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-full'</span><span style=\"color:#E6EDF3\">, classNames?.root, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onValueChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> setNestedStates</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">prev</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> ({ </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">prev, root: value }))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"menu\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Root</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">AccordionMenuContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> AccordionMenuGroupProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> AccordionMenuGroup</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> AccordionMenuGroupProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">classNames</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(AccordionMenuContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-group\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"group\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'space-y-0.5'</span><span style=\"color:#E6EDF3\">, classNames?.group, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> AccordionMenuLabelProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> AccordionMenuLabel</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> AccordionMenuLabelProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">classNames</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(AccordionMenuContext);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-label\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"presentation\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'px-2 py-1.5 text-xs font-medium text-muted-foreground'</span><span style=\"color:#E6EDF3\">, classNames?.label, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> AccordionMenuSeparatorProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> AccordionMenuSeparator</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> AccordionMenuSeparatorProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">classNames</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(AccordionMenuContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-separator\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"separator\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'my-1 h-px bg-border'</span><span style=\"color:#E6EDF3\">, classNames?.separator, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> itemVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">  'relative cursor-pointer select-none flex w-full text-start items-center text-foreground rounded-lg gap-2 px-2 py-1.5 text-sm outline-hidden transition-colors hover:bg-accent hover:text-accent-foreground data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground disabled:opacity-50 disabled:bg-transparent focus-visible:bg-accent focus-visible:text-accent-foreground [&#x26;_svg]:pointer-events-none [&#x26;_svg]:opacity-60 [&#x26;_svg:not([class*=size-])]:size-4 [&#x26;_svg]:shrink-0 [&#x26;_a]:flex [&#x26;>a]:w-full [&#x26;>a]:items-center [&#x26;>a]:gap-2'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        default: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        destructive:</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'text-destructive hover:text-destructive focus:text-destructive hover:bg-destructive/5 focus:bg-destructive/5 data-[active=true]:bg-destructive/5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: </span><span style=\"color:#A5D6FF\">'default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> AccordionMenuItem</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  variant</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  asChild</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onClick</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> AccordionPrimitive.Item> </span><span style=\"color:#FF7B72\">&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  VariantProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> itemVariants> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    onClick</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">MouseEventHandler</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLElement</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">classNames</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">selectedValue</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">matchPath</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">onItemClick</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(AccordionMenuContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Item</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex\"</span><span style=\"color:#FF7B72\"> {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Header</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex w-full\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Trigger</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          asChild</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">asChild</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-item\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">itemVariants</span><span style=\"color:#E6EDF3\">({ variant }), classNames?.item, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onClick</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            if</span><span style=\"color:#E6EDF3\"> (onItemClick) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">              onItemClick</span><span style=\"color:#E6EDF3\">(props.value, e);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            if</span><span style=\"color:#E6EDF3\"> (onClick) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">              onClick</span><span style=\"color:#E6EDF3\">(e);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            e.</span><span style=\"color:#D2A8FF\">preventDefault</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onKeyDown</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            if</span><span style=\"color:#E6EDF3\"> (e.key </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'Enter'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              e.</span><span style=\"color:#D2A8FF\">preventDefault</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              const</span><span style=\"color:#79C0FF\"> target</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> e.currentTarget </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> HTMLElement</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              const</span><span style=\"color:#79C0FF\"> firstChild</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> target.firstElementChild </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> HTMLElement</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              if</span><span style=\"color:#E6EDF3\"> (firstChild) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                firstChild.</span><span style=\"color:#D2A8FF\">click</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          data-selected</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">matchPath</span><span style=\"color:#E6EDF3\">(props.value </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> selectedValue </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> props.value </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'true'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Trigger</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Header</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Item</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> AccordionMenuSub</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> AccordionPrimitive.Item>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">classNames</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(AccordionMenuContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Item</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-sub\"</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(classNames?.sub, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FF7B72\"> {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Item</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> AccordionMenuSubTrigger</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> AccordionPrimitive.Trigger>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">classNames</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(AccordionMenuContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Header</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Trigger</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-sub-trigger\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'w-full relative flex items-center cursor-pointer select-none text-start rounded-lg gap-2 px-2 py-1.5 text-sm outline-hidden text-foreground transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:bg-accent focus-visible:text-accent-foreground [&#x26;_svg]:pointer-events-none [&#x26;_svg:not([role=img]):not([class*=text-])]:opacity-60 [&#x26;_svg:not([class*=size-])]:size-4 [&#x26;_svg]:shrink-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          classNames?.subTrigger,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">ChevronDown</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-sub-indicator\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">              'ms-auto size-3.5! shrink-0 text-muted-foreground transition-transform duration-200 [[data-state=open]>&#x26;]:-rotate-180'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Trigger</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Header</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> AccordionMenuSubContentProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> AccordionPrimitive.Content> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">      type</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'single'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">      collapsible</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">      defaultValue</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    })</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> AccordionPrimitive.Content> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">      type</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'multiple'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">      collapsible</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">      defaultValue</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    })</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  parentValue</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> AccordionMenuSubContent</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  type</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  collapsible</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  defaultValue</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  parentValue</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> AccordionMenuSubContentProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">nestedStates</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setNestedStates</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">classNames</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(AccordionMenuContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  let</span><span style=\"color:#E6EDF3\"> currentValue;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'multiple'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> stateValue</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> nestedStates[parentValue];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (Array.</span><span style=\"color:#D2A8FF\">isArray</span><span style=\"color:#E6EDF3\">(stateValue)) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      currentValue </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> stateValue;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> stateValue </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'string'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      currentValue </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [stateValue];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (defaultValue) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      currentValue </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> Array.</span><span style=\"color:#D2A8FF\">isArray</span><span style=\"color:#E6EDF3\">(defaultValue) </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> defaultValue </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> [defaultValue];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      currentValue </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    currentValue </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> nestedStates[parentValue] </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#E6EDF3\"> defaultValue </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Content</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-sub-content\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'ps-5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'overflow-hidden transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        classNames?.subContent,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'multiple'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Root</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-full py-0.5'</span><span style=\"color:#E6EDF3\">, classNames?.subWrapper)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"multiple\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">currentValue </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[]</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"menu\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-sub-wrapper\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onValueChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            const</span><span style=\"color:#79C0FF\"> newValue</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> Array.</span><span style=\"color:#D2A8FF\">isArray</span><span style=\"color:#E6EDF3\">(value) </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> value </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> [value];</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">            setNestedStates</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">prev</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> ({ </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">prev, [parentValue]: newValue }));</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Root</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">AccordionPrimitive.Root</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-full py-0.5'</span><span style=\"color:#E6EDF3\">, classNames?.subWrapper)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"single\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          collapsible</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">collapsible</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">currentValue </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"menu\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-sub-wrapper\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onValueChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> setNestedStates</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">prev</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> ({ </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">prev, [parentValue]: value }))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Root</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">AccordionPrimitive.Content</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> AccordionMenuIndicatorProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'span'</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> AccordionMenuIndicator</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> AccordionMenuIndicatorProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">classNames</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(AccordionMenuContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">span</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      aria-hidden</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"true\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"accordion-menu-indicator\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'ms-auto flex items-center font-medium'</span><span style=\"color:#E6EDF3\">, classNames?.indicator, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  AccordionMenu,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  AccordionMenuGroup,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  AccordionMenuIndicator,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  AccordionMenuItem,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  AccordionMenuLabel,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  AccordionMenuSeparator,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  AccordionMenuSub,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  AccordionMenuSubContent,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  AccordionMenuSubTrigger,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  type</span><span style=\"color:#E6EDF3\"> AccordionMenuClassNames,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/accordion-menu.tsx",
    "timestamp": "2025-08-21T11:53:05.236Z"
  }
}