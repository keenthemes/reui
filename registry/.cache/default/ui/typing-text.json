{
  "typing-text": {
    "code": "'use client';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { motion, MotionProps, useInView, UseInViewOptions, Variants } from 'motion/react';\nimport { cn } from '@/lib/utils';\n\ntype AnimationVariant =\n  | 'fadeIn'\n  | 'blurIn'\n  | 'blurInUp'\n  | 'blurInDown'\n  | 'slideUp'\n  | 'slideDown'\n  | 'slideLeft'\n  | 'slideRight'\n  | 'scaleUp'\n  | 'scaleDown';\n\ninterface TypingTextProps extends Omit<MotionProps, 'children'> {\n  /** Text to animate */\n  text?: string;\n  /** Array of texts to cycle through */\n  texts?: string[];\n  /** Typing speed in milliseconds */\n  speed?: number;\n  /** Delay before starting animation */\n  delay?: number;\n  /** Whether to show cursor */\n  showCursor?: boolean;\n  /** Cursor character */\n  cursor?: string;\n  /** Cursor className */\n  cursorClassName?: string;\n  /** Whether to loop through texts */\n  loop?: boolean;\n  /** Pause duration between loops */\n  pauseDuration?: number;\n  /** Custom className */\n  className?: string;\n  /** Callback when typing completes */\n  onComplete?: () => void;\n  /** Whether to start animation when component enters viewport */\n  startOnView?: boolean;\n  /** Whether to animate only once */\n  once?: boolean;\n  /** The animation preset to use */\n  animation?: AnimationVariant;\n  /** Margin for in-view detection (rootMargin) */\n  inViewMargin?: UseInViewOptions['margin'];\n}\n\nconst cursorVariants: Variants = {\n  blinking: {\n    opacity: [0, 0, 1, 1],\n    transition: {\n      duration: 1,\n      repeat: Infinity,\n      repeatDelay: 0,\n      ease: 'linear',\n      times: [0, 0.5, 0.5, 1],\n    },\n  },\n};\n\nexport function TypingText({\n  text,\n  texts,\n  speed = 100,\n  delay = 0,\n  showCursor = true,\n  cursorClassName = '',\n  cursor = '|',\n  loop = false,\n  pauseDuration = 2000,\n  className,\n  onComplete,\n  startOnView = true,\n  once = false,\n  inViewMargin,\n  ...props\n}: TypingTextProps) {\n  const ref = useRef<HTMLSpanElement>(null);\n  const isInView = useInView(ref, { once, margin: inViewMargin as UseInViewOptions['margin'] });\n  const [hasAnimated, setHasAnimated] = useState(false);\n  const [displayText, setDisplayText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isTyping, setIsTyping] = useState(false);\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\n\n  // Determine if we should start animation\n  const shouldStart = !startOnView || (isInView && (!once || !hasAnimated));\n\n  const textArray = texts && texts.length > 0 ? texts : [text];\n  const currentText = textArray[currentTextIndex] ?? '';\n\n  useEffect(() => {\n    if (!shouldStart) return;\n    const timeout = setTimeout(() => {\n      setIsTyping(true);\n      setHasAnimated(true);\n    }, delay);\n\n    return () => clearTimeout(timeout);\n  }, [delay, shouldStart]);\n\n  useEffect(() => {\n    if (!isTyping) return;\n\n    if (currentIndex < currentText.length) {\n      const timeout = setTimeout(() => {\n        setDisplayText(currentText.slice(0, currentIndex + 1));\n        setCurrentIndex(currentIndex + 1);\n      }, speed);\n\n      return () => clearTimeout(timeout);\n    } else {\n      // Typing complete\n      onComplete?.();\n\n      if (loop && texts && texts.length > 1) {\n        const timeout = setTimeout(() => {\n          setDisplayText('');\n          setCurrentIndex(0);\n          setCurrentTextIndex((prev) => (prev + 1) % texts.length);\n        }, pauseDuration);\n\n        return () => clearTimeout(timeout);\n      }\n    }\n  }, [currentIndex, currentText, isTyping, speed, loop, texts, pauseDuration, onComplete]);\n\n  // Animation variants for container (fadeIn by default, extendable)\n  const finalVariants = {\n    container: {\n      hidden: { opacity: 0, y: 10 },\n      show: { opacity: 1, y: 0, transition: { staggerChildren: 0.02 } },\n      exit: { opacity: 0 },\n    },\n  };\n  const MotionComponent = motion.span;\n\n  return (\n    <MotionComponent\n      ref={ref}\n      variants={finalVariants.container as Variants}\n      initial=\"hidden\"\n      whileInView={startOnView ? 'show' : undefined}\n      animate={startOnView ? undefined : 'show'}\n      exit=\"exit\"\n      className={cn('whitespace-pre-wrap', className)}\n      viewport={{ once }}\n      {...props}\n    >\n      <span style={{ display: 'inline-flex', alignItems: 'center' }}>\n        {displayText}\n        {showCursor && (\n          <motion.span\n            variants={cursorVariants}\n            animate=\"blinking\"\n            className={cn('inline-block ms-1 font-normal text-foreground select-none w-px', cursorClassName)}\n          >\n            {cursor}\n          </motion.span>\n        )}\n      </span>\n    </MotionComponent>\n  );\n}\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> React, { useEffect, useRef, useState } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { motion, MotionProps, useInView, UseInViewOptions, Variants } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'motion/react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> AnimationVariant</span><span style=\"color:#FF7B72\"> =</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#A5D6FF\"> 'fadeIn'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#A5D6FF\"> 'blurIn'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#A5D6FF\"> 'blurInUp'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#A5D6FF\"> 'blurInDown'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#A5D6FF\"> 'slideUp'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#A5D6FF\"> 'slideDown'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#A5D6FF\"> 'slideLeft'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#A5D6FF\"> 'slideRight'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#A5D6FF\"> 'scaleUp'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  |</span><span style=\"color:#A5D6FF\"> 'scaleDown'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> TypingTextProps</span><span style=\"color:#FF7B72\"> extends</span><span style=\"color:#79C0FF\"> Omit</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">MotionProps</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'children'</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Text to animate */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  text</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Array of texts to cycle through */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  texts</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Typing speed in milliseconds */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  speed</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Delay before starting animation */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  delay</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to show cursor */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  showCursor</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Cursor character */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  cursor</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Cursor className */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  cursorClassName</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to loop through texts */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  loop</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Pause duration between loops */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  pauseDuration</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Custom className */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Callback when typing completes */</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onComplete</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to start animation when component enters viewport */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  startOnView</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to animate only once */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  once</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** The animation preset to use */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  animation</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> AnimationVariant</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Margin for in-view detection (rootMargin) */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  inViewMargin</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> UseInViewOptions</span><span style=\"color:#E6EDF3\">[</span><span style=\"color:#A5D6FF\">'margin'</span><span style=\"color:#E6EDF3\">];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> cursorVariants</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Variants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  blinking: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    opacity: [</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transition: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      duration: </span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      repeat: </span><span style=\"color:#79C0FF\">Infinity</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      repeatDelay: </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ease: </span><span style=\"color:#A5D6FF\">'linear'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      times: [</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">0.5</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">0.5</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> function</span><span style=\"color:#D2A8FF\"> TypingText</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  text</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  texts</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  speed</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 100</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  delay</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  showCursor</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  cursorClassName</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  cursor</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> '|'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  loop</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  pauseDuration</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 2000</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onComplete</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  startOnView</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  once</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  inViewMargin</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> TypingTextProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> ref</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLSpanElement</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isInView</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useInView</span><span style=\"color:#E6EDF3\">(ref, { once, margin: inViewMargin </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> UseInViewOptions</span><span style=\"color:#E6EDF3\">[</span><span style=\"color:#A5D6FF\">'margin'</span><span style=\"color:#E6EDF3\">] });</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">hasAnimated</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setHasAnimated</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">displayText</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setDisplayText</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">currentIndex</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setCurrentIndex</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">isTyping</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setIsTyping</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">currentTextIndex</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setCurrentTextIndex</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Determine if we should start animation</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> shouldStart</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">startOnView </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> (isInView </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">once </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">hasAnimated));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> textArray</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> texts </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> texts.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> texts </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> [text];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> currentText</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> textArray[currentTextIndex] </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">shouldStart) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> timeout</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> setTimeout</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setIsTyping</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setHasAnimated</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }, delay);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> clearTimeout</span><span style=\"color:#E6EDF3\">(timeout);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [delay, shouldStart]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">isTyping) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (currentIndex </span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#E6EDF3\"> currentText.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> timeout</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> setTimeout</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setDisplayText</span><span style=\"color:#E6EDF3\">(currentText.</span><span style=\"color:#D2A8FF\">slice</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, currentIndex </span><span style=\"color:#FF7B72\">+</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">));</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setCurrentIndex</span><span style=\"color:#E6EDF3\">(currentIndex </span><span style=\"color:#FF7B72\">+</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }, speed);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> clearTimeout</span><span style=\"color:#E6EDF3\">(timeout);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Typing complete</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      onComplete</span><span style=\"color:#E6EDF3\">?.();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (loop </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> texts </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> texts.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> timeout</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> setTimeout</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          setDisplayText</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          setCurrentIndex</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          setCurrentTextIndex</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">prev</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (prev </span><span style=\"color:#FF7B72\">+</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">%</span><span style=\"color:#E6EDF3\"> texts.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }, pauseDuration);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> clearTimeout</span><span style=\"color:#E6EDF3\">(timeout);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [currentIndex, currentText, isTyping, speed, loop, texts, pauseDuration, onComplete]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Animation variants for container (fadeIn by default, extendable)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> finalVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    container: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      hidden: { opacity: </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, y: </span><span style=\"color:#79C0FF\">10</span><span style=\"color:#E6EDF3\"> },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      show: { opacity: </span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">, y: </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, transition: { staggerChildren: </span><span style=\"color:#79C0FF\">0.02</span><span style=\"color:#E6EDF3\"> } },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      exit: { opacity: </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\"> },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> MotionComponent</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> motion.span;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">MotionComponent</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">ref</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      variants</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">finalVariants.container </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> Variants</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      initial</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"hidden\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      whileInView</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">startOnView </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'show'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      animate</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">startOnView </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'show'</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      exit</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"exit\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'whitespace-pre-wrap'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      viewport</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ once }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ display: </span><span style=\"color:#A5D6FF\">'inline-flex'</span><span style=\"color:#E6EDF3\">, alignItems: </span><span style=\"color:#A5D6FF\">'center'</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">displayText</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">showCursor </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">motion.span</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            variants</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">cursorVariants</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            animate</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"blinking\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'inline-block ms-1 font-normal text-foreground select-none w-px'</span><span style=\"color:#E6EDF3\">, cursorClassName)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">cursor</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">motion.span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">MotionComponent</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/typing-text.tsx",
    "timestamp": "2025-08-21T11:53:07.030Z"
  }
}