{
  "data-grid-table-dnd-rows": {
    "code": "import { CSSProperties, useId } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { useDataGrid } from '@/components/ui/data-grid';\nimport {\n  DataGridTableBase,\n  DataGridTableBody,\n  DataGridTableBodyRow,\n  DataGridTableBodyRowCell,\n  DataGridTableBodyRowSkeleton,\n  DataGridTableBodyRowSkeletonCell,\n  DataGridTableEmpty,\n  DataGridTableHead,\n  DataGridTableHeadRow,\n  DataGridTableHeadRowCell,\n  DataGridTableHeadRowCellResize,\n  DataGridTableRowSpacer,\n} from '@/components/ui/data-grid-table';\nimport {\n  closestCenter,\n  DndContext,\n  KeyboardSensor,\n  MouseSensor,\n  TouchSensor,\n  UniqueIdentifier,\n  useSensor,\n  useSensors,\n  type DragEndEvent,\n} from '@dnd-kit/core';\nimport { restrictToVerticalAxis } from '@dnd-kit/modifiers';\nimport { SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Cell, flexRender, HeaderGroup, Row } from '@tanstack/react-table';\nimport { GripHorizontal } from 'lucide-react';\n\nfunction DataGridTableDndRowHandle({ rowId }: { rowId: string }) {\n  const { attributes, listeners } = useSortable({\n    id: rowId,\n  });\n\n  return (\n    <Button variant=\"dim\" size=\"sm\" className=\"size-7\" {...attributes} {...listeners}>\n      <GripHorizontal />\n    </Button>\n  );\n}\n\nfunction DataGridTableDndRow<TData>({ row }: { row: Row<TData> }) {\n  const { transform, transition, setNodeRef, isDragging } = useSortable({\n    id: row.id,\n  });\n\n  const style: CSSProperties = {\n    transform: CSS.Transform.toString(transform), //let dnd-kit do its thing\n    transition: transition,\n    opacity: isDragging ? 0.8 : 1,\n    zIndex: isDragging ? 1 : 0,\n    position: 'relative',\n  };\n  return (\n    <DataGridTableBodyRow row={row} dndRef={setNodeRef} dndStyle={style} key={row.id}>\n      {row.getVisibleCells().map((cell: Cell<TData, unknown>, colIndex) => {\n        return (\n          <DataGridTableBodyRowCell cell={cell} key={colIndex}>\n            {flexRender(cell.column.columnDef.cell, cell.getContext())}\n          </DataGridTableBodyRowCell>\n        );\n      })}\n    </DataGridTableBodyRow>\n  );\n}\n\nfunction DataGridTableDndRows<TData>({\n  handleDragEnd,\n  dataIds,\n}: {\n  handleDragEnd: (event: DragEndEvent) => void;\n  dataIds: UniqueIdentifier[];\n}) {\n  const { table, isLoading, props } = useDataGrid();\n  const pagination = table.getState().pagination;\n\n  const sensors = useSensors(useSensor(MouseSensor, {}), useSensor(TouchSensor, {}), useSensor(KeyboardSensor, {}));\n\n  return (\n    <DndContext\n      id={useId()}\n      collisionDetection={closestCenter}\n      modifiers={[restrictToVerticalAxis]}\n      onDragEnd={handleDragEnd}\n      sensors={sensors}\n    >\n      <div className=\"relative\">\n        <DataGridTableBase>\n          <DataGridTableHead>\n            {table.getHeaderGroups().map((headerGroup: HeaderGroup<TData>, index) => {\n              return (\n                <DataGridTableHeadRow headerGroup={headerGroup} key={index}>\n                  {headerGroup.headers.map((header, index) => {\n                    const { column } = header;\n\n                    return (\n                      <DataGridTableHeadRowCell header={header} key={index}>\n                        {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}\n                        {props.tableLayout?.columnsResizable && column.getCanResize() && (\n                          <DataGridTableHeadRowCellResize header={header} />\n                        )}\n                      </DataGridTableHeadRowCell>\n                    );\n                  })}\n                </DataGridTableHeadRow>\n              );\n            })}\n          </DataGridTableHead>\n\n          {(props.tableLayout?.stripped || !props.tableLayout?.rowBorder) && <DataGridTableRowSpacer />}\n\n          <DataGridTableBody>\n            {props.loadingMode === 'skeleton' && isLoading && pagination?.pageSize ? (\n              Array.from({ length: pagination.pageSize }).map((_, rowIndex) => (\n                <DataGridTableBodyRowSkeleton key={rowIndex}>\n                  {table.getVisibleFlatColumns().map((column, colIndex) => {\n                    return (\n                      <DataGridTableBodyRowSkeletonCell column={column} key={colIndex}>\n                        {column.columnDef.meta?.skeleton}\n                      </DataGridTableBodyRowSkeletonCell>\n                    );\n                  })}\n                </DataGridTableBodyRowSkeleton>\n              ))\n            ) : table.getRowModel().rows.length ? (\n              <SortableContext items={dataIds} strategy={verticalListSortingStrategy}>\n                {table.getRowModel().rows.map((row: Row<TData>) => {\n                  return <DataGridTableDndRow row={row} key={row.id} />;\n                })}\n              </SortableContext>\n            ) : (\n              <DataGridTableEmpty />\n            )}\n          </DataGridTableBody>\n        </DataGridTableBase>\n      </div>\n    </DndContext>\n  );\n}\n\nexport { DataGridTableDndRowHandle, DataGridTableDndRows };\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { CSSProperties, useId } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Button } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/button'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { useDataGrid } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/data-grid'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBase,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBody,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRow,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowCell,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowSkeleton,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowSkeletonCell,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableEmpty,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHead,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHeadRow,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHeadRowCell,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHeadRowCellResize,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableRowSpacer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">} </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/data-grid-table'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  closestCenter,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DndContext,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  KeyboardSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  MouseSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  TouchSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  UniqueIdentifier,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  useSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  useSensors,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  type</span><span style=\"color:#E6EDF3\"> DragEndEvent,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">} </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/core'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { restrictToVerticalAxis } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/modifiers'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { SortableContext, useSortable, verticalListSortingStrategy } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/sortable'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { CSS } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/utilities'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Cell, flexRender, HeaderGroup, Row } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@tanstack/react-table'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { GripHorizontal } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'lucide-react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableDndRowHandle</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">rowId</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">rowId</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">attributes</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">listeners</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useSortable</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    id: rowId,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">Button</span><span style=\"color:#79C0FF\"> variant</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"dim\"</span><span style=\"color:#79C0FF\"> size</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"sm\"</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"size-7\"</span><span style=\"color:#FF7B72\"> {...</span><span style=\"color:#E6EDF3\">attributes</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FF7B72\"> {...</span><span style=\"color:#E6EDF3\">listeners</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">GripHorizontal</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">Button</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableDndRow</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">row</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">row</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Row</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">transform</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">transition</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setNodeRef</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isDragging</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useSortable</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    id: row.id,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> style</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> CSSProperties</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transform: </span><span style=\"color:#79C0FF\">CSS</span><span style=\"color:#E6EDF3\">.Transform.</span><span style=\"color:#D2A8FF\">toString</span><span style=\"color:#E6EDF3\">(transform), </span><span style=\"color:#8B949E\">//let dnd-kit do its thing</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transition: transition,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    opacity: isDragging </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> 0.8</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    zIndex: isDragging </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    position: </span><span style=\"color:#A5D6FF\">'relative'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRow</span><span style=\"color:#79C0FF\"> row</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> dndRef</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">setNodeRef</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> dndStyle</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">style</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row.id</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">row.</span><span style=\"color:#D2A8FF\">getVisibleCells</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">cell</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Cell</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">unknown</span><span style=\"color:#E6EDF3\">>, </span><span style=\"color:#FFA657\">colIndex</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowCell</span><span style=\"color:#79C0FF\"> cell</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">cell</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">colIndex</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#D2A8FF\">flexRender</span><span style=\"color:#E6EDF3\">(cell.column.columnDef.cell, cell.</span><span style=\"color:#D2A8FF\">getContext</span><span style=\"color:#E6EDF3\">())</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRowCell</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRow</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableDndRows</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  handleDragEnd</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dataIds</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  handleDragEnd</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> DragEndEvent</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dataIds</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> UniqueIdentifier</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">table</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isLoading</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> pagination</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> table.</span><span style=\"color:#D2A8FF\">getState</span><span style=\"color:#E6EDF3\">().pagination;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> sensors</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useSensors</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">useSensor</span><span style=\"color:#E6EDF3\">(MouseSensor, {}), </span><span style=\"color:#D2A8FF\">useSensor</span><span style=\"color:#E6EDF3\">(TouchSensor, {}), </span><span style=\"color:#D2A8FF\">useSensor</span><span style=\"color:#E6EDF3\">(KeyboardSensor, {}));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">DndContext</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      id</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">useId</span><span style=\"color:#E6EDF3\">()</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      collisionDetection</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">closestCenter</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      modifiers</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">[restrictToVerticalAxis]</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onDragEnd</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleDragEnd</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      sensors</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">sensors</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"relative\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBase</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHead</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">table.</span><span style=\"color:#D2A8FF\">getHeaderGroups</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">headerGroup</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> HeaderGroup</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHeadRow</span><span style=\"color:#79C0FF\"> headerGroup</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">headerGroup</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">headerGroup.headers.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">header</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">column</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> header;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHeadRowCell</span><span style=\"color:#79C0FF\"> header</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">header</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        {</span><span style=\"color:#E6EDF3\">header.isPlaceholder </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#D2A8FF\"> flexRender</span><span style=\"color:#E6EDF3\">(header.column.columnDef.header, header.</span><span style=\"color:#D2A8FF\">getContext</span><span style=\"color:#E6EDF3\">())</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        {</span><span style=\"color:#E6EDF3\">props.tableLayout?.columnsResizable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getCanResize</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHeadRowCellResize</span><span style=\"color:#79C0FF\"> header</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">header</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableHeadRowCell</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableHeadRow</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableHead</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">(props.tableLayout?.stripped </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">props.tableLayout?.rowBorder) </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">DataGridTableRowSpacer</span><span style=\"color:#E6EDF3\"> /></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBody</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">props.loadingMode </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'skeleton'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> isLoading </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> pagination?.pageSize </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              Array.</span><span style=\"color:#D2A8FF\">from</span><span style=\"color:#E6EDF3\">({ length: pagination.pageSize }).</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">_</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">rowIndex</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeleton</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">rowIndex</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">table.</span><span style=\"color:#D2A8FF\">getVisibleFlatColumns</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">column</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">colIndex</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeletonCell</span><span style=\"color:#79C0FF\"> column</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">column</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">colIndex</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        {</span><span style=\"color:#E6EDF3\">column.columnDef.meta?.skeleton</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeletonCell</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeleton</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              ))</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> table.</span><span style=\"color:#D2A8FF\">getRowModel</span><span style=\"color:#E6EDF3\">().rows.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">SortableContext</span><span style=\"color:#79C0FF\"> items</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">dataIds</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> strategy</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">verticalListSortingStrategy</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                {</span><span style=\"color:#E6EDF3\">table.</span><span style=\"color:#D2A8FF\">getRowModel</span><span style=\"color:#E6EDF3\">().rows.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">row</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Row</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  return</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">DataGridTableDndRow</span><span style=\"color:#79C0FF\"> row</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row.id</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> />;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/</span><span style=\"color:#7EE787\">SortableContext</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">DataGridTableEmpty</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBody</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBase</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">DndContext</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> { DataGridTableDndRowHandle, DataGridTableDndRows };</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/data-grid-table-dnd-rows.tsx",
    "timestamp": "2025-08-21T11:53:05.955Z"
  }
}