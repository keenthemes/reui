{
  "video-text": {
    "code": "'use client';\n\nimport * as React from 'react';\nimport { ElementType, ReactNode, useEffect, useRef } from 'react';\nimport { cn } from '@/lib/utils';\n\nexport interface VideoTextProps {\n  /**\n   * The video source URL or array of sources for multiple formats\n   */\n  src: string | string[];\n  /**\n   * The content to display (will have the video \"inside\" it)\n   */\n  children: ReactNode;\n  /**\n   * Additional className for the container\n   */\n  className?: string;\n  /**\n   * Whether to autoplay the video\n   * @default true\n   */\n  autoPlay?: boolean;\n  /**\n   * Whether to mute the video\n   * @default true\n   */\n  muted?: boolean;\n  /**\n   * Whether to loop the video\n   * @default true\n   */\n  loop?: boolean;\n  /**\n   * Whether to preload the video\n   * @default \"auto\"\n   */\n  preload?: 'auto' | 'metadata' | 'none';\n  /**\n   * Font size for the text mask (in viewport width units or CSS units)\n   * @default \"20vw\"\n   */\n  fontSize?: string | number;\n  /**\n   * Font weight for the text mask\n   * @default \"bold\"\n   */\n  fontWeight?: string | number;\n  /**\n   * The element type to render for the container\n   * @default \"div\"\n   */\n  as?: ElementType;\n  /**\n   * Callback when video starts playing\n   */\n  onPlay?: () => void;\n  /**\n   * Callback when video is paused\n   */\n  onPause?: () => void;\n  /**\n   * Callback when video ends\n   */\n  onEnded?: () => void;\n}\n\n/**\n * VideoText displays content with a background video fill effect.\n * The video is masked by the content, creating a dynamic animated text look.\n */\nexport function VideoText({\n  src,\n  children,\n  className = '',\n  autoPlay = true,\n  muted = true,\n  loop = true,\n  preload = 'auto',\n  fontSize = '20vw',\n  fontWeight = 'bold',\n  as: Component = 'div',\n  onPlay,\n  onPause,\n  onEnded,\n}: VideoTextProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const textRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const textElement = textRef.current;\n    const container = containerRef.current;\n\n    if (!video || !canvas || !textElement || !container) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    let animationId: number;\n\n    const updateCanvas = () => {\n      // Get text dimensions first\n      const text = textElement.textContent || '';\n      ctx.font = `${fontWeight} ${typeof fontSize === 'number' ? `${fontSize}px` : fontSize} system-ui, -apple-system, sans-serif`;\n      const textMetrics = ctx.measureText(text);\n      const textWidth = textMetrics.width;\n      const textHeight = typeof fontSize === 'number' ? fontSize : parseFloat(fontSize.replace(/[^\\d.]/g, '')) || 100;\n\n      // Set canvas size to accommodate full text with padding\n      const padding = 40;\n      canvas.width = Math.max(textWidth + padding * 2, 400);\n      canvas.height = Math.max(textHeight + padding * 2, 200);\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw video frame to fill canvas\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Set up text masking\n      ctx.globalCompositeOperation = 'destination-in';\n\n      // Draw text as mask\n      ctx.fillStyle = 'white';\n      ctx.font = `${fontWeight} ${typeof fontSize === 'number' ? `${fontSize}px` : fontSize} system-ui, -apple-system, sans-serif`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n\n      ctx.fillText(text, canvas.width / 2, canvas.height / 2);\n\n      // Reset composite operation\n      ctx.globalCompositeOperation = 'source-over';\n\n      animationId = requestAnimationFrame(updateCanvas);\n    };\n\n    const handleVideoLoad = () => {\n      updateCanvas();\n    };\n\n    const handleResize = () => {\n      updateCanvas();\n    };\n\n    video.addEventListener('loadeddata', handleVideoLoad);\n    video.addEventListener('play', updateCanvas);\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      video.removeEventListener('loadeddata', handleVideoLoad);\n      video.removeEventListener('play', updateCanvas);\n      window.removeEventListener('resize', handleResize);\n      if (animationId) {\n        cancelAnimationFrame(animationId);\n      }\n    };\n  }, [fontSize, fontWeight]);\n\n  const sources = Array.isArray(src) ? src : [src];\n  const content = React.Children.toArray(children).join('');\n\n  return (\n    <Component ref={containerRef} className={cn('relative inline-block overflow-hidden', className)}>\n      {/* Hidden video element */}\n      <video\n        ref={videoRef}\n        className=\"absolute opacity-0 pointer-events-none\"\n        autoPlay={autoPlay}\n        muted={muted}\n        loop={loop}\n        preload={preload}\n        playsInline\n        onPlay={onPlay}\n        onPause={onPause}\n        onEnded={onEnded}\n        crossOrigin=\"anonymous\"\n      >\n        {sources.map((source, index) => (\n          <source key={index} src={source} />\n        ))}\n        Your browser does not support the video tag.\n      </video>\n\n      {/* Canvas that shows the masked video */}\n      <canvas\n        ref={canvasRef}\n        className=\"block\"\n        style={{\n          width: '100%',\n          height: 'auto',\n        }}\n      />\n\n      {/* Hidden text for measuring and accessibility */}\n      <div\n        ref={textRef}\n        className=\"absolute opacity-0 pointer-events-none font-bold\"\n        style={{\n          fontSize: typeof fontSize === 'number' ? `${fontSize}px` : fontSize,\n          fontWeight,\n        }}\n        aria-label={content}\n      >\n        {children}\n      </div>\n\n      {/* Screen reader text */}\n      <span className=\"sr-only\">{content}</span>\n    </Component>\n  );\n}\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { ElementType, ReactNode, useEffect, useRef } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> VideoTextProps</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * The video source URL or array of sources for multiple formats</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  src</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * The content to display (will have the video \"inside\" it)</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Additional className for the container</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Whether to autoplay the video</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> true</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  autoPlay</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Whether to mute the video</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> true</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  muted</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Whether to loop the video</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> true</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  loop</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Whether to preload the video</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> \"</span><span style=\"color:#E6EDF3\">auto</span><span style=\"color:#E6EDF3\">\"</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  preload</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#A5D6FF\"> 'auto'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'metadata'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'none'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Font size for the text mask (in viewport width units or CSS units)</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> \"</span><span style=\"color:#E6EDF3\">20vw</span><span style=\"color:#E6EDF3\">\"</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  fontSize</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Font weight for the text mask</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> \"</span><span style=\"color:#E6EDF3\">bold</span><span style=\"color:#E6EDF3\">\"</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  fontWeight</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * The element type to render for the container</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> \"</span><span style=\"color:#E6EDF3\">div</span><span style=\"color:#E6EDF3\">\"</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  as</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> ElementType</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Callback when video starts playing</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onPlay</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Callback when video is paused</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onPause</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Callback when video ends</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onEnded</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">/**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\"> * VideoText displays content with a background video fill effect.</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\"> * The video is masked by the content, creating a dynamic animated text look.</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\"> */</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> function</span><span style=\"color:#D2A8FF\"> VideoText</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  src</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  autoPlay</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  muted</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  loop</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  preload</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'auto'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  fontSize</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> '20vw'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  fontWeight</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'bold'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  as</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FFA657\">Component</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'div'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onPlay</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onPause</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onEnded</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> VideoTextProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> videoRef</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLVideoElement</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> canvasRef</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLCanvasElement</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> textRef</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLDivElement</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> containerRef</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLDivElement</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> video</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> videoRef.current;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> canvas</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> canvasRef.current;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> textElement</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> textRef.current;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> container</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> containerRef.current;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">video </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">canvas </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">textElement </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">container) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> ctx</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> canvas.</span><span style=\"color:#D2A8FF\">getContext</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'2d'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">ctx) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    let</span><span style=\"color:#E6EDF3\"> animationId</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#D2A8FF\"> updateCanvas</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Get text dimensions first</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> text</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> textElement.textContent </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ctx.font </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">fontWeight</span><span style=\"color:#A5D6FF\">} ${</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> fontSize</span><span style=\"color:#FF7B72\"> ===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">fontSize</span><span style=\"color:#A5D6FF\">}px`</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#E6EDF3\"> fontSize</span><span style=\"color:#A5D6FF\">} system-ui, -apple-system, sans-serif`</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> textMetrics</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> ctx.</span><span style=\"color:#D2A8FF\">measureText</span><span style=\"color:#E6EDF3\">(text);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> textWidth</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> textMetrics.width;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> textHeight</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> fontSize </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> fontSize </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#D2A8FF\"> parseFloat</span><span style=\"color:#E6EDF3\">(fontSize.</span><span style=\"color:#D2A8FF\">replace</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">/</span><span style=\"color:#79C0FF\">[</span><span style=\"color:#FF7B72\">^</span><span style=\"color:#79C0FF\">\\d.]</span><span style=\"color:#A5D6FF\">/</span><span style=\"color:#FF7B72\">g</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">)) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> 100</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Set canvas size to accommodate full text with padding</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> padding</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 40</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      canvas.width </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> Math.</span><span style=\"color:#D2A8FF\">max</span><span style=\"color:#E6EDF3\">(textWidth </span><span style=\"color:#FF7B72\">+</span><span style=\"color:#E6EDF3\"> padding </span><span style=\"color:#FF7B72\">*</span><span style=\"color:#79C0FF\"> 2</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">400</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      canvas.height </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> Math.</span><span style=\"color:#D2A8FF\">max</span><span style=\"color:#E6EDF3\">(textHeight </span><span style=\"color:#FF7B72\">+</span><span style=\"color:#E6EDF3\"> padding </span><span style=\"color:#FF7B72\">*</span><span style=\"color:#79C0FF\"> 2</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">200</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Clear canvas</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ctx.</span><span style=\"color:#D2A8FF\">clearRect</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, canvas.width, canvas.height);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Draw video frame to fill canvas</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ctx.</span><span style=\"color:#D2A8FF\">drawImage</span><span style=\"color:#E6EDF3\">(video, </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, canvas.width, canvas.height);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Set up text masking</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ctx.globalCompositeOperation </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> 'destination-in'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Draw text as mask</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ctx.fillStyle </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> 'white'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ctx.font </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">fontWeight</span><span style=\"color:#A5D6FF\">} ${</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> fontSize</span><span style=\"color:#FF7B72\"> ===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">fontSize</span><span style=\"color:#A5D6FF\">}px`</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#E6EDF3\"> fontSize</span><span style=\"color:#A5D6FF\">} system-ui, -apple-system, sans-serif`</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ctx.textAlign </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> 'center'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ctx.textBaseline </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> 'middle'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ctx.</span><span style=\"color:#D2A8FF\">fillText</span><span style=\"color:#E6EDF3\">(text, canvas.width </span><span style=\"color:#FF7B72\">/</span><span style=\"color:#79C0FF\"> 2</span><span style=\"color:#E6EDF3\">, canvas.height </span><span style=\"color:#FF7B72\">/</span><span style=\"color:#79C0FF\"> 2</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Reset composite operation</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ctx.globalCompositeOperation </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> 'source-over'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      animationId </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> requestAnimationFrame</span><span style=\"color:#E6EDF3\">(updateCanvas);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#D2A8FF\"> handleVideoLoad</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      updateCanvas</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#D2A8FF\"> handleResize</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      updateCanvas</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    video.</span><span style=\"color:#D2A8FF\">addEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'loadeddata'</span><span style=\"color:#E6EDF3\">, handleVideoLoad);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    video.</span><span style=\"color:#D2A8FF\">addEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'play'</span><span style=\"color:#E6EDF3\">, updateCanvas);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    window.</span><span style=\"color:#D2A8FF\">addEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'resize'</span><span style=\"color:#E6EDF3\">, handleResize);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      video.</span><span style=\"color:#D2A8FF\">removeEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'loadeddata'</span><span style=\"color:#E6EDF3\">, handleVideoLoad);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      video.</span><span style=\"color:#D2A8FF\">removeEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'play'</span><span style=\"color:#E6EDF3\">, updateCanvas);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      window.</span><span style=\"color:#D2A8FF\">removeEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'resize'</span><span style=\"color:#E6EDF3\">, handleResize);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (animationId) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        cancelAnimationFrame</span><span style=\"color:#E6EDF3\">(animationId);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [fontSize, fontWeight]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> sources</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> Array.</span><span style=\"color:#D2A8FF\">isArray</span><span style=\"color:#E6EDF3\">(src) </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> src </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> [src];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> content</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.Children.</span><span style=\"color:#D2A8FF\">toArray</span><span style=\"color:#E6EDF3\">(children).</span><span style=\"color:#D2A8FF\">join</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">Component</span><span style=\"color:#79C0FF\"> ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">containerRef</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'relative inline-block overflow-hidden'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#8B949E\">/* Hidden video element */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">video</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">videoRef</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"absolute opacity-0 pointer-events-none\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        autoPlay</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">autoPlay</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        muted</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">muted</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        loop</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">loop</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        preload</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">preload</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        playsInline</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        onPlay</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">onPlay</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        onPause</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">onPause</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        onEnded</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">onEnded</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        crossOrigin</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"anonymous\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">sources.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">source</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">source</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> src</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">source</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        Your browser does not support the video tag.</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">video</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#8B949E\">/* Canvas that shows the masked video */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">canvas</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">canvasRef</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"block\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          width: </span><span style=\"color:#A5D6FF\">'100%'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          height: </span><span style=\"color:#A5D6FF\">'auto'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      /></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#8B949E\">/* Hidden text for measuring and accessibility */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">textRef</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"absolute opacity-0 pointer-events-none font-bold\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          fontSize: </span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> fontSize </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">fontSize</span><span style=\"color:#A5D6FF\">}px`</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#E6EDF3\"> fontSize,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          fontWeight,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        aria-label</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">content</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#8B949E\">/* Screen reader text */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"sr-only\"</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">content</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">Component</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/video-text.tsx",
    "timestamp": "2025-08-21T11:53:07.056Z"
  }
}