{
  "stepper": {
    "code": "/* eslint-disable react-hooks/exhaustive-deps */\n\n'use client';\n\nimport * as React from 'react';\nimport { createContext, useContext } from 'react';\nimport { cn } from '@/lib/utils';\n\n// Types\ntype StepperOrientation = 'horizontal' | 'vertical';\ntype StepState = 'active' | 'completed' | 'inactive' | 'loading';\ntype StepIndicators = {\n  active?: React.ReactNode;\n  completed?: React.ReactNode;\n  inactive?: React.ReactNode;\n  loading?: React.ReactNode;\n};\n\ninterface StepperContextValue {\n  activeStep: number;\n  setActiveStep: (step: number) => void;\n  stepsCount: number;\n  orientation: StepperOrientation;\n  registerTrigger: (node: HTMLButtonElement | null) => void;\n  triggerNodes: HTMLButtonElement[];\n  focusNext: (currentIdx: number) => void;\n  focusPrev: (currentIdx: number) => void;\n  focusFirst: () => void;\n  focusLast: () => void;\n  indicators: StepIndicators;\n}\n\ninterface StepItemContextValue {\n  step: number;\n  state: StepState;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StepperContext = createContext<StepperContextValue | undefined>(undefined);\nconst StepItemContext = createContext<StepItemContextValue | undefined>(undefined);\n\nfunction useStepper() {\n  const ctx = useContext(StepperContext);\n  if (!ctx) throw new Error('useStepper must be used within a Stepper');\n  return ctx;\n}\n\nfunction useStepItem() {\n  const ctx = useContext(StepItemContext);\n  if (!ctx) throw new Error('useStepItem must be used within a StepperItem');\n  return ctx;\n}\n\ninterface StepperProps extends React.HTMLAttributes<HTMLDivElement> {\n  defaultValue?: number;\n  value?: number;\n  onValueChange?: (value: number) => void;\n  orientation?: StepperOrientation;\n  indicators?: StepIndicators;\n}\n\nfunction Stepper({\n  defaultValue = 1,\n  value,\n  onValueChange,\n  orientation = 'horizontal',\n  className,\n  children,\n  indicators = {},\n  ...props\n}: StepperProps) {\n  const [activeStep, setActiveStep] = React.useState(defaultValue);\n  const [triggerNodes, setTriggerNodes] = React.useState<HTMLButtonElement[]>([]);\n\n  // Register/unregister triggers\n  const registerTrigger = React.useCallback((node: HTMLButtonElement | null) => {\n    setTriggerNodes((prev) => {\n      if (node && !prev.includes(node)) {\n        return [...prev, node];\n      } else if (!node && prev.includes(node!)) {\n        return prev.filter((n) => n !== node);\n      } else {\n        return prev;\n      }\n    });\n  }, []);\n\n  const handleSetActiveStep = React.useCallback(\n    (step: number) => {\n      if (value === undefined) {\n        setActiveStep(step);\n      }\n      onValueChange?.(step);\n    },\n    [value, onValueChange],\n  );\n\n  const currentStep = value ?? activeStep;\n\n  // Keyboard navigation logic\n  const focusTrigger = (idx: number) => {\n    if (triggerNodes[idx]) triggerNodes[idx].focus();\n  };\n  const focusNext = (currentIdx: number) => focusTrigger((currentIdx + 1) % triggerNodes.length);\n  const focusPrev = (currentIdx: number) => focusTrigger((currentIdx - 1 + triggerNodes.length) % triggerNodes.length);\n  const focusFirst = () => focusTrigger(0);\n  const focusLast = () => focusTrigger(triggerNodes.length - 1);\n\n  // Context value\n  const contextValue = React.useMemo<StepperContextValue>(\n    () => ({\n      activeStep: currentStep,\n      setActiveStep: handleSetActiveStep,\n      stepsCount: React.Children.toArray(children).filter(\n        (child): child is React.ReactElement =>\n          React.isValidElement(child) && (child.type as { displayName?: string }).displayName === 'StepperItem',\n      ).length,\n      orientation,\n      registerTrigger,\n      focusNext,\n      focusPrev,\n      focusFirst,\n      focusLast,\n      triggerNodes,\n      indicators,\n    }),\n    [currentStep, handleSetActiveStep, children, orientation, registerTrigger, triggerNodes],\n  );\n\n  return (\n    <StepperContext.Provider value={contextValue}>\n      <div\n        role=\"tablist\"\n        aria-orientation={orientation}\n        data-slot=\"stepper\"\n        className={cn('w-full', className)}\n        data-orientation={orientation}\n        {...props}\n      >\n        {children}\n      </div>\n    </StepperContext.Provider>\n  );\n}\n\ninterface StepperItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  step: number;\n  completed?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n}\n\nfunction StepperItem({\n  step,\n  completed = false,\n  disabled = false,\n  loading = false,\n  className,\n  children,\n  ...props\n}: StepperItemProps) {\n  const { activeStep } = useStepper();\n\n  const state: StepState = completed || step < activeStep ? 'completed' : activeStep === step ? 'active' : 'inactive';\n\n  const isLoading = loading && step === activeStep;\n\n  return (\n    <StepItemContext.Provider value={{ step, state, isDisabled: disabled, isLoading }}>\n      <div\n        data-slot=\"stepper-item\"\n        className={cn(\n          'group/step flex items-center justify-center group-data-[orientation=horizontal]/stepper-nav:flex-row group-data-[orientation=vertical]/stepper-nav:flex-col not-last:flex-1',\n          className,\n        )}\n        data-state={state}\n        {...(isLoading ? { 'data-loading': true } : {})}\n        {...props}\n      >\n        {children}\n      </div>\n    </StepItemContext.Provider>\n  );\n}\n\ninterface StepperTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  asChild?: boolean;\n}\n\nfunction StepperTrigger({ asChild = false, className, children, tabIndex, ...props }: StepperTriggerProps) {\n  const { state, isLoading } = useStepItem();\n  const stepperCtx = useStepper();\n  const { setActiveStep, activeStep, registerTrigger, triggerNodes, focusNext, focusPrev, focusFirst, focusLast } =\n    stepperCtx;\n  const { step, isDisabled } = useStepItem();\n  const isSelected = activeStep === step;\n  const id = `stepper-tab-${step}`;\n  const panelId = `stepper-panel-${step}`;\n\n  // Register this trigger for keyboard navigation\n  const btnRef = React.useRef<HTMLButtonElement>(null);\n  React.useEffect(() => {\n    if (btnRef.current) {\n      registerTrigger(btnRef.current);\n    }\n  }, [btnRef.current]);\n\n  // Find our index among triggers for navigation\n  const myIdx = React.useMemo(\n    () => triggerNodes.findIndex((n: HTMLButtonElement) => n === btnRef.current),\n    [triggerNodes, btnRef.current],\n  );\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        e.preventDefault();\n        if (myIdx !== -1 && focusNext) focusNext(myIdx);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        e.preventDefault();\n        if (myIdx !== -1 && focusPrev) focusPrev(myIdx);\n        break;\n      case 'Home':\n        e.preventDefault();\n        if (focusFirst) focusFirst();\n        break;\n      case 'End':\n        e.preventDefault();\n        if (focusLast) focusLast();\n        break;\n      case 'Enter':\n      case ' ':\n        e.preventDefault();\n        setActiveStep(step);\n        break;\n    }\n  };\n\n  if (asChild) {\n    return (\n      <span data-slot=\"stepper-trigger\" data-state={state} className={className}>\n        {children}\n      </span>\n    );\n  }\n\n  return (\n    <button\n      ref={btnRef}\n      role=\"tab\"\n      id={id}\n      aria-selected={isSelected}\n      aria-controls={panelId}\n      tabIndex={typeof tabIndex === 'number' ? tabIndex : isSelected ? 0 : -1}\n      data-slot=\"stepper-trigger\"\n      data-state={state}\n      data-loading={isLoading}\n      className={cn(\n        'cursor-pointer focus-visible:border-ring focus-visible:ring-ring/50 inline-flex items-center gap-3 rounded-full outline-none focus-visible:z-10 focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-60',\n        className,\n      )}\n      onClick={() => setActiveStep(step)}\n      onKeyDown={handleKeyDown}\n      disabled={isDisabled}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n}\n\nfunction StepperIndicator({ children, className }: React.ComponentProps<'div'>) {\n  const { state, isLoading } = useStepItem();\n  const { indicators } = useStepper();\n\n  return (\n    <div\n      data-slot=\"stepper-indicator\"\n      data-state={state}\n      className={cn(\n        'relative flex items-center overflow-hidden justify-center size-6 shrink-0 border-background bg-accent text-accent-foreground rounded-full text-xs data-[state=completed]:bg-primary data-[state=completed]:text-primary-foreground data-[state=active]:bg-primary data-[state=active]:text-primary-foreground',\n        className,\n      )}\n    >\n      <div className=\"absolute\">\n        {indicators &&\n        ((isLoading && indicators.loading) ||\n          (state === 'completed' && indicators.completed) ||\n          (state === 'active' && indicators.active) ||\n          (state === 'inactive' && indicators.inactive))\n          ? (isLoading && indicators.loading) ||\n            (state === 'completed' && indicators.completed) ||\n            (state === 'active' && indicators.active) ||\n            (state === 'inactive' && indicators.inactive)\n          : children}\n      </div>\n    </div>\n  );\n}\n\nfunction StepperSeparator({ className }: React.ComponentProps<'div'>) {\n  const { state } = useStepItem();\n\n  return (\n    <div\n      data-slot=\"stepper-separator\"\n      data-state={state}\n      className={cn(\n        'm-0.5 rounded-full bg-muted group-data-[orientation=vertical]/stepper-nav:h-12 group-data-[orientation=vertical]/stepper-nav:w-0.5 group-data-[orientation=horizontal]/stepper-nav:h-0.5 group-data-[orientation=horizontal]/stepper-nav:flex-1',\n        className,\n      )}\n    />\n  );\n}\n\nfunction StepperTitle({ children, className }: React.ComponentProps<'h3'>) {\n  const { state } = useStepItem();\n\n  return (\n    <h3 data-slot=\"stepper-title\" data-state={state} className={cn('text-sm font-medium leading-none', className)}>\n      {children}\n    </h3>\n  );\n}\n\nfunction StepperDescription({ children, className }: React.ComponentProps<'div'>) {\n  const { state } = useStepItem();\n\n  return (\n    <div data-slot=\"stepper-description\" data-state={state} className={cn('text-sm text-muted-foreground', className)}>\n      {children}\n    </div>\n  );\n}\n\nfunction StepperNav({ children, className }: React.ComponentProps<'nav'>) {\n  const { activeStep, orientation } = useStepper();\n\n  return (\n    <nav\n      data-slot=\"stepper-nav\"\n      data-state={activeStep}\n      data-orientation={orientation}\n      className={cn(\n        'group/stepper-nav inline-flex data-[orientation=horizontal]:w-full data-[orientation=horizontal]:flex-row data-[orientation=vertical]:flex-col',\n        className,\n      )}\n    >\n      {children}\n    </nav>\n  );\n}\n\nfunction StepperPanel({ children, className }: React.ComponentProps<'div'>) {\n  const { activeStep } = useStepper();\n\n  return (\n    <div data-slot=\"stepper-panel\" data-state={activeStep} className={cn('w-full', className)}>\n      {children}\n    </div>\n  );\n}\n\ninterface StepperContentProps extends React.ComponentProps<'div'> {\n  value: number;\n  forceMount?: boolean;\n}\n\nfunction StepperContent({ value, forceMount, children, className }: StepperContentProps) {\n  const { activeStep } = useStepper();\n  const isActive = value === activeStep;\n\n  if (!forceMount && !isActive) {\n    return null;\n  }\n\n  return (\n    <div\n      data-slot=\"stepper-content\"\n      data-state={activeStep}\n      className={cn('w-full', className, !isActive && forceMount && 'hidden')}\n      hidden={!isActive && forceMount}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport {\n  useStepper,\n  useStepItem,\n  Stepper,\n  StepperItem,\n  StepperTrigger,\n  StepperIndicator,\n  StepperSeparator,\n  StepperTitle,\n  StepperDescription,\n  StepperPanel,\n  StepperContent,\n  StepperNav,\n  type StepperProps,\n  type StepperItemProps,\n  type StepperTriggerProps,\n  type StepperContentProps,\n};\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#8B949E\">/* eslint-disable react-hooks/exhaustive-deps */</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { createContext, useContext } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Types</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> StepperOrientation</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'horizontal'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'vertical'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> StepState</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'active'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'completed'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'inactive'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'loading'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> StepIndicators</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  active</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  completed</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  inactive</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  loading</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> StepperContextValue</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  activeStep</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  setActiveStep</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">step</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  stepsCount</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  orientation</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> StepperOrientation</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  registerTrigger</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">node</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> HTMLButtonElement</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  triggerNodes</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> HTMLButtonElement</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  focusNext</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">currentIdx</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  focusPrev</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">currentIdx</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  focusFirst</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  focusLast</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  indicators</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> StepIndicators</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> StepItemContextValue</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  step</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  state</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> StepState</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  isDisabled</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  isLoading</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> StepperContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> createContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">StepperContextValue</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> StepItemContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> createContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">StepItemContextValue</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> useStepper</span><span style=\"color:#E6EDF3\">() {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> ctx</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useContext</span><span style=\"color:#E6EDF3\">(StepperContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">ctx) </span><span style=\"color:#FF7B72\">throw</span><span style=\"color:#FF7B72\"> new</span><span style=\"color:#D2A8FF\"> Error</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'useStepper must be used within a Stepper'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> ctx;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> useStepItem</span><span style=\"color:#E6EDF3\">() {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> ctx</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useContext</span><span style=\"color:#E6EDF3\">(StepItemContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">ctx) </span><span style=\"color:#FF7B72\">throw</span><span style=\"color:#FF7B72\"> new</span><span style=\"color:#D2A8FF\"> Error</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'useStepItem must be used within a StepperItem'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> ctx;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> StepperProps</span><span style=\"color:#FF7B72\"> extends</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#79C0FF\">HTMLAttributes</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLDivElement</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  defaultValue</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  value</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onValueChange</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  orientation</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> StepperOrientation</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  indicators</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> StepIndicators</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> Stepper</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  defaultValue</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  value</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onValueChange</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  orientation</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'horizontal'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  indicators</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {},</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> StepperProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">activeStep</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setActiveStep</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useState</span><span style=\"color:#E6EDF3\">(defaultValue);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">triggerNodes</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setTriggerNodes</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useState</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLButtonElement</span><span style=\"color:#E6EDF3\">[]>([]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Register/unregister triggers</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> registerTrigger</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useCallback</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">node</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> HTMLButtonElement</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setTriggerNodes</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">prev</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (node </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">prev.</span><span style=\"color:#D2A8FF\">includes</span><span style=\"color:#E6EDF3\">(node)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">prev, node];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">node </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> prev.</span><span style=\"color:#D2A8FF\">includes</span><span style=\"color:#E6EDF3\">(node</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> prev.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">n</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> n </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#E6EDF3\"> node);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> prev;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, []);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> handleSetActiveStep</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">step</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (value </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setActiveStep</span><span style=\"color:#E6EDF3\">(step);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      onValueChange</span><span style=\"color:#E6EDF3\">?.(step);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [value, onValueChange],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> currentStep</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> value </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#E6EDF3\"> activeStep;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Keyboard navigation logic</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> focusTrigger</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">idx</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (triggerNodes[idx]) triggerNodes[idx].</span><span style=\"color:#D2A8FF\">focus</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> focusNext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">currentIdx</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> focusTrigger</span><span style=\"color:#E6EDF3\">((currentIdx </span><span style=\"color:#FF7B72\">+</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">%</span><span style=\"color:#E6EDF3\"> triggerNodes.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> focusPrev</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">currentIdx</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> focusTrigger</span><span style=\"color:#E6EDF3\">((currentIdx </span><span style=\"color:#FF7B72\">-</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#FF7B72\"> +</span><span style=\"color:#E6EDF3\"> triggerNodes.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">%</span><span style=\"color:#E6EDF3\"> triggerNodes.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> focusFirst</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> focusTrigger</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> focusLast</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> focusTrigger</span><span style=\"color:#E6EDF3\">(triggerNodes.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Context value</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> contextValue</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useMemo</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">StepperContextValue</span><span style=\"color:#E6EDF3\">>(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> ({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      activeStep: currentStep,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      setActiveStep: handleSetActiveStep,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      stepsCount: React.Children.</span><span style=\"color:#D2A8FF\">toArray</span><span style=\"color:#E6EDF3\">(children).</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        (</span><span style=\"color:#FFA657\">child</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> child</span><span style=\"color:#FF7B72\"> is</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactElement</span><span style=\"color:#FF7B72\"> =></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          React.</span><span style=\"color:#D2A8FF\">isValidElement</span><span style=\"color:#E6EDF3\">(child) </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (child.type </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">displayName</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\"> }).displayName </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'StepperItem'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ).</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      orientation,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      registerTrigger,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      focusNext,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      focusPrev,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      focusFirst,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      focusLast,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      triggerNodes,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      indicators,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [currentStep, handleSetActiveStep, children, orientation, registerTrigger, triggerNodes],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">StepperContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">contextValue</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"tablist\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        aria-orientation</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">orientation</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-full'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-orientation</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">orientation</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">StepperContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> StepperItemProps</span><span style=\"color:#FF7B72\"> extends</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#79C0FF\">HTMLAttributes</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLDivElement</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  step</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  completed</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  disabled</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  loading</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> StepperItem</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  step</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  completed</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  disabled</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  loading</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> StepperItemProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">activeStep</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepper</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> state</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> StepState</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> completed </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> step </span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#E6EDF3\"> activeStep </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'completed'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#E6EDF3\"> activeStep </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> step </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'active'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'inactive'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isLoading</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> loading </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> step </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> activeStep;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">StepItemContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ step, state, isDisabled: disabled, isLoading }</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper-item\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'group/step flex items-center justify-center group-data-[orientation=horizontal]/stepper-nav:flex-row group-data-[orientation=vertical]/stepper-nav:flex-col not-last:flex-1'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">state</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {...</span><span style=\"color:#E6EDF3\">(isLoading </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#A5D6FF\">'data-loading'</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {})</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">StepItemContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> StepperTriggerProps</span><span style=\"color:#FF7B72\"> extends</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#79C0FF\">ButtonHTMLAttributes</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLButtonElement</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  asChild</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> StepperTrigger</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">asChild</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">tabIndex</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> StepperTriggerProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">state</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isLoading</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepItem</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> stepperCtx</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useStepper</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">setActiveStep</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">activeStep</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">registerTrigger</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">triggerNodes</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">focusNext</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">focusPrev</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">focusFirst</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">focusLast</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    stepperCtx;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">step</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isDisabled</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepItem</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isSelected</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> activeStep </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> step;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> id</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> `stepper-tab-${</span><span style=\"color:#E6EDF3\">step</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> panelId</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> `stepper-panel-${</span><span style=\"color:#E6EDF3\">step</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Register this trigger for keyboard navigation</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> btnRef</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLButtonElement</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  React.</span><span style=\"color:#D2A8FF\">useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (btnRef.current) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      registerTrigger</span><span style=\"color:#E6EDF3\">(btnRef.current);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [btnRef.current]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Find our index among triggers for navigation</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> myIdx</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useMemo</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> triggerNodes.</span><span style=\"color:#D2A8FF\">findIndex</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">n</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> HTMLButtonElement</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> n </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> btnRef.current),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [triggerNodes, btnRef.current],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> handleKeyDown</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">e</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">KeyboardEvent</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLButtonElement</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    switch</span><span style=\"color:#E6EDF3\"> (e.key) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> 'ArrowRight'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> 'ArrowDown'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        e.</span><span style=\"color:#D2A8FF\">preventDefault</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (myIdx </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\">1</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> focusNext) </span><span style=\"color:#D2A8FF\">focusNext</span><span style=\"color:#E6EDF3\">(myIdx);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        break</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> 'ArrowLeft'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> 'ArrowUp'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        e.</span><span style=\"color:#D2A8FF\">preventDefault</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (myIdx </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\">1</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> focusPrev) </span><span style=\"color:#D2A8FF\">focusPrev</span><span style=\"color:#E6EDF3\">(myIdx);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        break</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> 'Home'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        e.</span><span style=\"color:#D2A8FF\">preventDefault</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (focusFirst) </span><span style=\"color:#D2A8FF\">focusFirst</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        break</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> 'End'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        e.</span><span style=\"color:#D2A8FF\">preventDefault</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (focusLast) </span><span style=\"color:#D2A8FF\">focusLast</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        break</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> 'Enter'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> ' '</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        e.</span><span style=\"color:#D2A8FF\">preventDefault</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setActiveStep</span><span style=\"color:#E6EDF3\">(step);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        break</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (asChild) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper-trigger\"</span><span style=\"color:#79C0FF\"> data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">state</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">className</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">button</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">btnRef</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      role</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"tab\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      id</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">id</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      aria-selected</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isSelected</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      aria-controls</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">panelId</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      tabIndex</span><span style=\"color:#FF7B72\">={typeof</span><span style=\"color:#E6EDF3\"> tabIndex </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> tabIndex </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> isSelected </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\">1</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper-trigger\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">state</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-loading</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isLoading</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'cursor-pointer focus-visible:border-ring focus-visible:ring-ring/50 inline-flex items-center gap-3 rounded-full outline-none focus-visible:z-10 focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-60'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onClick</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> setActiveStep</span><span style=\"color:#E6EDF3\">(step)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onKeyDown</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleKeyDown</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      disabled</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isDisabled</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">button</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> StepperIndicator</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">state</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isLoading</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepItem</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">indicators</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepper</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper-indicator\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">state</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'relative flex items-center overflow-hidden justify-center size-6 shrink-0 border-background bg-accent text-accent-foreground rounded-full text-xs data-[state=completed]:bg-primary data-[state=completed]:text-primary-foreground data-[state=active]:bg-primary data-[state=active]:text-primary-foreground'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"absolute\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">indicators </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ((isLoading </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> indicators.loading) </span><span style=\"color:#FF7B72\">||</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          (state </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'completed'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> indicators.completed) </span><span style=\"color:#FF7B72\">||</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          (state </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'active'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> indicators.active) </span><span style=\"color:#FF7B72\">||</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          (state </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'inactive'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> indicators.inactive))</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          ?</span><span style=\"color:#E6EDF3\"> (isLoading </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> indicators.loading) </span><span style=\"color:#FF7B72\">||</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            (state </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'completed'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> indicators.completed) </span><span style=\"color:#FF7B72\">||</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            (state </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'active'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> indicators.active) </span><span style=\"color:#FF7B72\">||</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            (state </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'inactive'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> indicators.inactive)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          :</span><span style=\"color:#E6EDF3\"> children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> StepperSeparator</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">state</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepItem</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper-separator\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">state</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'm-0.5 rounded-full bg-muted group-data-[orientation=vertical]/stepper-nav:h-12 group-data-[orientation=vertical]/stepper-nav:w-0.5 group-data-[orientation=horizontal]/stepper-nav:h-0.5 group-data-[orientation=horizontal]/stepper-nav:flex-1'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> StepperTitle</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'h3'</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">state</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepItem</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">h3</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper-title\"</span><span style=\"color:#79C0FF\"> data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">state</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'text-sm font-medium leading-none'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">h3</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> StepperDescription</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">state</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepItem</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper-description\"</span><span style=\"color:#79C0FF\"> data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">state</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'text-sm text-muted-foreground'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> StepperNav</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'nav'</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">activeStep</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">orientation</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepper</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">nav</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper-nav\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">activeStep</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-orientation</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">orientation</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'group/stepper-nav inline-flex data-[orientation=horizontal]:w-full data-[orientation=horizontal]:flex-row data-[orientation=vertical]:flex-col'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">nav</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> StepperPanel</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">activeStep</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepper</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper-panel\"</span><span style=\"color:#79C0FF\"> data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">activeStep</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-full'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> StepperContentProps</span><span style=\"color:#FF7B72\"> extends</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#79C0FF\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  forceMount</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> StepperContent</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">value</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">forceMount</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> StepperContentProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">activeStep</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useStepper</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isActive</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> value </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> activeStep;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">forceMount </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">isActive) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"stepper-content\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">activeStep</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-full'</span><span style=\"color:#E6EDF3\">, className, </span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">isActive </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> forceMount </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'hidden'</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      hidden</span><span style=\"color:#FF7B72\">={!</span><span style=\"color:#E6EDF3\">isActive </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> forceMount</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  useStepper,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  useStepItem,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  Stepper,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  StepperItem,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  StepperTrigger,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  StepperIndicator,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  StepperSeparator,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  StepperTitle,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  StepperDescription,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  StepperPanel,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  StepperContent,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  StepperNav,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  type</span><span style=\"color:#E6EDF3\"> StepperProps,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  type</span><span style=\"color:#E6EDF3\"> StepperItemProps,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  type</span><span style=\"color:#E6EDF3\"> StepperTriggerProps,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  type</span><span style=\"color:#E6EDF3\"> StepperContentProps,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/stepper.tsx",
    "timestamp": "2025-08-21T11:53:06.779Z"
  }
}