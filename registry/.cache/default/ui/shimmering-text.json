{
  "shimmering-text": {
    "code": "'use client';\n\nimport React, { useMemo, useRef } from 'react';\nimport { motion, useInView, UseInViewOptions } from 'motion/react';\nimport { cn } from '@/lib/utils';\n\ninterface ShimmeringTextProps {\n  /** Text to display with shimmer effect */\n  text: string;\n  /** Animation duration in seconds */\n  duration?: number;\n  /** Delay before starting animation */\n  delay?: number;\n  /** Whether to repeat the animation */\n  repeat?: boolean;\n  /** Pause duration between repeats in seconds */\n  repeatDelay?: number;\n  /** Custom className */\n  className?: string;\n  /** Whether to start animation when component enters viewport */\n  startOnView?: boolean;\n  /** Whether to animate only once */\n  once?: boolean;\n  /** Margin for in-view detection (rootMargin) */\n  inViewMargin?: UseInViewOptions['margin'];\n  /** Shimmer spread multiplier */\n  spread?: number;\n  /** Base text color */\n  color?: string;\n  /** Shimmer gradient color */\n  shimmerColor?: string;\n}\n\nexport function ShimmeringText({\n  text,\n  duration = 2,\n  delay = 0,\n  repeat = true,\n  repeatDelay = 0.5,\n  className,\n  startOnView = true,\n  once = false,\n  inViewMargin,\n  spread = 2,\n  color,\n  shimmerColor,\n}: ShimmeringTextProps) {\n  const ref = useRef<HTMLSpanElement>(null);\n  const isInView = useInView(ref, { once, margin: inViewMargin });\n\n  // Calculate dynamic spread based on text length\n  const dynamicSpread = useMemo(() => {\n    return text.length * spread;\n  }, [text, spread]);\n\n  // Determine if we should start animation\n  const shouldAnimate = !startOnView || isInView;\n\n  return (\n    <motion.span\n      ref={ref}\n      className={cn(\n        'relative inline-block bg-[length:250%_100%,auto] bg-clip-text text-transparent',\n        '[--base-color:var(--color-zinc-400)] [--shimmer-color:var(--color-zinc-950)]',\n        '[background-repeat:no-repeat,padding-box]',\n        '[--shimmer-bg:linear-gradient(90deg,transparent_calc(50%-var(--spread)),var(--shimmer-color),transparent_calc(50%+var(--spread)))]',\n        'dark:[--base-color:var(--color-zinc-600)] dark:[--shimmer-color:var(--color-white)]',\n        className,\n      )}\n      style={\n        {\n          '--spread': `${dynamicSpread}px`,\n          ...(color && { '--base-color': color }),\n          ...(shimmerColor && { '--shimmer-color': shimmerColor }),\n          backgroundImage: `var(--shimmer-bg), linear-gradient(var(--base-color), var(--base-color))`,\n        } as React.CSSProperties\n      }\n      initial={{\n        backgroundPosition: '100% center',\n        opacity: 0,\n      }}\n      animate={\n        shouldAnimate\n          ? {\n              backgroundPosition: '0% center',\n              opacity: 1,\n            }\n          : {}\n      }\n      transition={{\n        backgroundPosition: {\n          repeat: repeat ? Infinity : 0,\n          duration,\n          delay,\n          repeatDelay,\n          ease: 'linear',\n        },\n        opacity: {\n          duration: 0.3,\n          delay,\n        },\n      }}\n    >\n      {text}\n    </motion.span>\n  );\n}\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> React, { useMemo, useRef } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { motion, useInView, UseInViewOptions } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'motion/react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> ShimmeringTextProps</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Text to display with shimmer effect */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  text</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Animation duration in seconds */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  duration</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Delay before starting animation */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  delay</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to repeat the animation */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  repeat</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Pause duration between repeats in seconds */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  repeatDelay</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Custom className */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to start animation when component enters viewport */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  startOnView</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Whether to animate only once */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  once</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Margin for in-view detection (rootMargin) */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  inViewMargin</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> UseInViewOptions</span><span style=\"color:#E6EDF3\">[</span><span style=\"color:#A5D6FF\">'margin'</span><span style=\"color:#E6EDF3\">];</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Shimmer spread multiplier */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  spread</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Base text color */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  color</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /** Shimmer gradient color */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  shimmerColor</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> function</span><span style=\"color:#D2A8FF\"> ShimmeringText</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  text</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  duration</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 2</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  delay</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  repeat</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  repeatDelay</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 0.5</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  startOnView</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  once</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  inViewMargin</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  spread</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 2</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  color</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  shimmerColor</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ShimmeringTextProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> ref</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLSpanElement</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isInView</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useInView</span><span style=\"color:#E6EDF3\">(ref, { once, margin: inViewMargin });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Calculate dynamic spread based on text length</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> dynamicSpread</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useMemo</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> text.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> *</span><span style=\"color:#E6EDF3\"> spread;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [text, spread]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Determine if we should start animation</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> shouldAnimate</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">startOnView </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> isInView;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">motion.span</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">ref</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'relative inline-block bg-[length:250%_100%,auto] bg-clip-text text-transparent'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        '[--base-color:var(--color-zinc-400)] [--shimmer-color:var(--color-zinc-950)]'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        '[background-repeat:no-repeat,padding-box]'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        '[--shimmer-bg:linear-gradient(90deg,transparent_calc(50%-var(--spread)),var(--shimmer-color),transparent_calc(50%+var(--spread)))]'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'dark:[--base-color:var(--color-zinc-600)] dark:[--shimmer-color:var(--color-white)]'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      style</span><span style=\"color:#FF7B72\">={</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        {</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          '--spread'</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#A5D6FF\">`${</span><span style=\"color:#E6EDF3\">dynamicSpread</span><span style=\"color:#A5D6FF\">}px`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          ...</span><span style=\"color:#E6EDF3\">(color </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#A5D6FF\">'--base-color'</span><span style=\"color:#E6EDF3\">: color }),</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          ...</span><span style=\"color:#E6EDF3\">(shimmerColor </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#A5D6FF\">'--shimmer-color'</span><span style=\"color:#E6EDF3\">: shimmerColor }),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          backgroundImage: </span><span style=\"color:#A5D6FF\">`var(--shimmer-bg), linear-gradient(var(--base-color), var(--base-color))`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        } </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">CSSProperties</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      }</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      initial</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        backgroundPosition: </span><span style=\"color:#A5D6FF\">'100% center'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        opacity: </span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      animate</span><span style=\"color:#FF7B72\">={</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        shouldAnimate</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          ?</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              backgroundPosition: </span><span style=\"color:#A5D6FF\">'0% center'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              opacity: </span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          :</span><span style=\"color:#E6EDF3\"> {}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      }</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      transition</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        backgroundPosition: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          repeat: repeat </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> Infinity</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          duration,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          delay,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          repeatDelay,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ease: </span><span style=\"color:#A5D6FF\">'linear'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        opacity: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          duration: </span><span style=\"color:#79C0FF\">0.3</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          delay,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">text</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">motion.span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/shimmering-text.tsx",
    "timestamp": "2025-08-21T11:53:06.628Z"
  }
}