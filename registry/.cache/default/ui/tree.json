{
  "tree": {
    "code": "/* eslint-disable @typescript-eslint/no-explicit-any */\n'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/lib/utils';\nimport { ItemInstance } from '@headless-tree/core';\nimport { ChevronDownIcon, SquareMinus, SquarePlus } from 'lucide-react';\nimport { Slot as SlotPrimitive } from 'radix-ui';\n\ntype ToggleIconType = 'chevron' | 'plus-minus';\n\ninterface TreeContextValue<T = any> {\n  indent: number;\n  currentItem?: ItemInstance<T>;\n  tree?: any;\n  toggleIconType?: ToggleIconType;\n}\n\nconst TreeContext = React.createContext<TreeContextValue>({\n  indent: 20,\n  currentItem: undefined,\n  tree: undefined,\n  toggleIconType: 'plus-minus',\n});\n\nfunction useTreeContext<T = any>() {\n  return React.useContext(TreeContext) as TreeContextValue<T>;\n}\n\ninterface TreeProps extends React.HTMLAttributes<HTMLDivElement> {\n  indent?: number;\n  tree?: any;\n  toggleIconType?: ToggleIconType;\n}\n\nfunction Tree({ indent = 20, tree, className, toggleIconType = 'chevron', ...props }: TreeProps) {\n  const containerProps = tree && typeof tree.getContainerProps === 'function' ? tree.getContainerProps() : {};\n  const mergedProps = { ...props, ...containerProps };\n\n  // Extract style from mergedProps to merge with our custom styles\n  const { style: propStyle, ...otherProps } = mergedProps;\n\n  // Merge styles\n  const mergedStyle = {\n    ...propStyle,\n    '--tree-indent': `${indent}px`,\n  } as React.CSSProperties;\n\n  return (\n    <TreeContext.Provider value={{ indent, tree, toggleIconType }}>\n      <div data-slot=\"tree\" style={mergedStyle} className={cn('flex flex-col', className)} {...otherProps} />\n    </TreeContext.Provider>\n  );\n}\n\ninterface TreeItemProps<T = any> extends React.HTMLAttributes<HTMLButtonElement> {\n  item: ItemInstance<T>;\n  indent?: number;\n  asChild?: boolean;\n}\n\nfunction TreeItem<T = any>({ item, className, asChild, children, ...props }: Omit<TreeItemProps<T>, 'indent'>) {\n  const parentContext = useTreeContext<T>();\n  const { indent } = parentContext;\n\n  const itemProps = typeof item.getProps === 'function' ? item.getProps() : {};\n  const mergedProps = { ...props, ...itemProps };\n\n  // Extract style from mergedProps to merge with our custom styles\n  const { style: propStyle, ...otherProps } = mergedProps;\n\n  // Merge styles\n  const mergedStyle = {\n    ...propStyle,\n    '--tree-padding': `${item.getItemMeta().level * indent}px`,\n  } as React.CSSProperties;\n\n  const Comp = asChild ? SlotPrimitive.Slot : 'button';\n\n  return (\n    <TreeContext.Provider value={{ ...parentContext, currentItem: item }}>\n      <Comp\n        data-slot=\"tree-item\"\n        style={mergedStyle}\n        className={cn(\n          'z-10 ps-(--tree-padding) outline-hidden select-none not-last:pb-0.5 focus:z-20 data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n          className,\n        )}\n        data-focus={typeof item.isFocused === 'function' ? item.isFocused() || false : undefined}\n        data-folder={typeof item.isFolder === 'function' ? item.isFolder() || false : undefined}\n        data-selected={typeof item.isSelected === 'function' ? item.isSelected() || false : undefined}\n        data-drag-target={typeof item.isDragTarget === 'function' ? item.isDragTarget() || false : undefined}\n        data-search-match={typeof item.isMatchingSearch === 'function' ? item.isMatchingSearch() || false : undefined}\n        aria-expanded={item.isExpanded()}\n        {...otherProps}\n      >\n        {children}\n      </Comp>\n    </TreeContext.Provider>\n  );\n}\n\ninterface TreeItemLabelProps<T = any> extends React.HTMLAttributes<HTMLSpanElement> {\n  item?: ItemInstance<T>;\n}\n\nfunction TreeItemLabel<T = any>({ item: propItem, children, className, ...props }: TreeItemLabelProps<T>) {\n  const { currentItem, toggleIconType } = useTreeContext<T>();\n  const item = propItem || currentItem;\n\n  if (!item) {\n    console.warn('TreeItemLabel: No item provided via props or context');\n    return null;\n  }\n\n  return (\n    <span\n      data-slot=\"tree-item-label\"\n      className={cn(\n        'in-focus-visible:ring-ring/50 bg-background hover:bg-accent in-data-[selected=true]:bg-accent in-data-[selected=true]:text-accent-foreground in-data-[drag-target=true]:bg-accent flex items-center gap-1 rounded-sm px-2 py-1.5 text-sm transition-colors not-in-data-[folder=true]:ps-7 in-focus-visible:ring-[3px] in-data-[search-match=true]:bg-blue-50! [&_svg]:pointer-events-none [&_svg]:shrink-0',\n        className,\n      )}\n      {...props}\n    >\n      {item.isFolder() &&\n        (toggleIconType === 'plus-minus' ? (\n          item.isExpanded() ? (\n            <SquareMinus className=\"text-muted-foreground size-3.5\" stroke=\"currentColor\" strokeWidth=\"1\" />\n          ) : (\n            <SquarePlus className=\"text-muted-foreground size-3.5\" stroke=\"currentColor\" strokeWidth=\"1\" />\n          )\n        ) : (\n          <ChevronDownIcon className=\"text-muted-foreground size-4 in-aria-[expanded=false]:-rotate-90\" />\n        ))}\n      {children || (typeof item.getItemName === 'function' ? item.getItemName() : null)}\n    </span>\n  );\n}\n\nfunction TreeDragLine({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  const { tree } = useTreeContext();\n\n  if (!tree || typeof tree.getDragLineStyle !== 'function') {\n    console.warn('TreeDragLine: No tree provided via context or tree does not have getDragLineStyle method');\n    return null;\n  }\n\n  const dragLine = tree.getDragLineStyle();\n  return (\n    <div\n      style={dragLine}\n      className={cn(\n        'bg-primary before:bg-background before:border-primary absolute z-30 -mt-px h-0.5 w-[unset] before:absolute before:-top-[3px] before:left-0 before:size-2 before:rounded-full before:border-2',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Tree, TreeItem, TreeItemLabel, TreeDragLine };\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#8B949E\">/* eslint-disable @typescript-eslint/no-explicit-any */</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { ItemInstance } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@headless-tree/core'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { ChevronDownIcon, SquareMinus, SquarePlus } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'lucide-react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Slot </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#E6EDF3\"> SlotPrimitive } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'radix-ui'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> ToggleIconType</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'chevron'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'plus-minus'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> TreeContextValue</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> any</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  indent</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  currentItem</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> ItemInstance</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  tree</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> any</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  toggleIconType</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> ToggleIconType</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> TreeContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">createContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TreeContextValue</span><span style=\"color:#E6EDF3\">>({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  indent: </span><span style=\"color:#79C0FF\">20</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  currentItem: </span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  tree: </span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  toggleIconType: </span><span style=\"color:#A5D6FF\">'plus-minus'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> useTreeContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> any</span><span style=\"color:#E6EDF3\">>() {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(TreeContext) </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> TreeContextValue</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> TreeProps</span><span style=\"color:#FF7B72\"> extends</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#79C0FF\">HTMLAttributes</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLDivElement</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  indent</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  tree</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> any</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  toggleIconType</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> ToggleIconType</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> Tree</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">indent</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 20</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">tree</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">toggleIconType</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'chevron'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> TreeProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> containerProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> tree </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> tree.getContainerProps </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'function'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> tree.</span><span style=\"color:#D2A8FF\">getContainerProps</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {};</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> mergedProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">props, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">containerProps };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Extract style from mergedProps to merge with our custom styles</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">style</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#79C0FF\">propStyle</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#79C0FF\">otherProps</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> mergedProps;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Merge styles</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> mergedStyle</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    ...</span><span style=\"color:#E6EDF3\">propStyle,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    '--tree-indent'</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#A5D6FF\">`${</span><span style=\"color:#E6EDF3\">indent</span><span style=\"color:#A5D6FF\">}px`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  } </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">CSSProperties</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">TreeContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ indent, tree, toggleIconType }</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"tree\"</span><span style=\"color:#79C0FF\"> style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">mergedStyle</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'flex flex-col'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FF7B72\"> {...</span><span style=\"color:#E6EDF3\">otherProps</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">TreeContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> TreeItemProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> any</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">extends</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#79C0FF\">HTMLAttributes</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLButtonElement</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  item</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ItemInstance</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  indent</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  asChild</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> TreeItem</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> any</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">asChild</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Omit</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TreeItemProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>, </span><span style=\"color:#A5D6FF\">'indent'</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> parentContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useTreeContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">indent</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> parentContext;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> itemProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> item.getProps </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'function'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> item.</span><span style=\"color:#D2A8FF\">getProps</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {};</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> mergedProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">props, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">itemProps };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Extract style from mergedProps to merge with our custom styles</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">style</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#79C0FF\">propStyle</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#79C0FF\">otherProps</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> mergedProps;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Merge styles</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> mergedStyle</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    ...</span><span style=\"color:#E6EDF3\">propStyle,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    '--tree-padding'</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#A5D6FF\">`${</span><span style=\"color:#E6EDF3\">item</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#D2A8FF\">getItemMeta</span><span style=\"color:#A5D6FF\">().</span><span style=\"color:#E6EDF3\">level</span><span style=\"color:#FF7B72\"> *</span><span style=\"color:#E6EDF3\"> indent</span><span style=\"color:#A5D6FF\">}px`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  } </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">CSSProperties</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> Comp</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> asChild </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> SlotPrimitive.Slot </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'button'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">TreeContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">parentContext, currentItem: item }</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">Comp</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"tree-item\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">mergedStyle</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'z-10 ps-(--tree-padding) outline-hidden select-none not-last:pb-0.5 focus:z-20 data-[disabled]:pointer-events-none data-[disabled]:opacity-50'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-focus</span><span style=\"color:#FF7B72\">={typeof</span><span style=\"color:#E6EDF3\"> item.isFocused </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'function'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> item.</span><span style=\"color:#D2A8FF\">isFocused</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-folder</span><span style=\"color:#FF7B72\">={typeof</span><span style=\"color:#E6EDF3\"> item.isFolder </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'function'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> item.</span><span style=\"color:#D2A8FF\">isFolder</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-selected</span><span style=\"color:#FF7B72\">={typeof</span><span style=\"color:#E6EDF3\"> item.isSelected </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'function'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> item.</span><span style=\"color:#D2A8FF\">isSelected</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-drag-target</span><span style=\"color:#FF7B72\">={typeof</span><span style=\"color:#E6EDF3\"> item.isDragTarget </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'function'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> item.</span><span style=\"color:#D2A8FF\">isDragTarget</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-search-match</span><span style=\"color:#FF7B72\">={typeof</span><span style=\"color:#E6EDF3\"> item.isMatchingSearch </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'function'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> item.</span><span style=\"color:#D2A8FF\">isMatchingSearch</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        aria-expanded</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">item.</span><span style=\"color:#D2A8FF\">isExpanded</span><span style=\"color:#E6EDF3\">()</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {...</span><span style=\"color:#E6EDF3\">otherProps</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">Comp</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">TreeContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> TreeItemLabelProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> any</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">extends</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#79C0FF\">HTMLAttributes</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLSpanElement</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  item</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> ItemInstance</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> TreeItemLabel</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> any</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FFA657\">propItem</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> TreeItemLabelProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">currentItem</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">toggleIconType</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useTreeContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> item</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> propItem </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> currentItem;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">item) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    console.</span><span style=\"color:#D2A8FF\">warn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'TreeItemLabel: No item provided via props or context'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">span</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"tree-item-label\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'in-focus-visible:ring-ring/50 bg-background hover:bg-accent in-data-[selected=true]:bg-accent in-data-[selected=true]:text-accent-foreground in-data-[drag-target=true]:bg-accent flex items-center gap-1 rounded-sm px-2 py-1.5 text-sm transition-colors not-in-data-[folder=true]:ps-7 in-focus-visible:ring-[3px] in-data-[search-match=true]:bg-blue-50! [&#x26;_svg]:pointer-events-none [&#x26;_svg]:shrink-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">item.</span><span style=\"color:#D2A8FF\">isFolder</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        (toggleIconType </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'plus-minus'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          item.</span><span style=\"color:#D2A8FF\">isExpanded</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">SquareMinus</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-muted-foreground size-3.5\"</span><span style=\"color:#79C0FF\"> stroke</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"currentColor\"</span><span style=\"color:#79C0FF\"> strokeWidth</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"1\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">SquarePlus</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-muted-foreground size-3.5\"</span><span style=\"color:#79C0FF\"> stroke</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"currentColor\"</span><span style=\"color:#79C0FF\"> strokeWidth</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"1\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          )</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">ChevronDownIcon</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-muted-foreground size-4 in-aria-[expanded=false]:-rotate-90\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> item.getItemName </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'function'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> item.</span><span style=\"color:#D2A8FF\">getItemName</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> TreeDragLine</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">HTMLAttributes</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLDivElement</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">tree</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useTreeContext</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">tree </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> tree.getDragLineStyle </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#A5D6FF\"> 'function'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    console.</span><span style=\"color:#D2A8FF\">warn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'TreeDragLine: No tree provided via context or tree does not have getDragLineStyle method'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> dragLine</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> tree.</span><span style=\"color:#D2A8FF\">getDragLineStyle</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">dragLine</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'bg-primary before:bg-background before:border-primary absolute z-30 -mt-px h-0.5 w-[unset] before:absolute before:-top-[3px] before:left-0 before:size-2 before:rounded-full before:border-2'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> { Tree, TreeItem, TreeItemLabel, TreeDragLine };</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/tree.tsx",
    "timestamp": "2025-08-21T11:53:07.006Z"
  }
}