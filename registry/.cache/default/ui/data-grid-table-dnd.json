{
  "data-grid-table-dnd": {
    "code": "import { CSSProperties, Fragment, useId } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { useDataGrid } from '@/components/ui/data-grid';\nimport {\n  DataGridTableBase,\n  DataGridTableBody,\n  DataGridTableBodyRow,\n  DataGridTableBodyRowCell,\n  DataGridTableBodyRowExpandded,\n  DataGridTableBodyRowSkeleton,\n  DataGridTableBodyRowSkeletonCell,\n  DataGridTableEmpty,\n  DataGridTableHead,\n  DataGridTableHeadRow,\n  DataGridTableHeadRowCell,\n  DataGridTableHeadRowCellResize,\n  DataGridTableRowSpacer,\n} from '@/components/ui/data-grid-table';\nimport {\n  closestCenter,\n  DndContext,\n  KeyboardSensor,\n  MouseSensor,\n  TouchSensor,\n  useSensor,\n  useSensors,\n  type DragEndEvent,\n} from '@dnd-kit/core';\nimport { restrictToParentElement } from '@dnd-kit/modifiers';\nimport { horizontalListSortingStrategy, SortableContext, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Cell, flexRender, Header, HeaderGroup, Row } from '@tanstack/react-table';\nimport { GripVertical } from 'lucide-react';\n\nfunction DataGridTableDndHeader<TData>({ header }: { header: Header<TData, unknown> }) {\n  const { props } = useDataGrid();\n  const { column } = header;\n\n  const { attributes, isDragging, listeners, setNodeRef, transform, transition } = useSortable({\n    id: header.column.id,\n  });\n\n  const style: CSSProperties = {\n    opacity: isDragging ? 0.8 : 1,\n    position: 'relative',\n    transform: CSS.Translate.toString(transform),\n    transition,\n    whiteSpace: 'nowrap',\n    width: header.column.getSize(),\n    zIndex: isDragging ? 1 : 0,\n  };\n\n  return (\n    <DataGridTableHeadRowCell header={header} dndStyle={style} dndRef={setNodeRef}>\n      <div className=\"flex items-center justify-start gap-0.5\">\n        <Button\n          mode=\"icon\"\n          size=\"sm\"\n          variant=\"dim\"\n          className=\"-ms-2 size-6\"\n          {...attributes}\n          {...listeners}\n          aria-label=\"Drag to reorder\"\n        >\n          <GripVertical className=\"opacity-50\" aria-hidden=\"true\" />\n        </Button>\n        {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}\n        {props.tableLayout?.columnsResizable && column.getCanResize() && (\n          <DataGridTableHeadRowCellResize header={header} />\n        )}\n      </div>\n    </DataGridTableHeadRowCell>\n  );\n}\n\nfunction DataGridTableDndCell<TData>({ cell }: { cell: Cell<TData, unknown> }) {\n  const { isDragging, setNodeRef, transform, transition } = useSortable({\n    id: cell.column.id,\n  });\n\n  const style: CSSProperties = {\n    opacity: isDragging ? 0.8 : 1,\n    position: 'relative',\n    transform: CSS.Translate.toString(transform),\n    transition,\n    width: cell.column.getSize(),\n    zIndex: isDragging ? 1 : 0,\n  };\n\n  return (\n    <DataGridTableBodyRowCell cell={cell} dndStyle={style} dndRef={setNodeRef}>\n      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n    </DataGridTableBodyRowCell>\n  );\n}\n\nfunction DataGridTableDnd<TData>({ handleDragEnd }: { handleDragEnd: (event: DragEndEvent) => void }) {\n  const { table, isLoading, props } = useDataGrid();\n  const pagination = table.getState().pagination;\n\n  const sensors = useSensors(useSensor(MouseSensor, {}), useSensor(TouchSensor, {}), useSensor(KeyboardSensor, {}));\n\n  return (\n    <DndContext\n      id={useId()}\n      collisionDetection={closestCenter}\n      modifiers={[restrictToParentElement]}\n      onDragEnd={handleDragEnd}\n      sensors={sensors}\n    >\n      <div className=\"relative\">\n        <DataGridTableBase>\n          <DataGridTableHead>\n            {table.getHeaderGroups().map((headerGroup: HeaderGroup<TData>, index) => {\n              console.log('table.getState().columnOrder:', table.getState().columnOrder);\n\n              return (\n                <DataGridTableHeadRow headerGroup={headerGroup} key={index}>\n                  <SortableContext items={table.getState().columnOrder} strategy={horizontalListSortingStrategy}>\n                    {headerGroup.headers.map((header, index) => (\n                      <DataGridTableDndHeader header={header} key={index} />\n                    ))}\n                  </SortableContext>\n                </DataGridTableHeadRow>\n              );\n            })}\n          </DataGridTableHead>\n\n          {(props.tableLayout?.stripped || !props.tableLayout?.rowBorder) && <DataGridTableRowSpacer />}\n\n          <DataGridTableBody>\n            {props.loadingMode === 'skeleton' && isLoading && pagination?.pageSize ? (\n              Array.from({ length: pagination.pageSize }).map((_, rowIndex) => (\n                <DataGridTableBodyRowSkeleton key={rowIndex}>\n                  {table.getVisibleFlatColumns().map((column, colIndex) => {\n                    return (\n                      <DataGridTableBodyRowSkeletonCell column={column} key={colIndex}>\n                        {column.columnDef.meta?.skeleton}\n                      </DataGridTableBodyRowSkeletonCell>\n                    );\n                  })}\n                </DataGridTableBodyRowSkeleton>\n              ))\n            ) : table.getRowModel().rows.length ? (\n              table.getRowModel().rows.map((row: Row<TData>, index) => {\n                return (\n                  <Fragment key={row.id}>\n                    <DataGridTableBodyRow row={row} key={index}>\n                      {row.getVisibleCells().map((cell: Cell<TData, unknown>) => {\n                        return (\n                          <SortableContext\n                            key={cell.id}\n                            items={table.getState().columnOrder}\n                            strategy={horizontalListSortingStrategy}\n                          >\n                            <DataGridTableDndCell cell={cell} />\n                          </SortableContext>\n                        );\n                      })}\n                    </DataGridTableBodyRow>\n                    {row.getIsExpanded() && <DataGridTableBodyRowExpandded row={row} />}\n                  </Fragment>\n                );\n              })\n            ) : (\n              <DataGridTableEmpty />\n            )}\n          </DataGridTableBody>\n        </DataGridTableBase>\n      </div>\n    </DndContext>\n  );\n}\n\nexport { DataGridTableDnd };\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { CSSProperties, Fragment, useId } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Button } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/button'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { useDataGrid } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/data-grid'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBase,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBody,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRow,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowCell,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowExpandded,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowSkeleton,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowSkeletonCell,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableEmpty,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHead,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHeadRow,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHeadRowCell,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHeadRowCellResize,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableRowSpacer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">} </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/data-grid-table'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  closestCenter,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DndContext,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  KeyboardSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  MouseSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  TouchSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  useSensor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  useSensors,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  type</span><span style=\"color:#E6EDF3\"> DragEndEvent,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">} </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/core'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { restrictToParentElement } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/modifiers'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { horizontalListSortingStrategy, SortableContext, useSortable } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/sortable'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { CSS } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@dnd-kit/utilities'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Cell, flexRender, Header, HeaderGroup, Row } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@tanstack/react-table'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { GripVertical } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'lucide-react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableDndHeader</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">header</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">header</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Header</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">unknown</span><span style=\"color:#E6EDF3\">> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">column</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> header;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">attributes</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isDragging</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">listeners</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setNodeRef</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">transform</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">transition</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useSortable</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    id: header.column.id,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> style</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> CSSProperties</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    opacity: isDragging </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> 0.8</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    position: </span><span style=\"color:#A5D6FF\">'relative'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transform: </span><span style=\"color:#79C0FF\">CSS</span><span style=\"color:#E6EDF3\">.Translate.</span><span style=\"color:#D2A8FF\">toString</span><span style=\"color:#E6EDF3\">(transform),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transition,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    whiteSpace: </span><span style=\"color:#A5D6FF\">'nowrap'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    width: header.column.</span><span style=\"color:#D2A8FF\">getSize</span><span style=\"color:#E6EDF3\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    zIndex: isDragging </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHeadRowCell</span><span style=\"color:#79C0FF\"> header</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">header</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> dndStyle</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">style</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> dndRef</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">setNodeRef</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex items-center justify-start gap-0.5\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">Button</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          mode</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"icon\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          size</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"sm\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          variant</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"dim\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"-ms-2 size-6\"</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {...</span><span style=\"color:#E6EDF3\">attributes</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {...</span><span style=\"color:#E6EDF3\">listeners</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          aria-label</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"Drag to reorder\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">GripVertical</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"opacity-50\"</span><span style=\"color:#79C0FF\"> aria-hidden</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"true\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">Button</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">header.isPlaceholder </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#D2A8FF\"> flexRender</span><span style=\"color:#E6EDF3\">(header.column.columnDef.header, header.</span><span style=\"color:#D2A8FF\">getContext</span><span style=\"color:#E6EDF3\">())</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">props.tableLayout?.columnsResizable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getCanResize</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHeadRowCellResize</span><span style=\"color:#79C0FF\"> header</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">header</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableHeadRowCell</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableDndCell</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">cell</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">cell</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Cell</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">unknown</span><span style=\"color:#E6EDF3\">> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">isDragging</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setNodeRef</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">transform</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">transition</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useSortable</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    id: cell.column.id,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> style</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> CSSProperties</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    opacity: isDragging </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> 0.8</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    position: </span><span style=\"color:#A5D6FF\">'relative'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transform: </span><span style=\"color:#79C0FF\">CSS</span><span style=\"color:#E6EDF3\">.Translate.</span><span style=\"color:#D2A8FF\">toString</span><span style=\"color:#E6EDF3\">(transform),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    transition,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    width: cell.column.</span><span style=\"color:#D2A8FF\">getSize</span><span style=\"color:#E6EDF3\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    zIndex: isDragging </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowCell</span><span style=\"color:#79C0FF\"> cell</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">cell</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> dndStyle</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">style</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> dndRef</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">setNodeRef</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#D2A8FF\">flexRender</span><span style=\"color:#E6EDF3\">(cell.column.columnDef.cell, cell.</span><span style=\"color:#D2A8FF\">getContext</span><span style=\"color:#E6EDF3\">())</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRowCell</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableDnd</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">handleDragEnd</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#D2A8FF\">handleDragEnd</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> DragEndEvent</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">table</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isLoading</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> pagination</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> table.</span><span style=\"color:#D2A8FF\">getState</span><span style=\"color:#E6EDF3\">().pagination;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> sensors</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useSensors</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">useSensor</span><span style=\"color:#E6EDF3\">(MouseSensor, {}), </span><span style=\"color:#D2A8FF\">useSensor</span><span style=\"color:#E6EDF3\">(TouchSensor, {}), </span><span style=\"color:#D2A8FF\">useSensor</span><span style=\"color:#E6EDF3\">(KeyboardSensor, {}));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">DndContext</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      id</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">useId</span><span style=\"color:#E6EDF3\">()</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      collisionDetection</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">closestCenter</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      modifiers</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">[restrictToParentElement]</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onDragEnd</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleDragEnd</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      sensors</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">sensors</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"relative\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBase</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHead</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">table.</span><span style=\"color:#D2A8FF\">getHeaderGroups</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">headerGroup</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> HeaderGroup</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              console.</span><span style=\"color:#D2A8FF\">log</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'table.getState().columnOrder:'</span><span style=\"color:#E6EDF3\">, table.</span><span style=\"color:#D2A8FF\">getState</span><span style=\"color:#E6EDF3\">().columnOrder);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHeadRow</span><span style=\"color:#79C0FF\"> headerGroup</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">headerGroup</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;</span><span style=\"color:#7EE787\">SortableContext</span><span style=\"color:#79C0FF\"> items</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">table.</span><span style=\"color:#D2A8FF\">getState</span><span style=\"color:#E6EDF3\">().columnOrder</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> strategy</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">horizontalListSortingStrategy</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    {</span><span style=\"color:#E6EDF3\">headerGroup.headers.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">header</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">DataGridTableDndHeader</span><span style=\"color:#79C0FF\"> header</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">header</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;/</span><span style=\"color:#7EE787\">SortableContext</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableHeadRow</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableHead</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">(props.tableLayout?.stripped </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">props.tableLayout?.rowBorder) </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">DataGridTableRowSpacer</span><span style=\"color:#E6EDF3\"> /></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBody</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">props.loadingMode </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'skeleton'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> isLoading </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> pagination?.pageSize </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              Array.</span><span style=\"color:#D2A8FF\">from</span><span style=\"color:#E6EDF3\">({ length: pagination.pageSize }).</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">_</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">rowIndex</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeleton</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">rowIndex</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">table.</span><span style=\"color:#D2A8FF\">getVisibleFlatColumns</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">column</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">colIndex</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeletonCell</span><span style=\"color:#79C0FF\"> column</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">column</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">colIndex</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        {</span><span style=\"color:#E6EDF3\">column.columnDef.meta?.skeleton</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeletonCell</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeleton</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              ))</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> table.</span><span style=\"color:#D2A8FF\">getRowModel</span><span style=\"color:#E6EDF3\">().rows.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              table.</span><span style=\"color:#D2A8FF\">getRowModel</span><span style=\"color:#E6EDF3\">().rows.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">row</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Row</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;</span><span style=\"color:#7EE787\">Fragment</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row.id</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRow</span><span style=\"color:#79C0FF\"> row</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      {</span><span style=\"color:#E6EDF3\">row.</span><span style=\"color:#D2A8FF\">getVisibleCells</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">cell</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Cell</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">unknown</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          &#x3C;</span><span style=\"color:#7EE787\">SortableContext</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                            key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">cell.id</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                            items</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">table.</span><span style=\"color:#D2A8FF\">getState</span><span style=\"color:#E6EDF3\">().columnOrder</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                            strategy</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">horizontalListSortingStrategy</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                            &#x3C;</span><span style=\"color:#7EE787\">DataGridTableDndCell</span><span style=\"color:#79C0FF\"> cell</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">cell</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          &#x3C;/</span><span style=\"color:#7EE787\">SortableContext</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRow</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    {</span><span style=\"color:#E6EDF3\">row.</span><span style=\"color:#D2A8FF\">getIsExpanded</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowExpandded</span><span style=\"color:#79C0FF\"> row</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;/</span><span style=\"color:#7EE787\">Fragment</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              })</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">DataGridTableEmpty</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBody</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBase</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">DndContext</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> { DataGridTableDnd };</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/data-grid-table-dnd.tsx",
    "timestamp": "2025-08-21T11:53:05.976Z"
  }
}