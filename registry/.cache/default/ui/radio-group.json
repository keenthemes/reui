{
  "radio-group": {
    "code": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/lib/utils';\nimport { cva, VariantProps } from 'class-variance-authority';\nimport { Circle } from 'lucide-react';\nimport { RadioGroup as RadioGroupPrimitive } from 'radix-ui';\n\ntype RadioVariant = 'primary' | 'mono';\ntype RadioSize = 'sm' | 'md' | 'lg';\n\n// Define a cva function for the RadioGroup root.\nconst radioGroupVariants = cva('grid gap-2.5', {\n  variants: {\n    variant: {\n      primary: '',\n      mono: '',\n    },\n    size: {\n      sm: '',\n      md: '',\n      lg: '',\n    },\n  },\n  defaultVariants: {\n    variant: 'primary',\n    size: 'md',\n  },\n});\n\n// Create a context to pass the variant and size down to items.\nconst RadioGroupContext = React.createContext<{\n  variant: RadioVariant;\n  size: RadioSize;\n}>({ variant: 'primary', size: 'md' });\n\nfunction RadioGroup({\n  className,\n  variant,\n  size,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Root> & VariantProps<typeof radioGroupVariants>) {\n  return (\n    <RadioGroupContext.Provider value={{ variant: variant ?? 'primary', size: size ?? 'md' }}>\n      <RadioGroupPrimitive.Root\n        data-slot=\"radio-group\"\n        className={cn(radioGroupVariants({ variant, size }), className)}\n        {...props}\n      />\n    </RadioGroupContext.Provider>\n  );\n}\n\n// Define variants for the RadioGroupItem using cva.\nconst radioItemVariants = cva(\n  `\n    peer aspect-square rounded-full border outline-hidden ring-offset-background focus:outline-none focus-visible:ring-2 \n    focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\n    aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n    [[data-invalid=true]_&]:border-destructive/60 [[data-invalid=true]_&]:ring-destructive/10  dark:[[data-invalid=true]_&]:border-destructive dark:[[data-invalid=true]_&]:ring-destructive/20\n    border-input text-primary data-[state=checked]:bg-primary data-[state=checked]:border-primary data-[state=checked]:text-primary-foreground  \n  `,\n  {\n    variants: {\n      size: {\n        sm: 'size-4.5 [&_svg]:size-2',\n        md: 'size-5 [&_svg]:size-2.5',\n        lg: 'size-5.5 [&_svg]:size-3',\n      },\n    },\n    defaultVariants: {\n      size: 'md',\n    },\n  },\n);\n\nfunction RadioGroupItem({\n  className,\n  size,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Item> & VariantProps<typeof radioItemVariants>) {\n  // Use the variant and size from context if not provided at the item level.\n  const { size: contextSize } = React.useContext(RadioGroupContext);\n  const effectiveSize = size ?? contextSize;\n\n  return (\n    <RadioGroupPrimitive.Item\n      data-slot=\"radio-group-item\"\n      className={cn(radioItemVariants({ size: effectiveSize }), className)}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator data-slot=\"radio-group-indicator\" className=\"flex items-center justify-center\">\n        <Circle className=\"fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  );\n}\n\nexport { RadioGroup, RadioGroupItem };\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cva, VariantProps } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'class-variance-authority'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Circle } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'lucide-react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { RadioGroup </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#E6EDF3\"> RadioGroupPrimitive } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'radix-ui'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> RadioVariant</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'primary'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'mono'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> RadioSize</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'sm'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'lg'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Define a cva function for the RadioGroup root.</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> radioGroupVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'grid gap-2.5'</span><span style=\"color:#E6EDF3\">, {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      primary: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      mono: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      sm: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      md: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      lg: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variant: </span><span style=\"color:#A5D6FF\">'primary'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Create a context to pass the variant and size down to items.</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> RadioGroupContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">createContext</span><span style=\"color:#E6EDF3\">&#x3C;{</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  variant</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> RadioVariant</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  size</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> RadioSize</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}>({ variant: </span><span style=\"color:#A5D6FF\">'primary'</span><span style=\"color:#E6EDF3\">, size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\"> });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> RadioGroup</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  variant</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  size</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> RadioGroupPrimitive.Root> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#FFA657\"> VariantProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> radioGroupVariants>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">RadioGroupContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ variant: variant </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#A5D6FF\"> 'primary'</span><span style=\"color:#E6EDF3\">, size: size </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">RadioGroupPrimitive.Root</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"radio-group\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">radioGroupVariants</span><span style=\"color:#E6EDF3\">({ variant, size }), className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">RadioGroupContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Define variants for the RadioGroupItem using cva.</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> radioItemVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">  `</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    peer aspect-square rounded-full border outline-hidden ring-offset-background focus:outline-none focus-visible:ring-2 </span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    [[data-invalid=true]_&#x26;]:border-destructive/60 [[data-invalid=true]_&#x26;]:ring-destructive/10  dark:[[data-invalid=true]_&#x26;]:border-destructive dark:[[data-invalid=true]_&#x26;]:ring-destructive/20</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    border-input text-primary data-[state=checked]:bg-primary data-[state=checked]:border-primary data-[state=checked]:text-primary-foreground  </span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">  `</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        sm: </span><span style=\"color:#A5D6FF\">'size-4.5 [&#x26;_svg]:size-2'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'size-5 [&#x26;_svg]:size-2.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        lg: </span><span style=\"color:#A5D6FF\">'size-5.5 [&#x26;_svg]:size-3'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> RadioGroupItem</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  size</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> RadioGroupPrimitive.Item> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#FFA657\"> VariantProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> radioItemVariants>) {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Use the variant and size from context if not provided at the item level.</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">size</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#79C0FF\">contextSize</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(RadioGroupContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> effectiveSize</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> size </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#E6EDF3\"> contextSize;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">RadioGroupPrimitive.Item</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"radio-group-item\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">radioItemVariants</span><span style=\"color:#E6EDF3\">({ size: effectiveSize }), className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">RadioGroupPrimitive.Indicator</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"radio-group-indicator\"</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex items-center justify-center\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">Circle</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"fill-current text-current\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">RadioGroupPrimitive.Indicator</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">RadioGroupPrimitive.Item</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> { RadioGroup, RadioGroupItem };</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/radio-group.tsx",
    "timestamp": "2025-08-21T11:53:06.477Z"
  }
}