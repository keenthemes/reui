{
  "data-grid-table": {
    "code": "import * as React from 'react';\nimport { CSSProperties, Fragment, ReactNode } from 'react';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { useDataGrid } from '@/components/ui/data-grid';\nimport { Cell, Column, flexRender, Header, HeaderGroup, Row } from '@tanstack/react-table';\nimport { cva } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\n\nconst headerCellSpacingVariants = cva('', {\n  variants: {\n    size: {\n      dense: 'px-2.5 h-8',\n      default: 'px-4',\n    },\n  },\n  defaultVariants: {\n    size: 'default',\n  },\n});\n\nconst bodyCellSpacingVariants = cva('', {\n  variants: {\n    size: {\n      dense: 'px-2.5 py-2',\n      default: 'px-4 py-3',\n    },\n  },\n  defaultVariants: {\n    size: 'default',\n  },\n});\n\nfunction getPinningStyles<TData>(column: Column<TData>): CSSProperties {\n  const isPinned = column.getIsPinned();\n\n  return {\n    left: isPinned === 'left' ? `${column.getStart('left')}px` : undefined,\n    right: isPinned === 'right' ? `${column.getAfter('right')}px` : undefined,\n    position: isPinned ? 'sticky' : 'relative',\n    width: column.getSize(),\n    zIndex: isPinned ? 1 : 0,\n  };\n}\n\nfunction DataGridTableBase({ children }: { children: ReactNode }) {\n  const { props } = useDataGrid();\n\n  return (\n    <table\n      data-slot=\"data-grid-table\"\n      className={cn(\n        'w-full align-middle caption-bottom text-left rtl:text-right text-foreground font-normal text-sm',\n        !props.tableLayout?.columnsDraggable && 'border-separate border-spacing-0',\n        props.tableLayout?.width === 'fixed' ? 'table-fixed' : 'table-auto',\n        props.tableClassNames?.base,\n      )}\n    >\n      {children}\n    </table>\n  );\n}\n\nfunction DataGridTableHead({ children }: { children: ReactNode }) {\n  const { props } = useDataGrid();\n\n  return (\n    <thead\n      className={cn(\n        props.tableClassNames?.header,\n        props.tableLayout?.headerSticky && props.tableClassNames?.headerSticky,\n      )}\n    >\n      {children}\n    </thead>\n  );\n}\n\nfunction DataGridTableHeadRow<TData>({\n  children,\n  headerGroup,\n}: {\n  children: ReactNode;\n  headerGroup: HeaderGroup<TData>;\n}) {\n  const { props } = useDataGrid();\n\n  return (\n    <tr\n      key={headerGroup.id}\n      className={cn(\n        'bg-muted/40',\n        props.tableLayout?.headerBorder && '[&>th]:border-b',\n        props.tableLayout?.cellBorder && '[&_>:last-child]:border-e-0',\n        props.tableLayout?.stripped && 'bg-transparent',\n        props.tableLayout?.headerBackground === false && 'bg-transparent',\n        props.tableClassNames?.headerRow,\n      )}\n    >\n      {children}\n    </tr>\n  );\n}\n\nfunction DataGridTableHeadRowCell<TData>({\n  children,\n  header,\n  dndRef,\n  dndStyle,\n}: {\n  children: ReactNode;\n  header: Header<TData, unknown>;\n  dndRef?: React.Ref<HTMLTableCellElement>;\n  dndStyle?: CSSProperties;\n}) {\n  const { props } = useDataGrid();\n\n  const { column } = header;\n  const isPinned = column.getIsPinned();\n  const isLastLeftPinned = isPinned === 'left' && column.getIsLastColumn('left');\n  const isFirstRightPinned = isPinned === 'right' && column.getIsFirstColumn('right');\n  const headerCellSpacing = headerCellSpacingVariants({\n    size: props.tableLayout?.dense ? 'dense' : 'default',\n  });\n\n  return (\n    <th\n      key={header.id}\n      ref={dndRef}\n      style={{\n        ...(props.tableLayout?.width === 'fixed' && {\n          width: `${header.getSize()}px`,\n        }),\n        ...(props.tableLayout?.columnsPinnable && column.getCanPin() && getPinningStyles(column)),\n        ...(dndStyle ? dndStyle : null),\n      }}\n      data-pinned={isPinned || undefined}\n      data-last-col={isLastLeftPinned ? 'left' : isFirstRightPinned ? 'right' : undefined}\n      className={cn(\n        'relative h-10 text-left rtl:text-right align-middle font-normal text-accent-foreground [&:has([role=checkbox])]:pe-0',\n        headerCellSpacing,\n        props.tableLayout?.cellBorder && 'border-e',\n        props.tableLayout?.columnsResizable && column.getCanResize() && 'truncate',\n        props.tableLayout?.columnsPinnable &&\n          column.getCanPin() &&\n          '[&:not([data-pinned]):has(+[data-pinned])_div.cursor-col-resize:last-child]:opacity-0 [&[data-last-col=left]_div.cursor-col-resize:last-child]:opacity-0 [&[data-pinned=left][data-last-col=left]]:border-e! [&[data-pinned=right]:last-child_div.cursor-col-resize:last-child]:opacity-0 [&[data-pinned=right][data-last-col=right]]:border-s! [&[data-pinned][data-last-col]]:border-border data-pinned:bg-muted/90 data-pinned:backdrop-blur-xs',\n        header.column.columnDef.meta?.headerClassName,\n        column.getIndex() === 0 || column.getIndex() === header.headerGroup.headers.length - 1\n          ? props.tableClassNames?.edgeCell\n          : '',\n      )}\n    >\n      {children}\n    </th>\n  );\n}\n\nfunction DataGridTableHeadRowCellResize<TData>({ header }: { header: Header<TData, unknown> }) {\n  const { column } = header;\n\n  return (\n    <div\n      {...{\n        onDoubleClick: () => column.resetSize(),\n        onMouseDown: header.getResizeHandler(),\n        onTouchStart: header.getResizeHandler(),\n        className:\n          'absolute top-0 h-full w-4 cursor-col-resize user-select-none touch-none -end-2 z-10 flex justify-center before:absolute before:w-px before:inset-y-0 before:bg-border before:-translate-x-px',\n      }}\n    />\n  );\n}\n\nfunction DataGridTableRowSpacer() {\n  return <tbody aria-hidden=\"true\" className=\"h-2\"></tbody>;\n}\n\nfunction DataGridTableBody({ children }: { children: ReactNode }) {\n  const { props } = useDataGrid();\n\n  return (\n    <tbody\n      className={cn(\n        '[&_tr:last-child]:border-0',\n        props.tableLayout?.rowRounded && '[&_td:first-child]:rounded-s-lg [&_td:last-child]:rounded-e-lg',\n        props.tableClassNames?.body,\n      )}\n    >\n      {children}\n    </tbody>\n  );\n}\n\nfunction DataGridTableBodyRowSkeleton({ children }: { children: ReactNode }) {\n  const { table, props } = useDataGrid();\n\n  return (\n    <tr\n      className={cn(\n        'hover:bg-muted/40 data-[state=selected]:bg-muted/50',\n        props.onRowClick && 'cursor-pointer',\n        !props.tableLayout?.stripped &&\n          props.tableLayout?.rowBorder &&\n          'border-b border-border [&:not(:last-child)>td]:border-b',\n        props.tableLayout?.cellBorder && '[&_>:last-child]:border-e-0',\n        props.tableLayout?.stripped && 'odd:bg-muted/90 hover:bg-transparent odd:hover:bg-muted',\n        table.options.enableRowSelection && '[&_>:first-child]:relative',\n        props.tableClassNames?.bodyRow,\n      )}\n    >\n      {children}\n    </tr>\n  );\n}\n\nfunction DataGridTableBodyRowSkeletonCell<TData>({ children, column }: { children: ReactNode; column: Column<TData> }) {\n  const { props, table } = useDataGrid();\n  const bodyCellSpacing = bodyCellSpacingVariants({\n    size: props.tableLayout?.dense ? 'dense' : 'default',\n  });\n\n  return (\n    <td\n      className={cn(\n        'align-middle',\n        bodyCellSpacing,\n        props.tableLayout?.cellBorder && 'border-e',\n        props.tableLayout?.columnsResizable && column.getCanResize() && 'truncate',\n        column.columnDef.meta?.cellClassName,\n        props.tableLayout?.columnsPinnable &&\n          column.getCanPin() &&\n          '[&[data-pinned=left][data-last-col=left]]:border-e! [&[data-pinned=right][data-last-col=right]]:border-s! [&[data-pinned][data-last-col]]:border-border data-pinned:bg-background/90 data-pinned:backdrop-blur-xs\"',\n        column.getIndex() === 0 || column.getIndex() === table.getVisibleFlatColumns().length - 1\n          ? props.tableClassNames?.edgeCell\n          : '',\n      )}\n    >\n      {children}\n    </td>\n  );\n}\n\nfunction DataGridTableBodyRow<TData>({\n  children,\n  row,\n  dndRef,\n  dndStyle,\n}: {\n  children: ReactNode;\n  row: Row<TData>;\n  dndRef?: React.Ref<HTMLTableRowElement>;\n  dndStyle?: CSSProperties;\n}) {\n  const { props, table } = useDataGrid();\n\n  return (\n    <tr\n      ref={dndRef}\n      style={{ ...(dndStyle ? dndStyle : null) }}\n      data-state={table.options.enableRowSelection && row.getIsSelected() ? 'selected' : undefined}\n      onClick={() => props.onRowClick && props.onRowClick(row.original)}\n      className={cn(\n        'hover:bg-muted/40 data-[state=selected]:bg-muted/50',\n        props.onRowClick && 'cursor-pointer',\n        !props.tableLayout?.stripped &&\n          props.tableLayout?.rowBorder &&\n          'border-b border-border [&:not(:last-child)>td]:border-b',\n        props.tableLayout?.cellBorder && '[&_>:last-child]:border-e-0',\n        props.tableLayout?.stripped && 'odd:bg-muted/90 hover:bg-transparent odd:hover:bg-muted',\n        table.options.enableRowSelection && '[&_>:first-child]:relative',\n        props.tableClassNames?.bodyRow,\n      )}\n    >\n      {children}\n    </tr>\n  );\n}\n\nfunction DataGridTableBodyRowExpandded<TData>({ row }: { row: Row<TData> }) {\n  const { props, table } = useDataGrid();\n\n  return (\n    <tr className={cn(props.tableLayout?.rowBorder && '[&:not(:last-child)>td]:border-b')}>\n      <td colSpan={row.getVisibleCells().length}>\n        {table\n          .getAllColumns()\n          .find((column) => column.columnDef.meta?.expandedContent)\n          ?.columnDef.meta?.expandedContent?.(row.original)}\n      </td>\n    </tr>\n  );\n}\n\nfunction DataGridTableBodyRowCell<TData>({\n  children,\n  cell,\n  dndRef,\n  dndStyle,\n}: {\n  children: ReactNode;\n  cell: Cell<TData, unknown>;\n  dndRef?: React.Ref<HTMLTableCellElement>;\n  dndStyle?: CSSProperties;\n}) {\n  const { props } = useDataGrid();\n\n  const { column, row } = cell;\n  const isPinned = column.getIsPinned();\n  const isLastLeftPinned = isPinned === 'left' && column.getIsLastColumn('left');\n  const isFirstRightPinned = isPinned === 'right' && column.getIsFirstColumn('right');\n  const bodyCellSpacing = bodyCellSpacingVariants({\n    size: props.tableLayout?.dense ? 'dense' : 'default',\n  });\n\n  return (\n    <td\n      key={cell.id}\n      ref={dndRef}\n      {...(props.tableLayout?.columnsDraggable && !isPinned ? { cell } : {})}\n      style={{\n        ...(props.tableLayout?.columnsPinnable && column.getCanPin() && getPinningStyles(column)),\n        ...(dndStyle ? dndStyle : null),\n      }}\n      data-pinned={isPinned || undefined}\n      data-last-col={isLastLeftPinned ? 'left' : isFirstRightPinned ? 'right' : undefined}\n      className={cn(\n        'align-middle',\n        bodyCellSpacing,\n        props.tableLayout?.cellBorder && 'border-e',\n        props.tableLayout?.columnsResizable && column.getCanResize() && 'truncate',\n        cell.column.columnDef.meta?.cellClassName,\n        props.tableLayout?.columnsPinnable &&\n          column.getCanPin() &&\n          '[&[data-pinned=left][data-last-col=left]]:border-e! [&[data-pinned=right][data-last-col=right]]:border-s! [&[data-pinned][data-last-col]]:border-border data-pinned:bg-background/90 data-pinned:backdrop-blur-xs\"',\n        column.getIndex() === 0 || column.getIndex() === row.getVisibleCells().length - 1\n          ? props.tableClassNames?.edgeCell\n          : '',\n      )}\n    >\n      {children}\n    </td>\n  );\n}\n\nfunction DataGridTableEmpty() {\n  const { table, props } = useDataGrid();\n  const totalColumns = table.getAllColumns().length;\n\n  return (\n    <tr>\n      <td colSpan={totalColumns} className=\"text-center text-muted-foreground py-6\">\n        {props.emptyMessage || 'No data available'}\n      </td>\n    </tr>\n  );\n}\n\nfunction DataGridTableLoader() {\n  const { props } = useDataGrid();\n\n  return (\n    <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\">\n      <div className=\"text-muted-foreground bg-card  flex items-center gap-2 px-4 py-2 font-medium leading-none text-sm border shadow-xs rounded-md\">\n        <svg\n          className=\"animate-spin -ml-1 h-5 w-5 text-muted-foreground\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"3\"></circle>\n          <path\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          ></path>\n        </svg>\n        {props.loadingMessage || 'Loading...'}\n      </div>\n    </div>\n  );\n}\n\nfunction DataGridTableRowSelect<TData>({ row, size }: { row: Row<TData>; size?: 'sm' | 'md' | 'lg' }) {\n  return (\n    <>\n      <div\n        className={cn('hidden absolute top-0 bottom-0 start-0 w-[2px] bg-primary', row.getIsSelected() && 'block')}\n      ></div>\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n        size={size ?? 'sm'}\n        className=\"align-[inherit]\"\n      />\n    </>\n  );\n}\n\nfunction DataGridTableRowSelectAll({ size }: { size?: 'sm' | 'md' | 'lg' }) {\n  const { table, recordCount, isLoading } = useDataGrid();\n\n  return (\n    <Checkbox\n      checked={table.getIsAllPageRowsSelected() || (table.getIsSomePageRowsSelected() && 'indeterminate')}\n      disabled={isLoading || recordCount === 0}\n      onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n      aria-label=\"Select all\"\n      size={size}\n      className=\"align-[inherit]\"\n    />\n  );\n}\n\nfunction DataGridTable<TData>() {\n  const { table, isLoading, props } = useDataGrid();\n  const pagination = table.getState().pagination;\n\n  return (\n    <DataGridTableBase>\n      <DataGridTableHead>\n        {table.getHeaderGroups().map((headerGroup: HeaderGroup<TData>, index) => {\n          return (\n            <DataGridTableHeadRow headerGroup={headerGroup} key={index}>\n              {headerGroup.headers.map((header, index) => {\n                const { column } = header;\n\n                return (\n                  <DataGridTableHeadRowCell header={header} key={index}>\n                    {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}\n                    {props.tableLayout?.columnsResizable && column.getCanResize() && (\n                      <DataGridTableHeadRowCellResize header={header} />\n                    )}\n                  </DataGridTableHeadRowCell>\n                );\n              })}\n            </DataGridTableHeadRow>\n          );\n        })}\n      </DataGridTableHead>\n\n      {(props.tableLayout?.stripped || !props.tableLayout?.rowBorder) && <DataGridTableRowSpacer />}\n\n      <DataGridTableBody>\n        {props.loadingMode === 'skeleton' && isLoading && pagination?.pageSize ? (\n          Array.from({ length: pagination.pageSize }).map((_, rowIndex) => (\n            <DataGridTableBodyRowSkeleton key={rowIndex}>\n              {table.getVisibleFlatColumns().map((column, colIndex) => {\n                return (\n                  <DataGridTableBodyRowSkeletonCell column={column} key={colIndex}>\n                    {column.columnDef.meta?.skeleton}\n                  </DataGridTableBodyRowSkeletonCell>\n                );\n              })}\n            </DataGridTableBodyRowSkeleton>\n          ))\n        ) : table.getRowModel().rows.length ? (\n          table.getRowModel().rows.map((row: Row<TData>, index) => {\n            return (\n              <Fragment key={row.id}>\n                <DataGridTableBodyRow row={row} key={index}>\n                  {row.getVisibleCells().map((cell: Cell<TData, unknown>, colIndex) => {\n                    return (\n                      <DataGridTableBodyRowCell cell={cell} key={colIndex}>\n                        {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                      </DataGridTableBodyRowCell>\n                    );\n                  })}\n                </DataGridTableBodyRow>\n                {row.getIsExpanded() && <DataGridTableBodyRowExpandded row={row} />}\n              </Fragment>\n            );\n          })\n        ) : (\n          <DataGridTableEmpty />\n        )}\n      </DataGridTableBody>\n    </DataGridTableBase>\n  );\n}\n\nexport {\n  DataGridTable,\n  DataGridTableBase,\n  DataGridTableBody,\n  DataGridTableBodyRow,\n  DataGridTableBodyRowCell,\n  DataGridTableBodyRowExpandded,\n  DataGridTableBodyRowSkeleton,\n  DataGridTableBodyRowSkeletonCell,\n  DataGridTableEmpty,\n  DataGridTableHead,\n  DataGridTableHeadRow,\n  DataGridTableHeadRowCell,\n  DataGridTableHeadRowCellResize,\n  DataGridTableLoader,\n  DataGridTableRowSelect,\n  DataGridTableRowSelectAll,\n  DataGridTableRowSpacer,\n};\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { CSSProperties, Fragment, ReactNode } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Checkbox } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/checkbox'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { useDataGrid } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/data-grid'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Cell, Column, flexRender, Header, HeaderGroup, Row } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@tanstack/react-table'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cva } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'class-variance-authority'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> headerCellSpacingVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">, {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      dense: </span><span style=\"color:#A5D6FF\">'px-2.5 h-8'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      default: </span><span style=\"color:#A5D6FF\">'px-4'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: </span><span style=\"color:#A5D6FF\">'default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> bodyCellSpacingVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">, {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      dense: </span><span style=\"color:#A5D6FF\">'px-2.5 py-2'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      default: </span><span style=\"color:#A5D6FF\">'px-4 py-3'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: </span><span style=\"color:#A5D6FF\">'default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> getPinningStyles</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#FFA657\">column</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Column</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>)</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> CSSProperties</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isPinned</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getIsPinned</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    left: isPinned </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'left'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">column</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#D2A8FF\">getStart</span><span style=\"color:#A5D6FF\">(</span><span style=\"color:#A5D6FF\">'left'</span><span style=\"color:#A5D6FF\">)</span><span style=\"color:#A5D6FF\">}px`</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    right: isPinned </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'right'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">column</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#D2A8FF\">getAfter</span><span style=\"color:#A5D6FF\">(</span><span style=\"color:#A5D6FF\">'right'</span><span style=\"color:#A5D6FF\">)</span><span style=\"color:#A5D6FF\">}px`</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    position: isPinned </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'sticky'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'relative'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    width: column.</span><span style=\"color:#D2A8FF\">getSize</span><span style=\"color:#E6EDF3\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    zIndex: isPinned </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableBase</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">table</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"data-grid-table\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'w-full align-middle caption-bottom text-left rtl:text-right text-foreground font-normal text-sm'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        !</span><span style=\"color:#E6EDF3\">props.tableLayout?.columnsDraggable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'border-separate border-spacing-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.width </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'fixed'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> 'table-fixed'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'table-auto'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableClassNames?.base,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">table</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableHead</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">thead</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableClassNames?.header,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.headerSticky </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> props.tableClassNames?.headerSticky,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">thead</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableHeadRow</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  headerGroup</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  headerGroup</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> HeaderGroup</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">tr</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">headerGroup.id</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'bg-muted/40'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.headerBorder </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> '[&#x26;>th]:border-b'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.cellBorder </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> '[&#x26;_>:last-child]:border-e-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.stripped </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'bg-transparent'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.headerBackground </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'bg-transparent'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableClassNames?.headerRow,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">tr</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableHeadRowCell</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  header</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndRef</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndStyle</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  header</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Header</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">unknown</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndRef</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">Ref</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLTableCellElement</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndStyle</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> CSSProperties</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">column</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> header;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isPinned</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getIsPinned</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isLastLeftPinned</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> isPinned </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'left'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getIsLastColumn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'left'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isFirstRightPinned</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> isPinned </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'right'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getIsFirstColumn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'right'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> headerCellSpacing</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> headerCellSpacingVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: props.tableLayout?.dense </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'dense'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">th</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">header.id</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">dndRef</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        ...</span><span style=\"color:#E6EDF3\">(props.tableLayout?.width </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'fixed'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          width: </span><span style=\"color:#A5D6FF\">`${</span><span style=\"color:#E6EDF3\">header</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#D2A8FF\">getSize</span><span style=\"color:#A5D6FF\">()</span><span style=\"color:#A5D6FF\">}px`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        ...</span><span style=\"color:#E6EDF3\">(props.tableLayout?.columnsPinnable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getCanPin</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#D2A8FF\"> getPinningStyles</span><span style=\"color:#E6EDF3\">(column)),</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        ...</span><span style=\"color:#E6EDF3\">(dndStyle </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> dndStyle </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-pinned</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isPinned </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-last-col</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isLastLeftPinned </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'left'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#E6EDF3\"> isFirstRightPinned </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'right'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'relative h-10 text-left rtl:text-right align-middle font-normal text-accent-foreground [&#x26;:has([role=checkbox])]:pe-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        headerCellSpacing,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.cellBorder </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'border-e'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.columnsResizable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getCanResize</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'truncate'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.columnsPinnable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          column.</span><span style=\"color:#D2A8FF\">getCanPin</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          '[&#x26;:not([data-pinned]):has(+[data-pinned])_div.cursor-col-resize:last-child]:opacity-0 [&#x26;[data-last-col=left]_div.cursor-col-resize:last-child]:opacity-0 [&#x26;[data-pinned=left][data-last-col=left]]:border-e! [&#x26;[data-pinned=right]:last-child_div.cursor-col-resize:last-child]:opacity-0 [&#x26;[data-pinned=right][data-last-col=right]]:border-s! [&#x26;[data-pinned][data-last-col]]:border-border data-pinned:bg-muted/90 data-pinned:backdrop-blur-xs'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        header.column.columnDef.meta?.headerClassName,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        column.</span><span style=\"color:#D2A8FF\">getIndex</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getIndex</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> header.headerGroup.headers.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          ?</span><span style=\"color:#E6EDF3\"> props.tableClassNames?.edgeCell</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          :</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">th</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableHeadRowCellResize</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">header</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">header</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Header</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">unknown</span><span style=\"color:#E6EDF3\">> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">column</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> header;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        onDoubleClick</span><span style=\"color:#E6EDF3\">: () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">resetSize</span><span style=\"color:#E6EDF3\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        onMouseDown: header.</span><span style=\"color:#D2A8FF\">getResizeHandler</span><span style=\"color:#E6EDF3\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        onTouchStart: header.</span><span style=\"color:#D2A8FF\">getResizeHandler</span><span style=\"color:#E6EDF3\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className:</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'absolute top-0 h-full w-4 cursor-col-resize user-select-none touch-none -end-2 z-10 flex justify-center before:absolute before:w-px before:inset-y-0 before:bg-border before:-translate-x-px'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableRowSpacer</span><span style=\"color:#E6EDF3\">() {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">tbody</span><span style=\"color:#79C0FF\"> aria-hidden</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"true\"</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"h-2\"</span><span style=\"color:#E6EDF3\">>&#x3C;/</span><span style=\"color:#7EE787\">tbody</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableBody</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">tbody</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        '[&#x26;_tr:last-child]:border-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.rowRounded </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> '[&#x26;_td:first-child]:rounded-s-lg [&#x26;_td:last-child]:rounded-e-lg'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableClassNames?.body,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">tbody</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableBodyRowSkeleton</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">table</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">tr</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'hover:bg-muted/40 data-[state=selected]:bg-muted/50'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.onRowClick </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'cursor-pointer'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        !</span><span style=\"color:#E6EDF3\">props.tableLayout?.stripped </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          props.tableLayout?.rowBorder </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'border-b border-border [&#x26;:not(:last-child)>td]:border-b'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.cellBorder </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> '[&#x26;_>:last-child]:border-e-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.stripped </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'odd:bg-muted/90 hover:bg-transparent odd:hover:bg-muted'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        table.options.enableRowSelection </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> '[&#x26;_>:first-child]:relative'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableClassNames?.bodyRow,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">tr</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableBodyRowSkeletonCell</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">column</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#FFA657\">column</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Column</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">table</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> bodyCellSpacing</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> bodyCellSpacingVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: props.tableLayout?.dense </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'dense'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">td</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'align-middle'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        bodyCellSpacing,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.cellBorder </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'border-e'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.columnsResizable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getCanResize</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'truncate'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        column.columnDef.meta?.cellClassName,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.columnsPinnable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          column.</span><span style=\"color:#D2A8FF\">getCanPin</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          '[&#x26;[data-pinned=left][data-last-col=left]]:border-e! [&#x26;[data-pinned=right][data-last-col=right]]:border-s! [&#x26;[data-pinned][data-last-col]]:border-border data-pinned:bg-background/90 data-pinned:backdrop-blur-xs\"'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        column.</span><span style=\"color:#D2A8FF\">getIndex</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getIndex</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> table.</span><span style=\"color:#D2A8FF\">getVisibleFlatColumns</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          ?</span><span style=\"color:#E6EDF3\"> props.tableClassNames?.edgeCell</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          :</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">td</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableBodyRow</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  row</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndRef</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndStyle</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  row</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Row</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndRef</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">Ref</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLTableRowElement</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndStyle</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> CSSProperties</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">table</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">tr</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">dndRef</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">(dndStyle </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> dndStyle </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">) }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-state</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">table.options.enableRowSelection </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> row.</span><span style=\"color:#D2A8FF\">getIsSelected</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'selected'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onClick</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> props.onRowClick </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> props.</span><span style=\"color:#D2A8FF\">onRowClick</span><span style=\"color:#E6EDF3\">(row.original)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'hover:bg-muted/40 data-[state=selected]:bg-muted/50'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.onRowClick </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'cursor-pointer'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        !</span><span style=\"color:#E6EDF3\">props.tableLayout?.stripped </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          props.tableLayout?.rowBorder </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'border-b border-border [&#x26;:not(:last-child)>td]:border-b'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.cellBorder </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> '[&#x26;_>:last-child]:border-e-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.stripped </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'odd:bg-muted/90 hover:bg-transparent odd:hover:bg-muted'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        table.options.enableRowSelection </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> '[&#x26;_>:first-child]:relative'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableClassNames?.bodyRow,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">tr</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableBodyRowExpandded</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">row</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">row</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Row</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">table</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">tr</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(props.tableLayout?.rowBorder </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> '[&#x26;:not(:last-child)>td]:border-b'</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">td</span><span style=\"color:#79C0FF\"> colSpan</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row.</span><span style=\"color:#D2A8FF\">getVisibleCells</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">table</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          .</span><span style=\"color:#D2A8FF\">getAllColumns</span><span style=\"color:#E6EDF3\">()</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          .</span><span style=\"color:#D2A8FF\">find</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">column</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> column.columnDef.meta?.expandedContent)</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ?.columnDef.meta?.</span><span style=\"color:#D2A8FF\">expandedContent</span><span style=\"color:#E6EDF3\">?.(row.original)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">td</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">tr</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableBodyRowCell</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  cell</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndRef</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndStyle</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  cell</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Cell</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">unknown</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndRef</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">Ref</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLTableCellElement</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  dndStyle</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> CSSProperties</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">column</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">row</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> cell;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isPinned</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getIsPinned</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isLastLeftPinned</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> isPinned </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'left'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getIsLastColumn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'left'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> isFirstRightPinned</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> isPinned </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'right'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getIsFirstColumn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'right'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> bodyCellSpacing</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> bodyCellSpacingVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: props.tableLayout?.dense </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'dense'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">td</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">cell.id</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">dndRef</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">(props.tableLayout?.columnsDraggable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">isPinned </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> { cell } </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {})</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        ...</span><span style=\"color:#E6EDF3\">(props.tableLayout?.columnsPinnable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getCanPin</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#D2A8FF\"> getPinningStyles</span><span style=\"color:#E6EDF3\">(column)),</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        ...</span><span style=\"color:#E6EDF3\">(dndStyle </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> dndStyle </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-pinned</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isPinned </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-last-col</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isLastLeftPinned </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'left'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#E6EDF3\"> isFirstRightPinned </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'right'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'align-middle'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        bodyCellSpacing,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.cellBorder </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'border-e'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.columnsResizable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getCanResize</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'truncate'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        cell.column.columnDef.meta?.cellClassName,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        props.tableLayout?.columnsPinnable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          column.</span><span style=\"color:#D2A8FF\">getCanPin</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          '[&#x26;[data-pinned=left][data-last-col=left]]:border-e! [&#x26;[data-pinned=right][data-last-col=right]]:border-s! [&#x26;[data-pinned][data-last-col]]:border-border data-pinned:bg-background/90 data-pinned:backdrop-blur-xs\"'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        column.</span><span style=\"color:#D2A8FF\">getIndex</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getIndex</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> row.</span><span style=\"color:#D2A8FF\">getVisibleCells</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> -</span><span style=\"color:#79C0FF\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          ?</span><span style=\"color:#E6EDF3\"> props.tableClassNames?.edgeCell</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          :</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">td</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableEmpty</span><span style=\"color:#E6EDF3\">() {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">table</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> totalColumns</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> table.</span><span style=\"color:#D2A8FF\">getAllColumns</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">tr</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">td</span><span style=\"color:#79C0FF\"> colSpan</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">totalColumns</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-center text-muted-foreground py-6\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">props.emptyMessage </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> 'No data available'</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">td</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">tr</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableLoader</span><span style=\"color:#E6EDF3\">() {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-muted-foreground bg-card  flex items-center gap-2 px-4 py-2 font-medium leading-none text-sm border shadow-xs rounded-md\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">svg</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"animate-spin -ml-1 h-5 w-5 text-muted-foreground\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          xmlns</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"http://www.w3.org/2000/svg\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          fill</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"none\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          viewBox</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"0 0 24 24\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">circle</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"opacity-25\"</span><span style=\"color:#79C0FF\"> cx</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"12\"</span><span style=\"color:#79C0FF\"> cy</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"12\"</span><span style=\"color:#79C0FF\"> r</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"10\"</span><span style=\"color:#79C0FF\"> stroke</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"currentColor\"</span><span style=\"color:#79C0FF\"> strokeWidth</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"3\"</span><span style=\"color:#E6EDF3\">>&#x3C;/</span><span style=\"color:#7EE787\">circle</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">path</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"opacity-75\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            fill</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"currentColor\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            d</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          >&#x3C;/</span><span style=\"color:#7EE787\">path</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">svg</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">props.loadingMessage </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> 'Loading...'</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableRowSelect</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>({ </span><span style=\"color:#FFA657\">row</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">size</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">row</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Row</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>; </span><span style=\"color:#FFA657\">size</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#A5D6FF\"> 'sm'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'lg'</span><span style=\"color:#E6EDF3\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'hidden absolute top-0 bottom-0 start-0 w-[2px] bg-primary'</span><span style=\"color:#E6EDF3\">, row.</span><span style=\"color:#D2A8FF\">getIsSelected</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'block'</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      >&#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">Checkbox</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        checked</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row.</span><span style=\"color:#D2A8FF\">getIsSelected</span><span style=\"color:#E6EDF3\">()</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        onCheckedChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">value</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> row.</span><span style=\"color:#D2A8FF\">toggleSelected</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FF7B72\">!!</span><span style=\"color:#E6EDF3\">value)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        aria-label</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"Select row\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        size</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">size </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#A5D6FF\"> 'sm'</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"align-[inherit]\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTableRowSelectAll</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">size</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">size</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#A5D6FF\"> 'sm'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'lg'</span><span style=\"color:#E6EDF3\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">table</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">recordCount</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isLoading</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">Checkbox</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      checked</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">table.</span><span style=\"color:#D2A8FF\">getIsAllPageRowsSelected</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> (table.</span><span style=\"color:#D2A8FF\">getIsSomePageRowsSelected</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'indeterminate'</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      disabled</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">isLoading </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> recordCount </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onCheckedChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">value</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> table.</span><span style=\"color:#D2A8FF\">toggleAllPageRowsSelected</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FF7B72\">!!</span><span style=\"color:#E6EDF3\">value)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      aria-label</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"Select all\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      size</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">size</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"align-[inherit]\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> DataGridTable</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>() {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">table</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isLoading</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">props</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useDataGrid</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> pagination</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> table.</span><span style=\"color:#D2A8FF\">getState</span><span style=\"color:#E6EDF3\">().pagination;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBase</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHead</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">table.</span><span style=\"color:#D2A8FF\">getHeaderGroups</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">headerGroup</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> HeaderGroup</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHeadRow</span><span style=\"color:#79C0FF\"> headerGroup</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">headerGroup</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#E6EDF3\">headerGroup.headers.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">header</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">column</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> header;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHeadRowCell</span><span style=\"color:#79C0FF\"> header</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">header</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    {</span><span style=\"color:#E6EDF3\">header.isPlaceholder </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#D2A8FF\"> flexRender</span><span style=\"color:#E6EDF3\">(header.column.columnDef.header, header.</span><span style=\"color:#D2A8FF\">getContext</span><span style=\"color:#E6EDF3\">())</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    {</span><span style=\"color:#E6EDF3\">props.tableLayout?.columnsResizable </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> column.</span><span style=\"color:#D2A8FF\">getCanResize</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">DataGridTableHeadRowCellResize</span><span style=\"color:#79C0FF\"> header</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">header</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableHeadRowCell</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableHeadRow</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableHead</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">(props.tableLayout?.stripped </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">props.tableLayout?.rowBorder) </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">DataGridTableRowSpacer</span><span style=\"color:#E6EDF3\"> /></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBody</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">props.loadingMode </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'skeleton'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> isLoading </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> pagination?.pageSize </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          Array.</span><span style=\"color:#D2A8FF\">from</span><span style=\"color:#E6EDF3\">({ length: pagination.pageSize }).</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">_</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">rowIndex</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeleton</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">rowIndex</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#E6EDF3\">table.</span><span style=\"color:#D2A8FF\">getVisibleFlatColumns</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">column</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">colIndex</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeletonCell</span><span style=\"color:#79C0FF\"> column</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">column</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">colIndex</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    {</span><span style=\"color:#E6EDF3\">column.columnDef.meta?.skeleton</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeletonCell</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRowSkeleton</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ))</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> table.</span><span style=\"color:#D2A8FF\">getRowModel</span><span style=\"color:#E6EDF3\">().rows.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          table.</span><span style=\"color:#D2A8FF\">getRowModel</span><span style=\"color:#E6EDF3\">().rows.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">row</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Row</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">>, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">Fragment</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row.id</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRow</span><span style=\"color:#79C0FF\"> row</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">row.</span><span style=\"color:#D2A8FF\">getVisibleCells</span><span style=\"color:#E6EDF3\">().</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">cell</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Cell</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">TData</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">unknown</span><span style=\"color:#E6EDF3\">>, </span><span style=\"color:#FFA657\">colIndex</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowCell</span><span style=\"color:#79C0FF\"> cell</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">cell</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">colIndex</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        {</span><span style=\"color:#D2A8FF\">flexRender</span><span style=\"color:#E6EDF3\">(cell.column.columnDef.cell, cell.</span><span style=\"color:#D2A8FF\">getContext</span><span style=\"color:#E6EDF3\">())</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRowCell</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBodyRow</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                {</span><span style=\"color:#E6EDF3\">row.</span><span style=\"color:#D2A8FF\">getIsExpanded</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">DataGridTableBodyRowExpandded</span><span style=\"color:#79C0FF\"> row</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">row</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/</span><span style=\"color:#7EE787\">Fragment</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          })</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">DataGridTableEmpty</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBody</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">DataGridTableBase</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTable,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBase,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBody,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRow,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowCell,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowExpandded,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowSkeleton,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableBodyRowSkeletonCell,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableEmpty,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHead,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHeadRow,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHeadRowCell,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableHeadRowCellResize,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableLoader,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableRowSelect,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableRowSelectAll,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DataGridTableRowSpacer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/data-grid-table.tsx",
    "timestamp": "2025-08-21T11:53:06.031Z"
  }
}