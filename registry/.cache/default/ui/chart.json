{
  "chart": {
    "code": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/lib/utils';\nimport * as RechartsPrimitive from 'recharts';\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: '', dark: '.dark' } as const;\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode;\n    icon?: React.ComponentType;\n  } & ({ color?: string; theme?: never } | { color?: never; theme: Record<keyof typeof THEMES, string> });\n};\n\ntype ChartContextProps = {\n  config: ChartConfig;\n};\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null);\n\nfunction useChart() {\n  const context = React.useContext(ChartContext);\n\n  if (!context) {\n    throw new Error('useChart must be used within a <ChartContainer />');\n  }\n\n  return context;\n}\n\nfunction ChartContainer({\n  id,\n  className,\n  children,\n  config,\n  ...props\n}: React.ComponentProps<'div'> & {\n  config: ChartConfig;\n  children: React.ComponentProps<typeof RechartsPrimitive.ResponsiveContainer>['children'];\n}) {\n  const uniqueId = React.useId();\n  const chartId = `chart-${id || uniqueId.replace(/:/g, '')}`;\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-slot=\"chart\"\n        data-chart={chartId}\n        className={cn(\n          \"[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-sector]:outline-hidden [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-surface]:outline-hidden\",\n          className,\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>{children}</RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  );\n}\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(([, config]) => config.theme || config.color);\n\n  if (!colorConfig.length) {\n    return null;\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color = itemConfig.theme?.[theme as keyof typeof itemConfig.theme] || itemConfig.color;\n    return color ? `  --color-${key}: ${color};` : null;\n  })\n  .join('\\n')}\n}\n`,\n          )\n          .join('\\n'),\n      }}\n    />\n  );\n};\n\nconst ChartTooltip = RechartsPrimitive.Tooltip;\n\nfunction ChartTooltipContent({\n  active,\n  payload,\n  className,\n  indicator = 'dot',\n  hideLabel = false,\n  hideIndicator = false,\n  label,\n  labelFormatter,\n  labelClassName,\n  formatter,\n  color,\n  nameKey,\n  labelKey,\n}: React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n  React.ComponentProps<'div'> & {\n    hideLabel?: boolean;\n    hideIndicator?: boolean;\n    indicator?: 'line' | 'dot' | 'dashed';\n    nameKey?: string;\n    labelKey?: string;\n  }) {\n  const { config } = useChart();\n\n  const tooltipLabel = React.useMemo(() => {\n    if (hideLabel || !payload?.length) {\n      return null;\n    }\n\n    const [item] = payload;\n    const key = `${labelKey || item?.dataKey || item?.name || 'value'}`;\n    const itemConfig = getPayloadConfigFromPayload(config, item, key);\n    const value =\n      !labelKey && typeof label === 'string' ? config[label as keyof typeof config]?.label || label : itemConfig?.label;\n\n    if (labelFormatter) {\n      return <div className={cn('font-medium', labelClassName)}>{labelFormatter(value, payload)}</div>;\n    }\n\n    if (!value) {\n      return null;\n    }\n\n    return <div className={cn('font-medium', labelClassName)}>{value}</div>;\n  }, [label, labelFormatter, payload, hideLabel, labelClassName, config, labelKey]);\n\n  if (!active || !payload?.length) {\n    return null;\n  }\n\n  const nestLabel = payload.length === 1 && indicator !== 'dot';\n\n  return (\n    <div\n      className={cn(\n        'border-border/50 bg-background grid min-w-[8rem] items-start gap-1.5 rounded-lg border px-2.5 py-1.5 text-xs shadow-xl',\n        className,\n      )}\n    >\n      {!nestLabel ? tooltipLabel : null}\n      <div className=\"grid gap-1.5\">\n        {payload.map((item, index) => {\n          const key = `${nameKey || item.name || item.dataKey || 'value'}`;\n          const itemConfig = getPayloadConfigFromPayload(config, item, key);\n          const indicatorColor = color || item.payload.fill || item.color;\n\n          return (\n            <div\n              key={item.dataKey}\n              className={cn(\n                '[&>svg]:text-muted-foreground flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5',\n                indicator === 'dot' && 'items-center',\n              )}\n            >\n              {formatter && item?.value !== undefined && item.name ? (\n                formatter(item.value, item.name, item, index, item.payload)\n              ) : (\n                <>\n                  {itemConfig?.icon ? (\n                    <itemConfig.icon />\n                  ) : (\n                    !hideIndicator && (\n                      <div\n                        className={cn('shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)', {\n                          'h-2.5 w-2.5': indicator === 'dot',\n                          'w-1': indicator === 'line',\n                          'w-0 border-[1.5px] border-dashed bg-transparent': indicator === 'dashed',\n                          'my-0.5': nestLabel && indicator === 'dashed',\n                        })}\n                        style={\n                          {\n                            '--color-bg': indicatorColor,\n                            '--color-border': indicatorColor,\n                          } as React.CSSProperties\n                        }\n                      />\n                    )\n                  )}\n                  <div\n                    className={cn('flex flex-1 justify-between leading-none', nestLabel ? 'items-end' : 'items-center')}\n                  >\n                    <div className=\"grid gap-1.5\">\n                      {nestLabel ? tooltipLabel : null}\n                      <span className=\"text-muted-foreground\">{itemConfig?.label || item.name}</span>\n                    </div>\n                    {item.value && (\n                      <span className=\"text-foreground font-mono font-medium tabular-nums\">\n                        {item.value.toLocaleString()}\n                      </span>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nconst ChartLegend = RechartsPrimitive.Legend;\n\nfunction ChartLegendContent({\n  className,\n  hideIcon = false,\n  payload,\n  verticalAlign = 'bottom',\n  nameKey,\n}: React.ComponentProps<'div'> &\n  Pick<RechartsPrimitive.LegendProps, 'payload' | 'verticalAlign'> & {\n    hideIcon?: boolean;\n    nameKey?: string;\n  }) {\n  const { config } = useChart();\n\n  if (!payload?.length) {\n    return null;\n  }\n\n  return (\n    <div className={cn('flex items-center justify-center gap-4', verticalAlign === 'top' ? 'pb-3' : 'pt-3', className)}>\n      {payload.map((item) => {\n        const key = `${nameKey || item.dataKey || 'value'}`;\n        const itemConfig = getPayloadConfigFromPayload(config, item, key);\n\n        return (\n          <div\n            key={item.value}\n            className={cn('[&>svg]:text-muted-foreground flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3')}\n          >\n            {itemConfig?.icon && !hideIcon ? (\n              <itemConfig.icon />\n            ) : (\n              <div\n                className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                style={{\n                  backgroundColor: item.color,\n                }}\n              />\n            )}\n            {itemConfig?.label}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(config: ChartConfig, payload: unknown, key: string) {\n  if (typeof payload !== 'object' || payload === null) {\n    return undefined;\n  }\n\n  const payloadPayload =\n    'payload' in payload && typeof payload.payload === 'object' && payload.payload !== null\n      ? payload.payload\n      : undefined;\n\n  let configLabelKey: string = key;\n\n  if (key in payload && typeof payload[key as keyof typeof payload] === 'string') {\n    configLabelKey = payload[key as keyof typeof payload] as string;\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === 'string'\n  ) {\n    configLabelKey = payloadPayload[key as keyof typeof payloadPayload] as string;\n  }\n\n  return configLabelKey in config ? config[configLabelKey] : config[key as keyof typeof config];\n}\n\nexport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent, ChartStyle };\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> RechartsPrimitive </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'recharts'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Format: { THEME_NAME: CSS_SELECTOR }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> THEMES</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> { light: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">, dark: </span><span style=\"color:#A5D6FF\">'.dark'</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FF7B72\"> const</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> type</span><span style=\"color:#FFA657\"> ChartConfig</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  [</span><span style=\"color:#FFA657\">k</span><span style=\"color:#FF7B72\"> in</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">]</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    label</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    icon</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentType</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  } </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#E6EDF3\"> ({ </span><span style=\"color:#FFA657\">color</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#FFA657\">theme</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> never</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">|</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">color</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> never</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#FFA657\">theme</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">keyof</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#79C0FF\"> THEMES</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">> });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> ChartContextProps</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  config</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ChartConfig</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> ChartContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">createContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">ChartContextProps</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> useChart</span><span style=\"color:#E6EDF3\">() {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> context</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(ChartContext);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">context) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    throw</span><span style=\"color:#FF7B72\"> new</span><span style=\"color:#D2A8FF\"> Error</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'useChart must be used within a &#x3C;ChartContainer />'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> context;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> ChartContainer</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  id</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  config</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  config</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ChartConfig</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> RechartsPrimitive.ResponsiveContainer>[</span><span style=\"color:#A5D6FF\">'children'</span><span style=\"color:#E6EDF3\">];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> uniqueId</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useId</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> chartId</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> `chart-${</span><span style=\"color:#E6EDF3\">id</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> uniqueId</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#D2A8FF\">replace</span><span style=\"color:#A5D6FF\">(</span><span style=\"color:#A5D6FF\">/:/</span><span style=\"color:#FF7B72\">g</span><span style=\"color:#A5D6FF\">, </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#A5D6FF\">)</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">ChartContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ config }</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"chart\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-chart</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">chartId</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          \"[&#x26;_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&#x26;_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&#x26;_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&#x26;_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&#x26;_.recharts-radial-bar-background-sector]:fill-muted [&#x26;_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&#x26;_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&#x26;_.recharts-dot[stroke='#fff']]:stroke-transparent [&#x26;_.recharts-layer]:outline-hidden [&#x26;_.recharts-sector]:outline-hidden [&#x26;_.recharts-sector[stroke='#fff']]:stroke-transparent [&#x26;_.recharts-surface]:outline-hidden\"</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">ChartStyle</span><span style=\"color:#79C0FF\"> id</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">chartId</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> config</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">config</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">RechartsPrimitive.ResponsiveContainer</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">RechartsPrimitive.ResponsiveContainer</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">ChartContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#D2A8FF\"> ChartStyle</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> ({ </span><span style=\"color:#FFA657\">id</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">config</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">id</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#FFA657\">config</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ChartConfig</span><span style=\"color:#E6EDF3\"> }) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> colorConfig</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> Object.</span><span style=\"color:#D2A8FF\">entries</span><span style=\"color:#E6EDF3\">(config).</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">(([, </span><span style=\"color:#FFA657\">config</span><span style=\"color:#E6EDF3\">]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> config.theme </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> config.color);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">colorConfig.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">style</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      dangerouslySetInnerHTML</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        __html: Object.</span><span style=\"color:#D2A8FF\">entries</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">THEMES</span><span style=\"color:#E6EDF3\">)</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          .</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            ([</span><span style=\"color:#FFA657\">theme</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">prefix</span><span style=\"color:#E6EDF3\">]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#A5D6FF\"> `</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">${</span><span style=\"color:#E6EDF3\">prefix</span><span style=\"color:#A5D6FF\">} [data-chart=${</span><span style=\"color:#E6EDF3\">id</span><span style=\"color:#A5D6FF\">}] {</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">${</span><span style=\"color:#E6EDF3\">colorConfig</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">  .</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#A5D6FF\">(([</span><span style=\"color:#79C0FF\">key</span><span style=\"color:#A5D6FF\">, </span><span style=\"color:#79C0FF\">itemConfig</span><span style=\"color:#A5D6FF\">]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> color</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> itemConfig.theme?.[theme </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FF7B72\"> keyof</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> itemConfig.theme] </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> itemConfig.color;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> color </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> `  --color-${</span><span style=\"color:#E6EDF3\">key</span><span style=\"color:#A5D6FF\">}: ${</span><span style=\"color:#E6EDF3\">color</span><span style=\"color:#A5D6FF\">};`</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span><span style=\"color:#A5D6FF\">)</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">  .</span><span style=\"color:#D2A8FF\">join</span><span style=\"color:#A5D6FF\">(</span><span style=\"color:#A5D6FF\">'</span><span style=\"color:#FF7B72\">\\n</span><span style=\"color:#A5D6FF\">'</span><span style=\"color:#A5D6FF\">)</span><span style=\"color:#A5D6FF\">}</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">}</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          )</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          .</span><span style=\"color:#D2A8FF\">join</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'</span><span style=\"color:#FF7B72\">\\n</span><span style=\"color:#A5D6FF\">'</span><span style=\"color:#E6EDF3\">),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> ChartTooltip</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> RechartsPrimitive.Tooltip;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> ChartTooltipContent</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  active</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  payload</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  indicator</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'dot'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  hideLabel</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  hideIndicator</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  label</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  labelFormatter</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  labelClassName</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  formatter</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  color</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  nameKey</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  labelKey</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> RechartsPrimitive.Tooltip> </span><span style=\"color:#FF7B72\">&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    hideLabel</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    hideIndicator</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    indicator</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#A5D6FF\"> 'line'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'dot'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'dashed'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    nameKey</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    labelKey</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">config</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useChart</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> tooltipLabel</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useMemo</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (hideLabel </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">payload?.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">item</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> payload;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">labelKey</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> item</span><span style=\"color:#A5D6FF\">?.</span><span style=\"color:#E6EDF3\">dataKey</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> item</span><span style=\"color:#A5D6FF\">?.</span><span style=\"color:#E6EDF3\">name</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#A5D6FF\"> 'value'}`</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> itemConfig</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> getPayloadConfigFromPayload</span><span style=\"color:#E6EDF3\">(config, item, key);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\"> =</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      !</span><span style=\"color:#E6EDF3\">labelKey </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> label </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'string'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> config[label </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FF7B72\"> keyof</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> config]?.label </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> label </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> itemConfig?.label;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (labelFormatter) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'font-medium'</span><span style=\"color:#E6EDF3\">, labelClassName)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#D2A8FF\">labelFormatter</span><span style=\"color:#E6EDF3\">(value, payload)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">value) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'font-medium'</span><span style=\"color:#E6EDF3\">, labelClassName)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">value</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [label, labelFormatter, payload, hideLabel, labelClassName, config, labelKey]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">active </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">payload?.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> nestLabel</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> payload.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ===</span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> indicator </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#A5D6FF\"> 'dot'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'border-border/50 bg-background grid min-w-[8rem] items-start gap-1.5 rounded-lg border px-2.5 py-1.5 text-xs shadow-xl'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {!</span><span style=\"color:#E6EDF3\">nestLabel </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> tooltipLabel </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"grid gap-1.5\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">payload.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">nameKey</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> item</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#E6EDF3\">name</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> item</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#E6EDF3\">dataKey</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#A5D6FF\"> 'value'}`</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> itemConfig</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> getPayloadConfigFromPayload</span><span style=\"color:#E6EDF3\">(config, item, key);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> indicatorColor</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> color </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> item.payload.fill </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> item.color;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">item.dataKey</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">                '[&#x26;>svg]:text-muted-foreground flex w-full flex-wrap items-stretch gap-2 [&#x26;>svg]:h-2.5 [&#x26;>svg]:w-2.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                indicator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'dot'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'items-center'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#E6EDF3\">formatter </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> item?.value </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> item.name </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                formatter</span><span style=\"color:#E6EDF3\">(item.value, item.name, item, index, item.payload)</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">itemConfig?.icon </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">itemConfig.icon</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    !</span><span style=\"color:#E6EDF3\">hideIndicator </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)'</span><span style=\"color:#E6EDF3\">, {</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">                          'h-2.5 w-2.5'</span><span style=\"color:#E6EDF3\">: indicator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'dot'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">                          'w-1'</span><span style=\"color:#E6EDF3\">: indicator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'line'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">                          'w-0 border-[1.5px] border-dashed bg-transparent'</span><span style=\"color:#E6EDF3\">: indicator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'dashed'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">                          'my-0.5'</span><span style=\"color:#E6EDF3\">: nestLabel </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> indicator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'dashed'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                        style</span><span style=\"color:#FF7B72\">={</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          {</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">                            '--color-bg'</span><span style=\"color:#E6EDF3\">: indicatorColor,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">                            '--color-border'</span><span style=\"color:#E6EDF3\">: indicatorColor,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          } </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">CSSProperties</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    )</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'flex flex-1 justify-between leading-none'</span><span style=\"color:#E6EDF3\">, nestLabel </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> 'items-end'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'items-center'</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"grid gap-1.5\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      {</span><span style=\"color:#E6EDF3\">nestLabel </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> tooltipLabel </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-muted-foreground\"</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">itemConfig?.label </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> item.name</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    {</span><span style=\"color:#E6EDF3\">item.value </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-foreground font-mono font-medium tabular-nums\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        {</span><span style=\"color:#E6EDF3\">item.value.</span><span style=\"color:#D2A8FF\">toLocaleString</span><span style=\"color:#E6EDF3\">()</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> ChartLegend</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> RechartsPrimitive.Legend;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> ChartLegendContent</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  hideIcon</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  payload</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  verticalAlign</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'bottom'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  nameKey</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  Pick</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">RechartsPrimitive</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">LegendProps</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'payload'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'verticalAlign'</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    hideIcon</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    nameKey</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">config</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useChart</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">payload?.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'flex items-center justify-center gap-4'</span><span style=\"color:#E6EDF3\">, verticalAlign </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'top'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> 'pb-3'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'pt-3'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">payload.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">nameKey</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> item</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#E6EDF3\">dataKey</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#A5D6FF\"> 'value'}`</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> itemConfig</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> getPayloadConfigFromPayload</span><span style=\"color:#E6EDF3\">(config, item, key);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">item.value</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'[&#x26;>svg]:text-muted-foreground flex items-center gap-1.5 [&#x26;>svg]:h-3 [&#x26;>svg]:w-3'</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">itemConfig?.icon </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">hideIcon </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">itemConfig.icon</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"h-2 w-2 shrink-0 rounded-[2px]\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                style</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  backgroundColor: item.color,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">itemConfig?.label</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Helper to extract item config from a payload.</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> getPayloadConfigFromPayload</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">config</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> ChartConfig</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">payload</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">key</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> payload </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#A5D6FF\"> 'object'</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> payload </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> payloadPayload</span><span style=\"color:#FF7B72\"> =</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'payload'</span><span style=\"color:#FF7B72\"> in</span><span style=\"color:#E6EDF3\"> payload </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> payload.payload </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'object'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> payload.payload </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#79C0FF\"> null</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      ?</span><span style=\"color:#E6EDF3\"> payload.payload</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  let</span><span style=\"color:#E6EDF3\"> configLabelKey</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> key;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (key </span><span style=\"color:#FF7B72\">in</span><span style=\"color:#E6EDF3\"> payload </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> payload[key </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FF7B72\"> keyof</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> payload] </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'string'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    configLabelKey </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> payload[key </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FF7B72\"> keyof</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> payload] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    payloadPayload </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    key </span><span style=\"color:#FF7B72\">in</span><span style=\"color:#E6EDF3\"> payloadPayload </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    typeof</span><span style=\"color:#E6EDF3\"> payloadPayload[key </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FF7B72\"> keyof</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> payloadPayload] </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'string'</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  ) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    configLabelKey </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> payloadPayload[key </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FF7B72\"> keyof</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> payloadPayload] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> configLabelKey </span><span style=\"color:#FF7B72\">in</span><span style=\"color:#E6EDF3\"> config </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> config[configLabelKey] </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> config[key </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FF7B72\"> keyof</span><span style=\"color:#FF7B72\"> typeof</span><span style=\"color:#E6EDF3\"> config];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent, ChartStyle };</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/chart.tsx",
    "timestamp": "2025-08-21T11:53:05.801Z"
  }
}